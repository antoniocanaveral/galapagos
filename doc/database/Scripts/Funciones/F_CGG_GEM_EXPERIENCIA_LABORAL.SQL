/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL.
* @param IN_CGEXL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @param IN_CGEXL_FECHA_INICIO FECHA DE INICIO DE ACTIVIDADES DENTRO DE LA EMPRESA
* @param IN_CGEXL_FECHA_FIN FECHA DE FINALIZACION DE LAS ACTIVIDADES DENTRO DE LA EMPRESA
* @param IN_CGEXL_RAZON_SOCIAL EMPRESA DONDE LABORO
* @param IN_CGEXL_CIUDAD CIUDAD DONDE ADQUIRIO LA EXPERIENCIA.
* @param IN_CGEXL_CARGO NOMBRE DEL CARGO
* @param IN_CGEXL_DESCRIPCION DESCRIPCION DEL CARGO DESEMPENIADO
* @param IN_CGEXL_PERSONAS_CARGO CANTIDAD DE PERSONAS BAJO SU MANDO
* @param IN_CGEXL_CONTACTO NOMBRE DE LA PERSONA PARA CONTACTARSE POR REFERENCIAS
* @param IN_CGEXL_TELEFONO NUMERO DE TELEFONO DE LA PERSONA PARA CONTACTARSE POR REFERENCIAS
* @param IN_CGEXL_OBSERVACIONES INFORMACION ADICIONAL
* @param IN_CGEXL_ESTADO ESTADO DEL REGISTRO
* @param IN_CGEXL_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CGEXL_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_INSERT(
IN IN_CGEXL_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CODIGO%TYPE,
IN IN_CRPER_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CRPER_CODIGO%TYPE,
IN IN_CGEXL_FECHA_INICIO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_FECHA_INICIO%TYPE,
IN IN_CGEXL_FECHA_FIN SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_FECHA_FIN%TYPE,
IN IN_CGEXL_RAZON_SOCIAL SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_RAZON_SOCIAL%TYPE,
IN IN_CGEXL_CIUDAD SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CIUDAD%TYPE,
IN IN_CGEXL_CARGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CARGO%TYPE,
IN IN_CGEXL_DESCRIPCION SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_DESCRIPCION%TYPE,
IN IN_CGEXL_PERSONAS_CARGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_PERSONAS_CARGO%TYPE,
IN IN_CGEXL_CONTACTO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CONTACTO%TYPE,
IN IN_CGEXL_TELEFONO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_TELEFONO%TYPE,
IN IN_CGEXL_OBSERVACIONES SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_OBSERVACIONES%TYPE,
IN IN_CGEXL_ESTADO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_ESTADO%TYPE,
IN IN_CGEXL_USUARIO_INSERT SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CGEXL_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_GEM_EXPERIENCIA_LABORAL','CGEXL_CODIGO','CGEXL') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CGEXL_CODIGO;
	END IF;
	INSERT INTO SII.CGG_GEM_EXPERIENCIA_LABORAL(
		CGEXL_CODIGO, 
		CRPER_CODIGO, 
		CGEXL_FECHA_INICIO, 
		CGEXL_FECHA_FIN, 
		CGEXL_RAZON_SOCIAL, 
		CGEXL_CIUDAD, 
		CGEXL_CARGO, 
		CGEXL_DESCRIPCION, 
		CGEXL_PERSONAS_CARGO, 
		CGEXL_CONTACTO, 
		CGEXL_TELEFONO, 
		CGEXL_OBSERVACIONES, 
		CGEXL_ESTADO, 
		CGEXL_FECHA_INSERT, 
		CGEXL_USUARIO_INSERT, 
		CGEXL_FECHA_UPDATE, 
		CGEXL_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRPER_CODIGO, 
		IN_CGEXL_FECHA_INICIO, 
		IN_CGEXL_FECHA_FIN, 
		IN_CGEXL_RAZON_SOCIAL, 
		IN_CGEXL_CIUDAD, 
		IN_CGEXL_CARGO, 
		IN_CGEXL_DESCRIPCION, 
		IN_CGEXL_PERSONAS_CARGO, 
		IN_CGEXL_CONTACTO, 
		IN_CGEXL_TELEFONO, 
		IN_CGEXL_OBSERVACIONES, 
		IN_CGEXL_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CGEXL_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CGEXL_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CGEXL_CODIGO, 
		CRPER_CODIGO, 
		CGEXL_FECHA_INICIO, 
		CGEXL_FECHA_FIN, 
		CGEXL_RAZON_SOCIAL, 
		CGEXL_CIUDAD, 
		CGEXL_CARGO, 
		CGEXL_DESCRIPCION, 
		CGEXL_PERSONAS_CARGO, 
		CGEXL_CONTACTO, 
		CGEXL_TELEFONO, 
		CGEXL_OBSERVACIONES, 
		CGEXL_ESTADO, 
		CGEXL_FECHA_INSERT, 
		CGEXL_USUARIO_INSERT, 
		CGEXL_FECHA_UPDATE, 
		CGEXL_USUARIO_UPDATE
	FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE CGEXL_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CGEXL_CODIGO, 
		CRPER_CODIGO, 
		CGEXL_FECHA_INICIO, 
		CGEXL_FECHA_FIN, 
		CGEXL_RAZON_SOCIAL, 
		CGEXL_CIUDAD, 
		CGEXL_CARGO, 
		CGEXL_DESCRIPCION, 
		CGEXL_PERSONAS_CARGO, 
		CGEXL_CONTACTO, 
		CGEXL_TELEFONO, 
		CGEXL_OBSERVACIONES, 
		CGEXL_ESTADO, 
		CGEXL_FECHA_INSERT, 
		CGEXL_USUARIO_INSERT, 
		CGEXL_FECHA_UPDATE, 
		CGEXL_USUARIO_UPDATE
	FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE CGEXL_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CGEXL_FECHA_INICIO, CURRENT_TIMESTAMP)||'' ''||COALESCE(CGEXL_FECHA_FIN, CURRENT_TIMESTAMP)||'' ''||COALESCE(CGEXL_RAZON_SOCIAL, '''')||'' ''||COALESCE(CGEXL_CIUDAD, '''')||'' ''||COALESCE(CGEXL_CARGO, '''')||'' ''||COALESCE(CGEXL_DESCRIPCION, '''')||'' ''||COALESCE(CGEXL_PERSONAS_CARGO, 0)||'' ''||COALESCE(CGEXL_CONTACTO, '''')||'' ''||COALESCE(CGEXL_TELEFONO, '''')||'' ''||COALESCE(CGEXL_OBSERVACIONES, '''')||'' ''||COALESCE(CGEXL_ESTADO, FALSE)||'' ''||COALESCE(CGEXL_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CGEXL_USUARIO_INSERT, '''')||'' ''||COALESCE(CGEXL_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CGEXL_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE CGEXL_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE CGEXL_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CGEXL_FECHA_INICIO, CURRENT_TIMESTAMP)||' '||COALESCE(CGEXL_FECHA_FIN, CURRENT_TIMESTAMP)||' '||COALESCE(CGEXL_RAZON_SOCIAL, '''')||' '||COALESCE(CGEXL_CIUDAD, '''')||' '||COALESCE(CGEXL_CARGO, '''')||' '||COALESCE(CGEXL_DESCRIPCION, '''')||' '||COALESCE(CGEXL_PERSONAS_CARGO, 0)||' '||COALESCE(CGEXL_CONTACTO, '''')||' '||COALESCE(CGEXL_TELEFONO, '''')||' '||COALESCE(CGEXL_OBSERVACIONES, '''')||' '||COALESCE(CGEXL_ESTADO, FALSE)||' '||COALESCE(CGEXL_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CGEXL_USUARIO_INSERT, '''')||' '||COALESCE(CGEXL_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CGEXL_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_GEM_EXPERIENCIA_LABORAL.
* @param IN_CGEXL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @param IN_CGEXL_FECHA_INICIO FECHA DE INICIO DE ACTIVIDADES DENTRO DE LA EMPRESA
* @param IN_CGEXL_FECHA_FIN FECHA DE FINALIZACION DE LAS ACTIVIDADES DENTRO DE LA EMPRESA
* @param IN_CGEXL_RAZON_SOCIAL EMPRESA DONDE LABORO
* @param IN_CGEXL_CIUDAD IDENTIFICATIVO DE CIUDAD.
* @param IN_CGEXL_CARGO NOMBRE DEL CARGO
* @param IN_CGEXL_DESCRIPCION DESCRIPCION DEL CARGO DESEMPENIADO
* @param IN_CGEXL_PERSONAS_CARGO CANTIDAD DE PERSONAS BAJO SU MANDO
* @param IN_CGEXL_CONTACTO NOMBRE DE LA PERSONA PARA CONTACTARSE POR REFERENCIAS
* @param IN_CGEXL_TELEFONO NUMERO DE TELEFONO DE LA PERSONA PARA CONTACTARSE POR REFERENCIAS
* @param IN_CGEXL_OBSERVACIONES INFORMACION ADICIONAL
* @param IN_CGEXL_ESTADO ESTADO DEL REGISTRO
* @param IN_CGEXL_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_UPDATE(
IN IN_CGEXL_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CODIGO%TYPE,
IN IN_CRPER_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CRPER_CODIGO%TYPE,
IN IN_CGEXL_FECHA_INICIO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_FECHA_INICIO%TYPE,
IN IN_CGEXL_FECHA_FIN SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_FECHA_FIN%TYPE,
IN IN_CGEXL_RAZON_SOCIAL SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_RAZON_SOCIAL%TYPE,
IN IN_CGEXL_CIUDAD SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CIUDAD%TYPE,
IN IN_CGEXL_CARGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CARGO%TYPE,
IN IN_CGEXL_DESCRIPCION SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_DESCRIPCION%TYPE,
IN IN_CGEXL_PERSONAS_CARGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_PERSONAS_CARGO%TYPE,
IN IN_CGEXL_CONTACTO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CONTACTO%TYPE,
IN IN_CGEXL_TELEFONO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_TELEFONO%TYPE,
IN IN_CGEXL_OBSERVACIONES SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_OBSERVACIONES%TYPE,
IN IN_CGEXL_ESTADO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_ESTADO%TYPE,
IN IN_CGEXL_USUARIO_UPDATE SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_GEM_EXPERIENCIA_LABORAL SET
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CGEXL_FECHA_INICIO = IN_CGEXL_FECHA_INICIO, 
		CGEXL_FECHA_FIN = IN_CGEXL_FECHA_FIN, 
		CGEXL_RAZON_SOCIAL = IN_CGEXL_RAZON_SOCIAL, 
		CGEXL_CIUDAD = IN_CGEXL_CIUDAD, 
		CGEXL_CARGO = IN_CGEXL_CARGO, 
		CGEXL_DESCRIPCION = IN_CGEXL_DESCRIPCION, 
		CGEXL_PERSONAS_CARGO = IN_CGEXL_PERSONAS_CARGO, 
		CGEXL_CONTACTO = IN_CGEXL_CONTACTO, 
		CGEXL_TELEFONO = IN_CGEXL_TELEFONO, 
		CGEXL_OBSERVACIONES = IN_CGEXL_OBSERVACIONES, 
		CGEXL_ESTADO = IN_CGEXL_ESTADO, 
		CGEXL_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CGEXL_USUARIO_UPDATE = IN_CGEXL_USUARIO_UPDATE
	WHERE
		CGEXL_CODIGO = IN_CGEXL_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL.
* @param IN_CGEXL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_SELECT(
IN IN_CGEXL_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CGEXL_CODIGO, 
		CRPER_CODIGO, 
		CGEXL_FECHA_INICIO, 
		CGEXL_FECHA_FIN, 
		CGEXL_RAZON_SOCIAL, 
		CGEXL_CIUDAD, 
		CGEXL_CARGO, 
		CGEXL_DESCRIPCION, 
		CGEXL_PERSONAS_CARGO, 
		CGEXL_CONTACTO, 
		CGEXL_TELEFONO, 
		CGEXL_OBSERVACIONES, 
		CGEXL_ESTADO, 
		CGEXL_FECHA_INSERT, 
		CGEXL_USUARIO_INSERT, 
		CGEXL_FECHA_UPDATE, 
		CGEXL_USUARIO_UPDATE
	FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE CGEXL_ESTADO = TRUE AND 
		CGEXL_CODIGO = IN_CGEXL_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL.
* @param IN_CGEXL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_DELETE(
IN IN_CGEXL_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE
		CGEXL_CODIGO = IN_CGEXL_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL
* @param IN_CGEXL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_DELETE_SOFT(
IN IN_CGEXL_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CGEXL_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_GEM_EXPERIENCIA_LABORAL SET
		CGEXL_ESTADO = FALSE
	WHERE
		CGEXL_CODIGO = IN_CGEXL_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_S_CGG_RES_PERSONA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_S_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CGEXL_CODIGO, 
		CRPER_CODIGO, 
		CGEXL_FECHA_INICIO, 
		CGEXL_FECHA_FIN, 
		CGEXL_RAZON_SOCIAL, 
		CGEXL_CIUDAD, 
		CGEXL_CARGO, 
		CGEXL_DESCRIPCION, 
		CGEXL_PERSONAS_CARGO, 
		CGEXL_CONTACTO, 
		CGEXL_TELEFONO, 
		CGEXL_OBSERVACIONES, 
		CGEXL_ESTADO, 
		CGEXL_FECHA_INSERT, 
		CGEXL_USUARIO_INSERT, 
		CGEXL_FECHA_UPDATE, 
		CGEXL_USUARIO_UPDATE
	FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE CGEXL_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_D_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGOIDENTIFICATIVO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_DS_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_GEM_EXPERIENCIA_LABORAL.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_GEM_EXPERIENCIA_LABORAL SET
		cgexl_estado = false
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_GEM_PERSONA_EXPERIENCIA_LABORAL_BYID
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_GEM_DESTREZA_PERSONA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_PERSONA_EXPERIENCIA_LABORAL_BYID(
IN IN_CRPER_CODIGO SII.CGG_RES_PERSONA.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT			
		ELA.CGEXL_RAZON_SOCIAL,
		ELA.CGEXL_CARGO,
		ELA.CGEXL_FECHA_INICIO,
		ELA.CGEXL_FECHA_FIN,
		ELA.CGEXL_CONTACTO,
		ELA.CGEXL_TELEFONO
	FROM SII.CGG_RES_PERSONA PER INNER JOIN SII.CGG_GEM_EXPERIENCIA_LABORAL ELA ON(PER.CRPER_CODIGO=ELA.CRPER_CODIGO)
	WHERE PER.CRPER_ESTADO = TRUE AND 
		PER.CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param IN_CRPER_CODIGO CRITERIO DE BUSQUEDA, CODIGO DE LA PERSONA A BUSCAR
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_COUNT_BYID(
IN IN_FIND_TEXT TEXT,
IN IN_CRPER_CODIGO VARCHAR
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE CGEXL_ESTADO = TRUE AND CRPER_CODIGO = IN_CRPER_CODIGO AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CGEXL_FECHA_INICIO, CURRENT_TIMESTAMP)||' '||COALESCE(CGEXL_FECHA_FIN, CURRENT_TIMESTAMP)||' '||COALESCE(CGEXL_RAZON_SOCIAL, '''')||' '||COALESCE(CGEXL_CIUDAD, '''')||' '||COALESCE(CGEXL_CARGO, '''')||' '||COALESCE(CGEXL_DESCRIPCION, '''')||' '||COALESCE(CGEXL_PERSONAS_CARGO, 0)||' '||COALESCE(CGEXL_CONTACTO, '''')||' '||COALESCE(CGEXL_TELEFONO, '''')||' '||COALESCE(CGEXL_OBSERVACIONES, '''')||' '||COALESCE(CGEXL_ESTADO, FALSE)||' '||COALESCE(CGEXL_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CGEXL_USUARIO_INSERT, '''')||' '||COALESCE(CGEXL_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CGEXL_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_GEM_EXPERIENCIA_LABORAL.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param IN_CRPER_CODIGO CRITERIO DE BUSQUEDA, CODIGO DE LA PERSONA A BUSCAR
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_GEM_EXPERIENCIA_LABORAL_SELECTPAGE_BYID(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_CRPER_CODIGO VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CGEXL_CODIGO, 
		CRPER_CODIGO, 
		CGEXL_FECHA_INICIO, 
		CGEXL_FECHA_FIN, 
		CGEXL_RAZON_SOCIAL, 
		CGEXL_CIUDAD, 
		CGEXL_CARGO, 
		CGEXL_DESCRIPCION, 
		CGEXL_PERSONAS_CARGO, 
		CGEXL_CONTACTO, 
		CGEXL_TELEFONO, 
		CGEXL_OBSERVACIONES, 
		CGEXL_ESTADO, 
		CGEXL_FECHA_INSERT, 
		CGEXL_USUARIO_INSERT, 
		CGEXL_FECHA_UPDATE, 
		CGEXL_USUARIO_UPDATE
	FROM SII.CGG_GEM_EXPERIENCIA_LABORAL
	WHERE CGEXL_ESTADO = TRUE AND CRPER_CODIGO='''||IN_CRPER_CODIGO||''' AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CGEXL_FECHA_INICIO, CURRENT_TIMESTAMP)||'' ''||COALESCE(CGEXL_FECHA_FIN, CURRENT_TIMESTAMP)||'' ''||COALESCE(CGEXL_RAZON_SOCIAL, '''')||'' ''||COALESCE(CGEXL_CIUDAD, '''')||'' ''||COALESCE(CGEXL_CARGO, '''')||'' ''||COALESCE(CGEXL_DESCRIPCION, '''')||'' ''||COALESCE(CGEXL_PERSONAS_CARGO, 0)||'' ''||COALESCE(CGEXL_CONTACTO, '''')||'' ''||COALESCE(CGEXL_TELEFONO, '''')||'' ''||COALESCE(CGEXL_OBSERVACIONES, '''')||'' ''||COALESCE(CGEXL_ESTADO, FALSE)||'' ''||COALESCE(CGEXL_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CGEXL_USUARIO_INSERT, '''')||'' ''||COALESCE(CGEXL_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CGEXL_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;