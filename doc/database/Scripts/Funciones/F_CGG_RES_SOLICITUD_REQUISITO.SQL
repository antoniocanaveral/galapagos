/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO
* @param IN_CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUISITO DE SOLICITUD DE TRAMITE
* @param IN_CRREQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @param IN_CRSRQ_DESCRIPCION DESCRIPCION DEL REQUERIMIENTO POR EL TIPO DE SOLICITUD DE RESIDENCIA
* @param IN_CRSRQ_REQUERIDO DETERMINA OBLIGATORIEDAD
* @param IN_CRSRQ_PARTICIPANTE TIPO DE PARTICIPANTE DEL TRAMITE
VALORES:
0-AUSPICIANTE
1-BENEFICIARIO - AUSPICIADO
2-GENERAL - OTRO
* @param IN_CRSRQ_ESTADO ESTADO DEL REGISTRO
* @param IN_CRSRQ_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRSRQ_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_INSERT(
IN IN_CRSRQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_CODIGO%TYPE, 
IN IN_CRREQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRREQ_CODIGO%TYPE, 
IN IN_CRTST_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO%TYPE, 
IN IN_CRSRQ_DESCRIPCION SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_DESCRIPCION%TYPE, 
IN IN_CRSRQ_REQUERIDO SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_REQUERIDO%TYPE, 
IN IN_CRSRQ_PARTICIPANTE SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_PARTICIPANTE%TYPE, 
IN IN_CRSRQ_ESTADO SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_ESTADO%TYPE, 
IN IN_CRSRQ_USUARIO_INSERT SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_USUARIO_INSERT%TYPE, 
IN IN_CRSRQ_USUARIO_UPDATE SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CRSRQ_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_SOLICITUD_REQUISITO','CRSRQ_CODIGO','CRSRQ') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRSRQ_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_SOLICITUD_REQUISITO(
		CRSRQ_CODIGO, 
		CRREQ_CODIGO, 
		CRTST_CODIGO, 
		CRSRQ_DESCRIPCION, 
		CRSRQ_REQUERIDO, 
		CRSRQ_PARTICIPANTE, 
		CRSRQ_ESTADO, 
		CRSRQ_FECHA_INSERT, 
		CRSRQ_USUARIO_INSERT, 
		CRSRQ_FECHA_UPDATE, 
		CRSRQ_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRREQ_CODIGO, 
		IN_CRTST_CODIGO, 
		IN_CRSRQ_DESCRIPCION, 
		IN_CRSRQ_REQUERIDO, 
		IN_CRSRQ_PARTICIPANTE, 
		IN_CRSRQ_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRSRQ_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRSRQ_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRSRQ_CODIGO, 
		CRREQ_CODIGO, 
		CRTST_CODIGO, 
		CRSRQ_DESCRIPCION, 
		CRSRQ_REQUERIDO, 
		CRSRQ_PARTICIPANTE, 
		CRSRQ_ESTADO, 
		CRSRQ_FECHA_INSERT, 
		CRSRQ_USUARIO_INSERT, 
		CRSRQ_FECHA_UPDATE, 
		CRSRQ_USUARIO_UPDATE
	FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE CRSRQ_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRSRQ_CODIGO, 
		CRREQ_CODIGO, 
		CRTST_CODIGO, 
		CRSRQ_DESCRIPCION, 
		CRSRQ_REQUERIDO, 
		CRSRQ_PARTICIPANTE, 
		CRSRQ_ESTADO, 
		CRSRQ_FECHA_INSERT, 
		CRSRQ_USUARIO_INSERT, 
		CRSRQ_FECHA_UPDATE, 
		CRSRQ_USUARIO_UPDATE
	FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE CRSRQ_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CRSRQ_DESCRIPCION, '''')||'' ''||COALESCE(CRSRQ_REQUERIDO, FALSE)||'' ''||COALESCE(CRSRQ_PARTICIPANTE, 0)||'' ''||COALESCE(CRSRQ_ESTADO, FALSE)||'' ''||COALESCE(CRSRQ_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRSRQ_USUARIO_INSERT, '''')||'' ''||COALESCE(CRSRQ_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRSRQ_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE CRSRQ_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE CRSRQ_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRSRQ_DESCRIPCION, '''')||' '||COALESCE(CRSRQ_REQUERIDO, FALSE)||' '||COALESCE(CRSRQ_PARTICIPANTE, 0)||' '||COALESCE(CRSRQ_ESTADO, FALSE)||' '||COALESCE(CRSRQ_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRSRQ_USUARIO_INSERT, '''')||' '||COALESCE(CRSRQ_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRSRQ_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_SOLICITUD_REQUISITO
* @param IN_CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUISITO DE SOLICITUD DE TRAMITE
* @param IN_CRREQ_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @param IN_CRSRQ_DESCRIPCION DESCRIPCION DEL REQUERIMIENTO POR EL TIPO DE SOLICITUD DE RESIDENCIA
* @param IN_CRSRQ_REQUERIDO DETERMINA OBLIGATORIEDAD
* @param IN_CRSRQ_PARTICIPANTE TIPO DE PARTICIPANTE DEL TRAMITE
VALORES:
0-AUSPICIANTE
1-BENEFICIARIO - AUSPICIADO
2-GENERAL - OTRO
* @param IN_CRSRQ_ESTADO ESTADO DEL REGISTRO
* @param IN_CRSRQ_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_UPDATE(
IN IN_CRSRQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_CODIGO%TYPE, 
IN IN_CRREQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRREQ_CODIGO%TYPE, 
IN IN_CRTST_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO%TYPE, 
IN IN_CRSRQ_DESCRIPCION SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_DESCRIPCION%TYPE, 
IN IN_CRSRQ_REQUERIDO SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_REQUERIDO%TYPE, 
IN IN_CRSRQ_PARTICIPANTE SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_PARTICIPANTE%TYPE, 
IN IN_CRSRQ_ESTADO SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_ESTADO%TYPE, 
IN IN_CRSRQ_USUARIO_UPDATE SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_SOLICITUD_REQUISITO SET
		CRREQ_CODIGO = IN_CRREQ_CODIGO, 
		CRTST_CODIGO = IN_CRTST_CODIGO, 
		CRSRQ_DESCRIPCION = IN_CRSRQ_DESCRIPCION, 
		CRSRQ_REQUERIDO = IN_CRSRQ_REQUERIDO, 
		CRSRQ_PARTICIPANTE = IN_CRSRQ_PARTICIPANTE, 
		CRSRQ_ESTADO = IN_CRSRQ_ESTADO, 
		CRSRQ_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRSRQ_USUARIO_UPDATE = IN_CRSRQ_USUARIO_UPDATE
	WHERE
		CRSRQ_CODIGO = IN_CRSRQ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO
* @param IN_CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUISITO DE SOLICITUD DE TRAMITE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_SELECT(
IN IN_CRSRQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRSRQ_CODIGO, 
		CRREQ_CODIGO, 
		CRTST_CODIGO, 
		CRSRQ_DESCRIPCION, 
		CRSRQ_REQUERIDO, 
		CRSRQ_PARTICIPANTE, 
		CRSRQ_ESTADO, 
		CRSRQ_FECHA_INSERT, 
		CRSRQ_USUARIO_INSERT, 
		CRSRQ_FECHA_UPDATE, 
		CRSRQ_USUARIO_UPDATE
	FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE CRSRQ_ESTADO = TRUE AND 
		CRSRQ_CODIGO = IN_CRSRQ_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO
* @param IN_CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUISITO DE SOLICITUD DE TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_DELETE(
IN IN_CRSRQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE
		CRSRQ_CODIGO = IN_CRSRQ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO
* @param IN_CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUISITO DE SOLICITUD DE TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_DELETE_SOFT(
IN IN_CRSRQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRSRQ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_SOLICITUD_REQUISITO SET
		CRSRQ_ESTADO = FALSE
	WHERE
		CRSRQ_CODIGO = IN_CRSRQ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_S_CGG_RES_REQUISITO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_REQUISITO.
* @param IN_CRREQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_S_CGG_RES_REQUISITO(
IN IN_CRREQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRREQ_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRSRQ_CODIGO, 
		CRREQ_CODIGO, 
		CRTST_CODIGO, 
		CRSRQ_DESCRIPCION, 
		CRSRQ_REQUERIDO, 
		CRSRQ_PARTICIPANTE, 
		CRSRQ_ESTADO, 
		CRSRQ_FECHA_INSERT, 
		CRSRQ_USUARIO_INSERT, 
		CRSRQ_FECHA_UPDATE, 
		CRSRQ_USUARIO_UPDATE
	FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE CRSRQ_ESTADO = TRUE AND 
		CRREQ_CODIGO = IN_CRREQ_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_D_CGG_RES_REQUISITO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_REQUISITO.
* @param IN_CRREQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_D_CGG_RES_REQUISITO(
IN IN_CRREQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRREQ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE
		CRREQ_CODIGO = IN_CRREQ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_D_CGG_RES_REQUISITO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_REQUISITO.
* @param IN_CRREQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUERIMIENTO.
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_DS_CGG_RES_REQUISITO(
IN IN_CRREQ_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRREQ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_SOLICITUD_REQUISITO SET
		crsrq_estado = false
	WHERE
		CRREQ_CODIGO = IN_CRREQ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_S_CGG_RES_TIPO_SOLICITUD_TRAMITE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SOLICITUD_TRAMITE.
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_S_CGG_RES_TIPO_SOLICITUD_TRAMITE(
IN IN_CRTST_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRSRQ_CODIGO, 
		CRREQ_CODIGO, 
		CRTST_CODIGO, 
		CRSRQ_DESCRIPCION, 
		CRSRQ_REQUERIDO, 
		CRSRQ_PARTICIPANTE, 
		CRSRQ_ESTADO, 
		CRSRQ_FECHA_INSERT, 
		CRSRQ_USUARIO_INSERT, 
		CRSRQ_FECHA_UPDATE, 
		CRSRQ_USUARIO_UPDATE
	FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE CRSRQ_ESTADO = TRUE AND 
		CRTST_CODIGO = IN_CRTST_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_D_CGG_RES_TIPO_SOLICITUD_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SOLICITUD_TRAMITE.
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_D_CGG_RES_TIPO_SOLICITUD_TRAMITE(
IN IN_CRTST_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_SOLICITUD_REQUISITO
	WHERE
		CRTST_CODIGO = IN_CRTST_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_D_CGG_RES_TIPO_SOLICITUD_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SOLICITUD_TRAMITE.
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_DS_CGG_RES_TIPO_SOLICITUD_TRAMITE(
IN IN_CRTST_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_SOLICITUD_REQUISITO SET
		crsrq_estado = false
	WHERE
		CRTST_CODIGO = IN_CRTST_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

