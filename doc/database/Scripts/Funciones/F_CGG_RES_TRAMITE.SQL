/**
* FUNCION SII.F_CGG_RES_TRAMITE_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE AUSPICIANTE
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE AUSPICIANTE PERSONA JURIDICA
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEL BENEFICIARIO. CAMPO RECURSIVO HACIA LA MISMA TABLA DE PERSONA
* @param IN_CRPRO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @param IN_CRETT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ESTADO TRAMITE
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @param IN_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR
* @param IN_CGG_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR REEMPLAZADO
* @param IN_CGG_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO REEMPLAZADO
* @param IN_CRTRA_ANIO ANIO DE REALIZACION DEL TRAMITE
* @param IN_CRTRA_NUMERO NUMERO SECUENCIAL UNICO DEL TRAMITE, QUE SE RESTABLECE ANUALMENTE.
* @param IN_CRTRA_FECHA_RECEPCION FECHA DE RECEPCION DEL TRAMITE
* @param IN_CRTRA_ACTIVIDAD_RESIDENCIA ACTIVIDAD A REALIZAR EN LA PROVINCIA POR PARTE DEL BENEFICIARIO RESIDENCIA
* @param IN_CRTRA_OBSERVACION OBSERVACION DEL TRAMITE- HISTORIAL FORMATO JSON
* @param IN_CRTRA_DIAS_PERMANENCIA NUMERO DE DIAS AUTORIZADOS PARA PERMANENCIA DE UNA PERSONA
* @param IN_CRTRA_PENDIENTE DETERMINA SI UN TRAMITE YA HA SIDO EVALUADO POR COMITE
VALORES:
0 - NO EVALUADO
1- EVALUADO
2-CADUCADO
3-SOLO GUARDADO
4-FINALIZADO
5 - ANULADO
6 - OTRO TIPO DE ESTADO
* @param IN_CRTRA_OBSERVACION_PENDIENTE JUSTIFICACION DE PORQUE EL TRAMITE QUEDO PENDIENTE
* @param IN_CRTRA_ATENCION_CLIENTE SI LA INFORMACION FUE REGISTRADA DESDE ATENCION AL CLIENTE
* @param IN_CRTRA_COMUNICADO_RADIAL NUMERO DE COMUNICADO RADIAL QUE PATROCINA EL TRAMITE DE RESIDENCIA TEMPORAL
* @param IN_CRTRA_MOTIVO NUMERO DE ARTICULO QUE MOTIVO LA SOLICITUD DE RESIDENCIA.
* @param IN_CRTRA_FOLIO NUMERO DE HOJAS FOLIADAS PARA EL TRAMITE
* @param IN_CRTRA_GRUPO DETERMINA SI EL TRAMITE PERTENECE A UN GRUPO
* @param IN_CRTRA_ORDEN DETERMINA EL ORDENAMIENTO EN EL INGRESO PARA TRAMITES DE GRUPO
* @param IN_CRTRA_FECHA_INGRESO FECHA DE INGRESO A LA PROVINCIA DEL BENEFICIARIO
* @param IN_CRTRA_FECHA_SALIDA FECHA DE SALIDA DE LA PROVINCIA DEL BENEFICIARIO
* @param IN_CRTRA_ESTADO ESTADO DEL REGISTRO FINALIZADO O NO
* @param IN_CRTRA_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRTRA_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_INSERT(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_TRAMITE.CRPER_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_TRAMITE.CRPJR_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_TRAMITE.CGG_CRPER_CODIGO%TYPE, 
IN IN_CRPRO_CODIGO SII.CGG_RES_TRAMITE.CRPRO_CODIGO%TYPE, 
IN IN_CRTST_CODIGO SII.CGG_RES_TRAMITE.CRTST_CODIGO%TYPE, 
IN IN_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CVVEH_CODIGO%TYPE, 
IN IN_CRETT_CODIGO SII.CGG_RES_TRAMITE.CRETT_CODIGO%TYPE, 
IN IN_CISLA_CODIGO SII.CGG_RES_TRAMITE.CISLA_CODIGO%TYPE,  
IN IN_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CVMTR_CODIGO%TYPE, 
IN IN_CGG_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CGG_CVMTR_CODIGO%TYPE,
IN IN_CGG_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CGG_CVVEH_CODIGO%TYPE,
IN IN_CRTRA_ANIO SII.CGG_RES_TRAMITE.CRTRA_ANIO%TYPE, 
IN IN_CRTRA_NUMERO SII.CGG_RES_TRAMITE.CRTRA_NUMERO%TYPE, 
IN IN_CRTRA_FECHA_RECEPCION SII.CGG_RES_TRAMITE.CRTRA_FECHA_RECEPCION%TYPE, 
IN IN_CRTRA_ACTIVIDAD_RESIDENCIA SII.CGG_RES_TRAMITE.CRTRA_ACTIVIDAD_RESIDENCIA%TYPE, 
IN IN_CRTRA_OBSERVACION SII.CGG_RES_TRAMITE.CRTRA_OBSERVACION%TYPE, 
IN IN_CRTRA_DIAS_PERMANENCIA SII.CGG_RES_TRAMITE.CRTRA_DIAS_PERMANENCIA%TYPE, 
IN IN_CRTRA_PENDIENTE SII.CGG_RES_TRAMITE.CRTRA_PENDIENTE%TYPE, 
IN IN_CRTRA_OBSERVACION_PENDIENTE SII.CGG_RES_TRAMITE.CRTRA_OBSERVACION_PENDIENTE%TYPE, 
IN IN_CRTRA_ATENCION_CLIENTE SII.CGG_RES_TRAMITE.CRTRA_ATENCION_CLIENTE%TYPE, 
IN IN_CRTRA_COMUNICADO_RADIAL SII.CGG_RES_TRAMITE.CRTRA_COMUNICADO_RADIAL%TYPE, 
IN IN_CRTRA_MOTIVO SII.CGG_RES_TRAMITE.CRTRA_MOTIVO%TYPE, 
IN IN_CRTRA_FOLIO SII.CGG_RES_TRAMITE.CRTRA_FOLIO%TYPE, 
IN IN_CRTRA_GRUPO SII.CGG_RES_TRAMITE.CRTRA_GRUPO%TYPE, 
IN IN_CRTRA_ORDEN SII.CGG_RES_TRAMITE.CRTRA_ORDEN%TYPE, 
IN IN_CRTRA_FECHA_INGRESO SII.CGG_RES_TRAMITE.CRTRA_FECHA_INGRESO%TYPE, 
IN IN_CRTRA_FECHA_SALIDA SII.CGG_RES_TRAMITE.CRTRA_FECHA_SALIDA%TYPE, 
IN IN_CRTRA_ESTADO SII.CGG_RES_TRAMITE.CRTRA_ESTADO%TYPE, 
IN IN_CRTRA_USUARIO_INSERT SII.CGG_RES_TRAMITE.CRTRA_USUARIO_INSERT%TYPE, 
IN IN_CRTRA_USUARIO_UPDATE SII.CGG_RES_TRAMITE.CRTRA_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CRTRA_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_TRAMITE','CRTRA_CODIGO','CRTRA') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRTRA_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_TRAMITE(
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRPER_CODIGO, 
		IN_CRPJR_CODIGO, 
		IN_CGG_CRPER_CODIGO, 
		IN_CRPRO_CODIGO, 
		IN_CRTST_CODIGO, 
		IN_CVVEH_CODIGO, 
		IN_CRETT_CODIGO, 
		IN_CISLA_CODIGO, 
		IN_CVMTR_CODIGO, 
		IN_CGG_CVMTR_CODIGO, 
		IN_CGG_CVVEH_CODIGO, 
		IN_CRTRA_ANIO, 
		IN_CRTRA_NUMERO, 
		IN_CRTRA_FECHA_RECEPCION, 
		IN_CRTRA_ACTIVIDAD_RESIDENCIA, 
		IN_CRTRA_OBSERVACION, 
		IN_CRTRA_DIAS_PERMANENCIA, 
		IN_CRTRA_PENDIENTE, 
		IN_CRTRA_OBSERVACION_PENDIENTE, 
		IN_CRTRA_ATENCION_CLIENTE, 
		IN_CRTRA_COMUNICADO_RADIAL, 
		IN_CRTRA_MOTIVO, 
		IN_CRTRA_FOLIO, 
		IN_CRTRA_GRUPO, 
		IN_CRTRA_ORDEN, 
		IN_CRTRA_FECHA_INGRESO, 
		IN_CRTRA_FECHA_SALIDA, 
		IN_CRTRA_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRTRA_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRTRA_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_SELECT_AS(
IN IN_USER_NAME varchar(50)
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO,  
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE__SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_SELECT(
IN IN_USER_NAME varchar(50),
IN IN_START_INDEX int,
IN IN_LIMIT int,
IN IN_SORT_FIELD_NAME varchar,
IN IN_DIRECTION varchar,
IN IN_FIND_TEXT text
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	CASE WHEN CRTRA_ANIO IS NULL THEN 0 ELSE CRTRA_ANIO END ||'' ''||
	CASE WHEN CRTRA_NUMERO IS NULL THEN 0 ELSE CRTRA_NUMERO END ||'' ''||
	CASE WHEN CRTRA_FECHA_RECEPCION IS NULL THEN CURRENT_TIMESTAMP ELSE CRTRA_FECHA_RECEPCION END ||'' ''||
	CASE WHEN CRTRA_ACTIVIDAD_RESIDENCIA IS NULL THEN '''' ELSE CRTRA_ACTIVIDAD_RESIDENCIA END ||'' ''||
	CASE WHEN CRTRA_OBSERVACION IS NULL THEN '''' ELSE CRTRA_OBSERVACION END ||'' ''||
	CASE WHEN CRTRA_DIAS_PERMANENCIA IS NULL THEN 0 ELSE CRTRA_DIAS_PERMANENCIA END ||'' ''||
	CASE WHEN CRTRA_PENDIENTE IS NULL THEN 0 ELSE CRTRA_PENDIENTE END ||'' ''||
	CASE WHEN CRTRA_OBSERVACION_PENDIENTE IS NULL THEN '''' ELSE CRTRA_OBSERVACION_PENDIENTE END ||'' ''||
	CASE WHEN CRTRA_ATENCION_CLIENTE IS NULL THEN FALSE ELSE CRTRA_ATENCION_CLIENTE END ||'' ''||
	CASE WHEN CRTRA_COMUNICADO_RADIAL IS NULL THEN '''' ELSE CRTRA_COMUNICADO_RADIAL END ||'' ''||
	CASE WHEN CRTRA_MOTIVO IS NULL THEN '''' ELSE CRTRA_MOTIVO END ||'' ''||
	CASE WHEN CRTRA_FOLIO IS NULL THEN 0 ELSE CRTRA_FOLIO END ||'' ''||
	CASE WHEN CRTRA_ESTADO IS NULL THEN FALSE ELSE CRTRA_ESTADO END ||'' ''||
	CASE WHEN CRTRA_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CRTRA_FECHA_INSERT END ||'' ''||
	CASE WHEN CRTRA_USUARIO_INSERT IS NULL THEN '''' ELSE CRTRA_USUARIO_INSERT END ||'' ''||
	CASE WHEN CRTRA_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CRTRA_FECHA_UPDATE END ||'' ''||
	CASE WHEN CRTRA_USUARIO_UPDATE IS NULL THEN '''' ELSE CRTRA_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO AND 
		(LENGTH(IN_FIND_TEXT) = 0 OR SII.F_STRING_IN(IN_FIND_TEXT,CASE WHEN CRTRA_ANIO IS NULL THEN 0 ELSE CRTRA_ANIO END ||' '||CASE WHEN CRTRA_NUMERO IS NULL THEN 0 ELSE CRTRA_NUMERO END ||' '||CASE WHEN CRTRA_FECHA_RECEPCION IS NULL THEN CURRENT_TIMESTAMP ELSE CRTRA_FECHA_RECEPCION END ||' '||CASE WHEN CRTRA_ACTIVIDAD_RESIDENCIA IS NULL THEN '''' ELSE CRTRA_ACTIVIDAD_RESIDENCIA END ||' '||CASE WHEN CRTRA_OBSERVACION IS NULL THEN '''' ELSE CRTRA_OBSERVACION END ||' '||CASE WHEN CRTRA_DIAS_PERMANENCIA IS NULL THEN 0 ELSE CRTRA_DIAS_PERMANENCIA END ||' '||CASE WHEN CRTRA_PENDIENTE IS NULL THEN 0 ELSE CRTRA_PENDIENTE END ||' '||CASE WHEN CRTRA_OBSERVACION_PENDIENTE IS NULL THEN '''' ELSE CRTRA_OBSERVACION_PENDIENTE END ||' '||CASE WHEN CRTRA_ATENCION_CLIENTE IS NULL THEN FALSE ELSE CRTRA_ATENCION_CLIENTE END ||' '||CASE WHEN CRTRA_COMUNICADO_RADIAL IS NULL THEN '''' ELSE CRTRA_COMUNICADO_RADIAL END ||' '||CASE WHEN CRTRA_MOTIVO IS NULL THEN '''' ELSE CRTRA_MOTIVO END ||' '||CASE WHEN CRTRA_FOLIO IS NULL THEN 0 ELSE CRTRA_FOLIO END ||' '||CASE WHEN CRTRA_ESTADO IS NULL THEN FALSE ELSE CRTRA_ESTADO END ||' '||CASE WHEN CRTRA_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CRTRA_FECHA_INSERT END ||' '||CASE WHEN CRTRA_USUARIO_INSERT IS NULL THEN '''' ELSE CRTRA_USUARIO_INSERT END ||' '||CASE WHEN CRTRA_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CRTRA_FECHA_UPDATE END ||' '||CASE WHEN CRTRA_USUARIO_UPDATE IS NULL THEN '''' ELSE CRTRA_USUARIO_UPDATE END ) = 1);
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_TRAMITE
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE AUSPICIANTE
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE AUSPICIANTE PERSONA JURIDICA
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEL BENEFICIARIO. CAMPO RECURSIVO HACIA LA MISMA TABLA DE PERSONA
* @param IN_CRPRO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @param IN_CRETT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ESTADO TRAMITE
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @param IN_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR
* @param IN_CGG_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR REEMPLAZADO
* @param IN_CGG_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO REEMPLAZADO
* @param IN_CRTRA_ANIO ANIO DE REALIZACION DEL TRAMITE
* @param IN_CRTRA_NUMERO NUMERO SECUENCIAL UNICO DEL TRAMITE, QUE SE RESTABLECE ANUALMENTE.
* @param IN_CRTRA_FECHA_RECEPCION FECHA DE RECEPCION DEL TRAMITE
* @param IN_CRTRA_ACTIVIDAD_RESIDENCIA ACTIVIDAD A REALIZAR EN LA PROVINCIA POR PARTE DEL BENEFICIARIO RESIDENCIA
* @param IN_CRTRA_OBSERVACION OBSERVACION DEL TRAMITE- HISTORIAL FORMATO JSON
* @param IN_CRTRA_DIAS_PERMANENCIA NUMERO DE DIAS AUTORIZADOS PARA PERMANENCIA DE UNA PERSONA
* @param IN_CRTRA_PENDIENTE DETERMINA SI UN TRAMITE YA HA SIDO EVALUADO POR COMITE
VALORES:
0-NO EVALUADO
1-EVALUADO
2-CADUCADO
3-SOLO GUARDADO
4-FINALIZADO
5-OTRO TIPO DE ESTADO
* @param IN_CRTRA_OBSERVACION_PENDIENTE JUSTIFICACION DE PORQUE EL TRAMITE QUEDO PENDIENTE
* @param IN_CRTRA_ATENCION_CLIENTE SI LA INFORMACION FUE REGISTRADA DESDE ATENCION AL CLIENTE
* @param IN_CRTRA_COMUNICADO_RADIAL NUMERO DE COMUNICADO RADIAL QUE PATROCINA EL TRAMITE DE RESIDENCIA TEMPORAL
* @param IN_CRTRA_MOTIVO NUMERO DE ARTICULO QUE MOTIVO LA SOLICITUD DE RESIDENCIA.
* @param IN_CRTRA_FOLIO NUMERO DE HOJAS FOLIADAS PARA EL TRAMITE
* @param IN_CRTRA_GRUPO DETERMINA SI EL TRAMITE PERTENECE A UN GRUPO
* @param IN_CRTRA_ORDEN DETERMINA EL ORDENAMIENTO EN EL INGRESO PARA TRAMITES DE GRUPO
* @param IN_CRTRA_FECHA_INGRESO FECHA DE INGRESO A LA PROVINCIA DEL BENEFICIARIO
* @param IN_CRTRA_FECHA_SALIDA FECHA DE SALIDA DE LA PROVINCIA DEL BENEFICIARIO
* @param IN_CRTRA_ESTADO ESTADO DEL REGISTRO FINALIZADO O NO

* @param IN_CRTRA_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_UPDATE(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_TRAMITE.CRPER_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_TRAMITE.CRPJR_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_TRAMITE.CGG_CRPER_CODIGO%TYPE, 
IN IN_CRPRO_CODIGO SII.CGG_RES_TRAMITE.CRPRO_CODIGO%TYPE, 
IN IN_CRTST_CODIGO SII.CGG_RES_TRAMITE.CRTST_CODIGO%TYPE, 
IN IN_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CVVEH_CODIGO%TYPE, 
IN IN_CRETT_CODIGO SII.CGG_RES_TRAMITE.CRETT_CODIGO%TYPE, 
IN IN_CISLA_CODIGO SII.CGG_RES_TRAMITE.CISLA_CODIGO%TYPE, 
IN IN_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CVMTR_CODIGO%TYPE, 
IN IN_CGG_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CGG_CVMTR_CODIGO%TYPE,
IN IN_CGG_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CGG_CVVEH_CODIGO%TYPE,
IN IN_CRTRA_ANIO SII.CGG_RES_TRAMITE.CRTRA_ANIO%TYPE, 
IN IN_CRTRA_NUMERO SII.CGG_RES_TRAMITE.CRTRA_NUMERO%TYPE, 
IN IN_CRTRA_FECHA_RECEPCION SII.CGG_RES_TRAMITE.CRTRA_FECHA_RECEPCION%TYPE, 
IN IN_CRTRA_ACTIVIDAD_RESIDENCIA SII.CGG_RES_TRAMITE.CRTRA_ACTIVIDAD_RESIDENCIA%TYPE, 
IN IN_CRTRA_OBSERVACION SII.CGG_RES_TRAMITE.CRTRA_OBSERVACION%TYPE, 
IN IN_CRTRA_DIAS_PERMANENCIA SII.CGG_RES_TRAMITE.CRTRA_DIAS_PERMANENCIA%TYPE, 
IN IN_CRTRA_PENDIENTE SII.CGG_RES_TRAMITE.CRTRA_PENDIENTE%TYPE, 
IN IN_CRTRA_OBSERVACION_PENDIENTE SII.CGG_RES_TRAMITE.CRTRA_OBSERVACION_PENDIENTE%TYPE, 
IN IN_CRTRA_ATENCION_CLIENTE SII.CGG_RES_TRAMITE.CRTRA_ATENCION_CLIENTE%TYPE, 
IN IN_CRTRA_COMUNICADO_RADIAL SII.CGG_RES_TRAMITE.CRTRA_COMUNICADO_RADIAL%TYPE, 
IN IN_CRTRA_MOTIVO SII.CGG_RES_TRAMITE.CRTRA_MOTIVO%TYPE, 
IN IN_CRTRA_FOLIO SII.CGG_RES_TRAMITE.CRTRA_FOLIO%TYPE, 
IN IN_CRTRA_GRUPO SII.CGG_RES_TRAMITE.CRTRA_GRUPO%TYPE, 
IN IN_CRTRA_ORDEN SII.CGG_RES_TRAMITE.CRTRA_ORDEN%TYPE, 
IN IN_CRTRA_FECHA_INGRESO SII.CGG_RES_TRAMITE.CRTRA_FECHA_INGRESO%TYPE, 
IN IN_CRTRA_FECHA_SALIDA SII.CGG_RES_TRAMITE.CRTRA_FECHA_SALIDA%TYPE, 
IN IN_CRTRA_ESTADO SII.CGG_RES_TRAMITE.CRTRA_ESTADO%TYPE, 
IN IN_CRTRA_USUARIO_UPDATE SII.CGG_RES_TRAMITE.CRTRA_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CRPJR_CODIGO = IN_CRPJR_CODIGO, 
		CGG_CRPER_CODIGO = IN_CGG_CRPER_CODIGO, 
		CRPRO_CODIGO = IN_CRPRO_CODIGO, 
		CRTST_CODIGO = IN_CRTST_CODIGO, 
		CVVEH_CODIGO = IN_CVVEH_CODIGO, 
		CRETT_CODIGO = IN_CRETT_CODIGO, 
		CISLA_CODIGO = IN_CISLA_CODIGO, 
		CVMTR_CODIGO = IN_CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO = IN_CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO = IN_CGG_CVVEH_CODIGO, 
		CRTRA_ANIO = IN_CRTRA_ANIO, 
		CRTRA_NUMERO = IN_CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION = IN_CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA = IN_CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION = IN_CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA = IN_CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE = IN_CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE = IN_CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE = IN_CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL = IN_CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO = IN_CRTRA_MOTIVO, 
		CRTRA_FOLIO = IN_CRTRA_FOLIO, 
		CRTRA_GRUPO = IN_CRTRA_GRUPO, 
		CRTRA_ORDEN = IN_CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO = IN_CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA = IN_CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO = IN_CRTRA_ESTADO, 
		CRTRA_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRTRA_USUARIO_UPDATE = IN_CRTRA_USUARIO_UPDATE
	WHERE
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_SELECT(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND 
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DELETE(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE
	WHERE
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DELETE_SOFT(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		CRTRA_ESTADO = FALSE
	WHERE
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_S_CGG_RES_ESTADO_TRAMITE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_ESTADO_TRAMITE.
* @param IN_CRETT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ESTADO TRAMITE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_S_CGG_RES_ESTADO_TRAMITE(
IN IN_CRETT_CODIGO SII.CGG_RES_TRAMITE.CRETT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND 
		CRETT_CODIGO = IN_CRETT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_ESTADO_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_ESTADO_TRAMITE.
* @param IN_CRETT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ESTADO TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_D_CGG_RES_ESTADO_TRAMITE(
IN IN_CRETT_CODIGO SII.CGG_RES_TRAMITE.CRETT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE
	WHERE
		CRETT_CODIGO = IN_CRETT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_ESTADO_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_ESTADO_TRAMITE.
* @param IN_CRETT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ESTADO TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DS_CGG_RES_ESTADO_TRAMITE(
IN IN_CRETT_CODIGO SII.CGG_RES_TRAMITE.CRETT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		crtra_estado = false
	WHERE
		CRETT_CODIGO = IN_CRETT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_S_CGG_RES_TIPO_SOLICITUD_TRAMITE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SOLICITUD_TRAMITE.
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_S_CGG_RES_TIPO_SOLICITUD_TRAMITE(
IN IN_CRTST_CODIGO SII.CGG_RES_TRAMITE.CRTST_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND 
		CRTST_CODIGO = IN_CRTST_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_TIPO_SOLICITUD_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SOLICITUD_TRAMITE.
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_D_CGG_RES_TIPO_SOLICITUD_TRAMITE(
IN IN_CRTST_CODIGO SII.CGG_RES_TRAMITE.CRTST_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE
	WHERE
		CRTST_CODIGO = IN_CRTST_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_TIPO_SOLICITUD_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SOLICITUD_TRAMITE.
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DS_CGG_RES_TIPO_SOLICITUD_TRAMITE(
IN IN_CRTST_CODIGO SII.CGG_RES_TRAMITE.CRTST_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		crtra_estado = false
	WHERE
		CRTST_CODIGO = IN_CRTST_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_S_CGG_RES_PROCESO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PROCESO.
* @param IN_CRPRO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_S_CGG_RES_PROCESO(
IN IN_CRPRO_CODIGO SII.CGG_RES_TRAMITE.CRPRO_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND 
		CRPRO_CODIGO = IN_CRPRO_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_PROCESO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PROCESO.
* @param IN_CRPRO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_D_CGG_RES_PROCESO(
IN IN_CRPRO_CODIGO SII.CGG_RES_TRAMITE.CRPRO_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE
	WHERE
		CRPRO_CODIGO = IN_CRPRO_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_PROCESO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PROCESO.
* @param IN_CRPRO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DS_CGG_RES_PROCESO(
IN IN_CRPRO_CODIGO SII.CGG_RES_TRAMITE.CRPRO_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		crtra_estado = false
	WHERE
		CRPRO_CODIGO = IN_CRPRO_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_S_CGG_VEH_VEHICULO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_VEHICULO.
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_S_CGG_VEH_VEHICULO(
IN IN_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CVVEH_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND 
		CVVEH_CODIGO = IN_CVVEH_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_VEH_VEHICULO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_VEHICULO.
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_D_CGG_VEH_VEHICULO(
IN IN_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CVVEH_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE
	WHERE
		CVVEH_CODIGO = IN_CVVEH_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_VEH_VEHICULO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_VEHICULO.
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DS_CGG_VEH_VEHICULO(
IN IN_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CVVEH_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		crtra_estado = false
	WHERE
		CVVEH_CODIGO = IN_CVVEH_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_S_CGG_ISLA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_ISLA.
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_S_CGG_ISLA(
IN IN_CISLA_CODIGO SII.CGG_RES_TRAMITE.CISLA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND 
		CISLA_CODIGO = IN_CISLA_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_ISLA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_ISLA.
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_D_CGG_ISLA(
IN IN_CISLA_CODIGO SII.CGG_RES_TRAMITE.CISLA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE
	WHERE
		CISLA_CODIGO = IN_CISLA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_ISLA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_ISLA.
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DS_CGG_ISLA(
IN IN_CISLA_CODIGO SII.CGG_RES_TRAMITE.CISLA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		crtra_estado = false
	WHERE
		CISLA_CODIGO = IN_CISLA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_S_CGG_RES_PERSONA_JURIDICA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE AUSPICIANTE PERSONA JURIDICA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_S_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_TRAMITE.CRPJR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND 
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE AUSPICIANTE PERSONA JURIDICA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_D_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_TRAMITE.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE AUSPICIANTE PERSONA JURIDICA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DS_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_TRAMITE.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		crtra_estado = false
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_S_CGG_VEH_MOTOR
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_MOTOR.
* @param IN_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_S_CGG_VEH_MOTOR(
IN IN_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CVMTR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND 
		CVMTR_CODIGO = IN_CVMTR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_VEH_MOTOR
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_MOTOR.
* @param IN_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_D_CGG_VEH_MOTOR(
IN IN_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CVMTR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE
	WHERE
		CVMTR_CODIGO = IN_CVMTR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_VEH_MOTOR
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_MOTOR.
* @param IN_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DS_CGG_VEH_MOTOR(
IN IN_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CVMTR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		crtra_estado = false
	WHERE
		CVMTR_CODIGO = IN_CVMTR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_S_CGG_RES_PERSONA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE AUSPICIANTE
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEL BENEFICIARIO. CAMPO RECURSIVO HACIA LA MISMA TABLA DE PERSONA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_S_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_TRAMITE.CRPER_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_TRAMITE.CGG_CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO AND 
		CGG_CRPER_CODIGO = IN_CGG_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE AUSPICIANTE
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEL BENEFICIARIO. CAMPO RECURSIVO HACIA LA MISMA TABLA DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_D_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_TRAMITE.CRPER_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_TRAMITE.CGG_CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO AND 
		CGG_CRPER_CODIGO = IN_CGG_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO IDENTIFICATIVO DE REGISTRO DE AUSPICIANTE
* @param IN_CGG_CRPER_CODIGO IDENTIFICATIVO DE REGISTRO DEL BENEFICIARIO. CAMPO RECURSIVO HACIA LA MISMA TABLA DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_DS_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_TRAMITE.CRPER_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_TRAMITE.CGG_CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN

	UPDATE SII.CGG_RES_TRAMITE SET
		crtra_estado = false
	WHERE 
		CRPER_CODIGO = IN_CRPER_CODIGO AND 
		CGG_CRPER_CODIGO = IN_CGG_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGSITRO DE TRAMITE
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE AUSPICIANTE
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE AUSPICIANTE PERSONA JURIDICA
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEL BENEFICIARIO
* @param IN_CRPRO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO DE SOLICITUD DE RESIDENCIA
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @param IN_CRETT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ESTADO TRAMITE
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @param IN_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR
* @param IN_CGG_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR REEMPLAZADO
* @param IN_CGG_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO REEMPLAZADO
* @param IN_CRTRA_ANIO ANIO DE REALIZACION DEL TRAMITE
* @param IN_CRTRA_NUMERO NUMERO SECUENCIAL UNICO
* @param IN_CRTRA_FECHA_RECEPCION FECHA DE RECEPCION DEL TRAMITE
* @param IN_CRTRA_ACTIVIDAD_RESIDENCIA ACTIVIDAD A REALIZAR EN LA PROVINCIA POR PARTE DEL BENEFICIARIO RESIDENCIA
* @param IN_CRTRA_OBSERVACION OBSERVACION DEL TRAMITE- HISTORIAL FORMATO JSON
* @param IN_CRTRA_DIAS_PERMANENCIA NUMERO DE DIAS AUTORIZADOS PARA PERMANENCIA DE UNA PERSONA
* @param IN_CRTRA_PENDIENTE DETERMINA SI UN TRAMITE YA HA SIDO EVALUADO POR COMITE
* @param IN_CRTRA_OBSERVACION_PENDIENTE JUSTIFICACION DE PORQUE EL TRAMITE QUEDO PENDIENTE
* @param IN_CRTRA_ATENCION_CLIENTE SI LA INFORMACION FUE REGISTRADA DESDE ATENCION AL CLIENTE
* @param IN_CRTRA_COMUNICADO_RADIAL NUMERO DE COMUNICADO RADIAL QUE PATROCINA EL TRAMITE DE RESIDENCIA TEMPORAL
* @param IN_CRTRA_MOTIVO NUMERO DE ARTICULO QUE MOTIVO LA SOLICITUD DE RESIDENCIA.
* @param IN_CRTRA_FOLIO NUMERO DE HOJAS FOLIADAS PARA EL TRAMITE
* @param IN_CRTRA_ESTADO ESTADO DEL REGISTRO FINALIZADO O NO

* @param IN_CRTRA_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRTRA_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_INSERT_1(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_TRAMITE.CRPER_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_TRAMITE.CRPJR_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_TRAMITE.CGG_CRPER_CODIGO%TYPE, 
IN IN_CRPRO_CODIGO SII.CGG_RES_TRAMITE.CRPRO_CODIGO%TYPE, 
IN IN_CRTST_CODIGO SII.CGG_RES_TRAMITE.CRTST_CODIGO%TYPE, 
IN IN_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CVVEH_CODIGO%TYPE, 
IN IN_CRETT_CODIGO SII.CGG_RES_TRAMITE.CRETT_CODIGO%TYPE, 
IN IN_CISLA_CODIGO SII.CGG_RES_TRAMITE.CISLA_CODIGO%TYPE, 
IN IN_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CVMTR_CODIGO%TYPE,
IN IN_CGG_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CGG_CVMTR_CODIGO%TYPE,
IN IN_CGG_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CGG_CVVEH_CODIGO%TYPE,
IN IN_CRTRA_ANIO SII.CGG_RES_TRAMITE.CRTRA_ANIO%TYPE, 
IN IN_CRTRA_NUMERO SII.CGG_RES_TRAMITE.CRTRA_NUMERO%TYPE, 
IN IN_CRTRA_FECHA_RECEPCION SII.CGG_RES_TRAMITE.CRTRA_FECHA_RECEPCION%TYPE, 
IN IN_CRTRA_ACTIVIDAD_RESIDENCIA SII.CGG_RES_TRAMITE.CRTRA_ACTIVIDAD_RESIDENCIA%TYPE, 
IN IN_CRTRA_OBSERVACION SII.CGG_RES_TRAMITE.CRTRA_OBSERVACION%TYPE, 
IN IN_CRTRA_DIAS_PERMANENCIA SII.CGG_RES_TRAMITE.CRTRA_DIAS_PERMANENCIA%TYPE, 
IN IN_CRTRA_PENDIENTE SII.CGG_RES_TRAMITE.CRTRA_PENDIENTE%TYPE, 
IN IN_CRTRA_OBSERVACION_PENDIENTE SII.CGG_RES_TRAMITE.CRTRA_OBSERVACION_PENDIENTE%TYPE, 
IN IN_CRTRA_ATENCION_CLIENTE SII.CGG_RES_TRAMITE.CRTRA_ATENCION_CLIENTE%TYPE, 
IN IN_CRTRA_COMUNICADO_RADIAL SII.CGG_RES_TRAMITE.CRTRA_COMUNICADO_RADIAL%TYPE, 
IN IN_CRTRA_MOTIVO SII.CGG_RES_TRAMITE.CRTRA_MOTIVO%TYPE, 
IN IN_CRTRA_FOLIO SII.CGG_RES_TRAMITE.CRTRA_FOLIO%TYPE, 
IN IN_CRTRA_FECHA_SALIDA SII.CGG_RES_TRAMITE.CRTRA_FECHA_SALIDA%TYPE, 
IN IN_CRTRA_ESTADO SII.CGG_RES_TRAMITE.CRTRA_ESTADO%TYPE, 
IN IN_CRTRA_USUARIO_INSERT SII.CGG_RES_TRAMITE.CRTRA_USUARIO_INSERT%TYPE, 
IN IN_CRTRA_USUARIO_UPDATE SII.CGG_RES_TRAMITE.CRTRA_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
OUT_NUM NUMERIC;
OUT_RESULT VARCHAR;
BEGIN
	IF (UPPER(IN_CRTRA_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_TRAMITE','CRTRA_CODIGO','CRTRA') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRTRA_CODIGO;
	END IF;
	
	IF(IN_CRTRA_NUMERO = 0)THEN
		SELECT SII.F_NUMERO('CGG_RES_TRAMITE','CRTRA_NUMERO','CRTRA_ANIO') INTO OUT_NUM;
	ELSE
		OUT_NUM := IN_CRTRA_NUMERO;		
	END IF;
	
	INSERT INTO SII.CGG_RES_TRAMITE(
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
	    CRTRA_FECHA_SALIDA,
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRPER_CODIGO, 
		IN_CRPJR_CODIGO, 
		IN_CGG_CRPER_CODIGO, 
		IN_CRPRO_CODIGO, 
		IN_CRTST_CODIGO, 
		IN_CVVEH_CODIGO, 
		IN_CRETT_CODIGO, 
		IN_CISLA_CODIGO,  
		IN_CVMTR_CODIGO, 
		IN_CGG_CVMTR_CODIGO, 
		IN_CGG_CVVEH_CODIGO, 
		IN_CRTRA_ANIO, 
		OUT_NUM, 
		IN_CRTRA_FECHA_RECEPCION, 
		IN_CRTRA_ACTIVIDAD_RESIDENCIA, 
		IN_CRTRA_OBSERVACION, 
		IN_CRTRA_DIAS_PERMANENCIA, 
		IN_CRTRA_PENDIENTE, 
		IN_CRTRA_OBSERVACION_PENDIENTE, 
		IN_CRTRA_ATENCION_CLIENTE, 
		IN_CRTRA_COMUNICADO_RADIAL, 
		IN_CRTRA_MOTIVO, 
		IN_CRTRA_FOLIO,
		IN_CRTRA_FECHA_SALIDA,
		IN_CRTRA_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRTRA_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRTRA_USUARIO_UPDATE
	);	
	OUT_RESULT:=OUT_KEY||','||OUT_NUM;		
	RETURN OUT_RESULT;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
/**
* FUNCION SII.F_CGG_RES_TRAMITE__SELECT1
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_SELECT1(
IN IN_USER_NAME varchar(50),
IN IN_START_INDEX int,
IN IN_LIMIT int,
IN IN_SORT_FIELD_NAME varchar,
IN IN_DIRECTION varchar,
IN IN_FIND_TEXT text
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
	TMP_USUARIO_CURSOR REFCURSOR;
	SQL_STMT TEXT;
	SQL_USUARIOS TEXT;
	SQL_ISLA TEXT;
	CUSUCODIGO VARCHAR(20);
	TMP_ROW RECORD;
BEGIN
	
	SQL_USUARIOS:=' ';
	SQL_ISLA:=' ';
	SQL_STMT:=' ';
	
	SELECT CUSU_CODIGO INTO CUSUCODIGO FROM SII.CGG_USUARIO WHERE CUSU_NOMBRE_USUARIO = IN_USER_NAME;	
	TMP_USUARIO_CURSOR := SII.F_CGG_USUARIO_ACCESO_INFORMACION(CUSUCODIGO);
		
	LOOP
		FETCH TMP_USUARIO_CURSOR INTO TMP_ROW;		
		EXIT WHEN NOT FOUND;
		SQL_USUARIOS := SQL_USUARIOS||'T.CRTRA_USUARIO_INSERT = '||QUOTE_LITERAL(TMP_ROW.CUSU_NOMBRE_USUARIO)||' OR ';
		SQL_ISLA:= SQL_ISLA||'CISLA_CODIGO = '||QUOTE_LITERAL(TMP_ROW.CISLA_CODIGO)||' OR ';				
	END LOOP;
	CLOSE TMP_USUARIO_CURSOR;
		
	SQL_USUARIOS := SUBSTRING(SQL_USUARIOS FROM 1 FOR LENGTH(SQL_USUARIOS)-3);
	SQL_ISLA := SUBSTRING(SQL_ISLA FROM 1 FOR LENGTH(SQL_ISLA)-3);

	SQL_STMT := '	
	WITH ATC AS (
		SELECT CRTRA_CODIGO FROM CGG_RES_TRAMITE WHERE CRTRA_ATENCION_CLIENTE = TRUE AND '||SQL_ISLA||'		
	)
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO,
		CRPER_TAUSPICIANTE,		
		CRPJR_CODIGO,
		CRPJR_NOMBRES,        
		CGG_CRPER_CODIGO, 
		CRPER_TBENEFICIARIO,		
		CRPRO_CODIGO, 
		CRTST_CODIGO,
		CRTST_DESCRIPCION,		
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CRETT_NOMBRE,
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		ACTIVIDAD_RESIDENCIA,
		CGCRG_NOMBRE,
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE,
		CRTRA_GRUPO,
		CRTRA_ORDEN
	FROM (
	    SELECT	
	   	T.CRTRA_CODIGO, 
		T.CRPER_CODIGO,
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CRPER_CODIGO) AS CRPER_TAUSPICIANTE,		
		T.CRPJR_CODIGO,
		SII.F_CGG_RES_PERSONA_JURIDICA_SELECT_NOMBRES(T.CRPJR_CODIGO) AS CRPJR_NOMBRES,        
		T.CGG_CRPER_CODIGO, 
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CGG_CRPER_CODIGO) AS CRPER_TBENEFICIARIO,		
		T.CRPRO_CODIGO, 
		T.CRTST_CODIGO,
		F_CGG_RES_TIPO_SOLICITUD_TRAMITE_SELECT_DESCRIPCION(T.CRTST_CODIGO) AS CRTST_DESCRIPCION, 		
		T.CVVEH_CODIGO, 
		T.CRETT_CODIGO, 
		STT.CRETT_NOMBRE,
		T.CISLA_CODIGO,  
		T.CVMTR_CODIGO, 
		T.CGG_CVMTR_CODIGO, 
		T.CGG_CVVEH_CODIGO, 
		T.CRTRA_ANIO, 
		T.CRTRA_NUMERO, 
		T.CRTRA_FECHA_RECEPCION, 
		T.CRTRA_ACTIVIDAD_RESIDENCIA, 
		GMC.CGCRG_NOMBRE,
		SII.F_NOMBRE_CARGO(T.CRTRA_ACTIVIDAD_RESIDENCIA) AS ACTIVIDAD_RESIDENCIA,
		T.CRTRA_OBSERVACION, 
		T.CRTRA_DIAS_PERMANENCIA, 
		T.CRTRA_PENDIENTE, 
		T.CRTRA_OBSERVACION_PENDIENTE, 
		T.CRTRA_ATENCION_CLIENTE, 
		T.CRTRA_COMUNICADO_RADIAL, 
		T.CRTRA_MOTIVO, 
		T.CRTRA_FOLIO, 
		T.CRTRA_ESTADO, 
		T.CRTRA_FECHA_INGRESO,
		T.CRTRA_FECHA_SALIDA,
		T.CRTRA_FECHA_INSERT, 
		T.CRTRA_USUARIO_INSERT, 
		T.CRTRA_FECHA_UPDATE, 
		T.CRTRA_USUARIO_UPDATE,	
		T.CRTRA_GRUPO,
		T.CRTRA_ORDEN
	    FROM SII.CGG_RES_TRAMITE T
		LEFT JOIN SII.CGG_GEM_CARGO GMC ON CGCRG_CODIGO = T.CRTRA_ACTIVIDAD_RESIDENCIA
		LEFT JOIN SII.CGG_RES_ESTADO_TRAMITE STT ON STT.CRETT_CODIGO = T.CRETT_CODIGO
		WHERE T.CRTRA_ESTADO = TRUE AND
			(('||SQL_USUARIOS||') OR T.CRTRA_CODIGO IN (SELECT CRTRA_CODIGO FROM ATC))
	) AS TRA
	WHERE (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
		COALESCE(CRPER_TAUSPICIANTE,'''')||'' ''||
		COALESCE(CRPJR_NOMBRES,'''')||'' ''||
		COALESCE(CRPER_TBENEFICIARIO,'''')||'' ''||
		COALESCE(CRTST_DESCRIPCION,'''')||'' ''||
		COALESCE(TRA.CRTRA_ANIO,0)||'' ''||
		COALESCE(TRA.CRTRA_NUMERO,0)||'' ''||
		COALESCE(TO_CHAR(TRA.CRTRA_FECHA_RECEPCION,''DD/MM/YY''),'' '')||'' ''||
		COALESCE(TRA.ACTIVIDAD_RESIDENCIA,'''')||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION,'''')||'' ''||
		COALESCE(TRA.CRTRA_DIAS_PERMANENCIA,0)||'' ''||
		COALESCE(TRA.CRTRA_PENDIENTE,0)||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION_PENDIENTE,'''')||'' ''||
		COALESCE(TRA.CRTRA_ATENCION_CLIENTE,FALSE)||'' ''||
		COALESCE(TRA.CRTRA_COMUNICADO_RADIAL,'''')||'' ''||
		COALESCE(TRA.CRTRA_MOTIVO,'''')||'' ''||
		COALESCE(TRA.CRTRA_FOLIO,0)||'' ''||
		COALESCE(TRA.CRTRA_ESTADO,FALSE)||'' ''||	
		COALESCE(TRA.CRTRA_USUARIO_INSERT,'''')) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	
	OPEN TMP_REF FOR EXECUTE SQL_STMT;	
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_COUNT1
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE EN BASE AL USUARIO QUE REGISTRO LOS TRAMITE O QUE TIENE ACCESO A LA INFORMACION.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @param IN_USER_NAME NOMBRE DE USUARIO.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_COUNT1(
IN IN_FIND_TEXT TEXT,
IN IN_USER_NAME varchar(50)
)RETURNS INT AS
$$
DECLARE
	TMP_ROWS INT2;
	TMP_USUARIO_CURSOR REFCURSOR;
	SQL_STMT TEXT;
	SQL_USUARIOS TEXT;
	CUSUCODIGO VARCHAR(20);
	TMP_ROW RECORD;
BEGIN
	SQL_USUARIOS:=' ';
	SQL_STMT:=' ';
	
	SELECT CUSU_CODIGO INTO CUSUCODIGO FROM SII.CGG_USUARIO WHERE CUSU_NOMBRE_USUARIO = IN_USER_NAME;	
	TMP_USUARIO_CURSOR := SII.F_CGG_USUARIO_ACCESO_INFORMACION(CUSUCODIGO);
		
	LOOP
		FETCH TMP_USUARIO_CURSOR INTO TMP_ROW;		
		EXIT WHEN NOT FOUND;
		SQL_USUARIOS := SQL_USUARIOS||'TRA.CRTRA_USUARIO_INSERT = '||QUOTE_LITERAL(TMP_ROW.CUSU_NOMBRE_USUARIO)||' OR ';				
	END LOOP;
	CLOSE TMP_USUARIO_CURSOR;
		
	SQL_USUARIOS := SUBSTRING(SQL_USUARIOS FROM 1 FOR LENGTH(SQL_USUARIOS)-3);

	SQL_STMT := 'SELECT
		COUNT(CRTRA_CODIGO)
	FROM (
	    SELECT	
	   	T.CRTRA_CODIGO, 
		T.CRPER_CODIGO,
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CRPER_CODIGO) AS CRPER_TAUSPICIANTE,		
		T.CRPJR_CODIGO,
		SII.F_CGG_RES_PERSONA_JURIDICA_SELECT_NOMBRES(T.CRPJR_CODIGO) AS CRPJR_NOMBRES,        
		T.CGG_CRPER_CODIGO, 
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CGG_CRPER_CODIGO) AS CRPER_TBENEFICIARIO,		
		T.CRPRO_CODIGO, 
		T.CRTST_CODIGO,
		F_CGG_RES_TIPO_SOLICITUD_TRAMITE_SELECT_DESCRIPCION(T.CRTST_CODIGO) AS CRTST_DESCRIPCION, 		
		T.CVVEH_CODIGO, 
		T.CRETT_CODIGO, 
		T.CISLA_CODIGO, 
		T.CVMTR_CODIGO, 
		T.CRTRA_ANIO, 
		T.CRTRA_NUMERO, 
		T.CRTRA_FECHA_RECEPCION, 
		T.CRTRA_ACTIVIDAD_RESIDENCIA, 
		SII.F_NOMBRE_CARGO(T.CRTRA_ACTIVIDAD_RESIDENCIA) AS ACTIVIDAD_RESIDENCIA,
		T.CRTRA_OBSERVACION, 
		T.CRTRA_DIAS_PERMANENCIA, 
		T.CRTRA_PENDIENTE, 
		T.CRTRA_OBSERVACION_PENDIENTE, 
		T.CRTRA_ATENCION_CLIENTE, 
		T.CRTRA_COMUNICADO_RADIAL, 
		T.CRTRA_MOTIVO, 
		T.CRTRA_FOLIO, 
		T.CRTRA_ESTADO, 
		T.CRTRA_FECHA_INSERT, 
		T.CRTRA_USUARIO_INSERT, 
		T.CRTRA_FECHA_UPDATE, 
		T.CRTRA_USUARIO_UPDATE,
	    T.CRTRA_GRUPO,
		T.CRTRA_ORDEN
	    FROM SII.CGG_RES_TRAMITE T
	) AS TRA
	WHERE TRA.CRTRA_ESTADO AND
		('||SQL_USUARIOS||')
	AND (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
		COALESCE(CRPER_TAUSPICIANTE,'''')||'' ''||
		COALESCE(CRPJR_NOMBRES,'''')||'' ''||
		COALESCE(CRPER_TBENEFICIARIO,'''')||'' ''||
		COALESCE(CRTST_DESCRIPCION,'''')||'' ''||
		COALESCE(TRA.CRTRA_ANIO,0)||'' ''||
		COALESCE(TRA.CRTRA_NUMERO,0)||'' ''||
		COALESCE(TO_CHAR(TRA.CRTRA_FECHA_RECEPCION,''DD/MM/YY''),'' '')||'' ''||
		COALESCE(TRA.ACTIVIDAD_RESIDENCIA,'''')||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION,'''')||'' ''||
		COALESCE(TRA.CRTRA_DIAS_PERMANENCIA,0)||'' ''||
		COALESCE(TRA.CRTRA_PENDIENTE,0)||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION_PENDIENTE,'''')||'' ''||
		COALESCE(TRA.CRTRA_ATENCION_CLIENTE,FALSE)||'' ''||
		COALESCE(TRA.CRTRA_COMUNICADO_RADIAL,'''')||'' ''||
		COALESCE(TRA.CRTRA_MOTIVO,'''')||'' ''||
		COALESCE(TRA.CRTRA_FOLIO,0)||'' ''||
		COALESCE(TRA.CRTRA_ESTADO,FALSE)||'' ''||	
		COALESCE(TRA.CRTRA_USUARIO_INSERT,'''')) = 1)';
	
	EXECUTE SQL_STMT INTO TMP_ROWS;	
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_INSERT_2
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGSITRO DE TRAMITE
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE AUSPICIANTE
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE AUSPICIANTE PERSONA JURIDICA
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEL BENEFICIARIO
* @param IN_CRPRO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO DE SOLICITUD DE RESIDENCIA
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @param IN_CRETT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ESTADO TRAMITE
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @param IN_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR
* @param IN_CGG_CVMTR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOTOR REEMPLAZADO
* @param IN_CGG_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO REEMPLAZADO
* @param IN_CRTRA_ANIO ANIO DE REALIZACION DEL TRAMITE
* @param IN_CRTRA_NUMERO NUMERO SECUENCIAL UNICO
* @param IN_CRTRA_FECHA_RECEPCION FECHA DE RECEPCION DEL TRAMITE
* @param IN_CRTRA_ACTIVIDAD_RESIDENCIA ACTIVIDAD A REALIZAR EN LA PROVINCIA POR PARTE DEL BENEFICIARIO RESIDENCIA
* @param IN_CRTRA_OBSERVACION OBSERVACION DEL TRAMITE- HISTORIAL FORMATO JSON
* @param IN_CRTRA_DIAS_PERMANENCIA NUMERO DE DIAS AUTORIZADOS PARA PERMANENCIA DE UNA PERSONA
* @param IN_CRTRA_PENDIENTE DETERMINA SI UN TRAMITE YA HA SIDO EVALUADO POR COMITE
* @param IN_CRTRA_OBSERVACION_PENDIENTE JUSTIFICACION DE PORQUE EL TRAMITE QUEDO PENDIENTE
* @param IN_CRTRA_ATENCION_CLIENTE SI LA INFORMACION FUE REGISTRADA DESDE ATENCION AL CLIENTE
* @param IN_CRTRA_COMUNICADO_RADIAL NUMERO DE COMUNICADO RADIAL QUE PATROCINA EL TRAMITE DE RESIDENCIA TEMPORAL
* @param IN_CRTRA_MOTIVO NUMERO DE ARTICULO QUE MOTIVO LA SOLICITUD DE RESIDENCIA.
* @param IN_CRTRA_FOLIO NUMERO DE HOJAS FOLIADAS PARA EL TRAMITE
* @param IN_CRTRA_GRUPO DETERMINA SI EL TRAMITE PERTENECE A UN GRUPO
* @param IN_CRTRA_ORDEN DETERMINA EL ORDENAMIENTO EN EL INGRESO PARA TRAMITES DE GRUPO
* @param IN_CRTRA_FECHA_INGRESO FECHA DE INGRESO A LA PROVINCIA DEL BENEFICIARIO
* @param IN_CRTRA_FECHA_SALIDA FECHA DE SALIDA DE LA PROVINCIA DEL BENEFICIARIO
* @param IN_CRTRA_ESTADO ESTADO DEL REGISTRO FINALIZADO O NO
* @param IN_CRTRA_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRTRA_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_INSERT_2(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_TRAMITE.CRPER_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_TRAMITE.CRPJR_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_TRAMITE.CGG_CRPER_CODIGO%TYPE, 
IN IN_CRPRO_CODIGO SII.CGG_RES_TRAMITE.CRPRO_CODIGO%TYPE, 
IN IN_CRTST_CODIGO SII.CGG_RES_TRAMITE.CRTST_CODIGO%TYPE, 
IN IN_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CVVEH_CODIGO%TYPE, 
IN IN_CRETT_CODIGO SII.CGG_RES_TRAMITE.CRETT_CODIGO%TYPE, 
IN IN_CISLA_CODIGO SII.CGG_RES_TRAMITE.CISLA_CODIGO%TYPE, 
IN IN_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CVMTR_CODIGO%TYPE, 
IN IN_CGG_CVMTR_CODIGO SII.CGG_RES_TRAMITE.CGG_CVMTR_CODIGO%TYPE,
IN IN_CGG_CVVEH_CODIGO SII.CGG_RES_TRAMITE.CGG_CVVEH_CODIGO%TYPE,
IN IN_CRTRA_ANIO SII.CGG_RES_TRAMITE.CRTRA_ANIO%TYPE, 
IN IN_CRTRA_NUMERO SII.CGG_RES_TRAMITE.CRTRA_NUMERO%TYPE, 
IN IN_CRTRA_FECHA_RECEPCION SII.CGG_RES_TRAMITE.CRTRA_FECHA_RECEPCION%TYPE, 
IN IN_CRTRA_ACTIVIDAD_RESIDENCIA SII.CGG_RES_TRAMITE.CRTRA_ACTIVIDAD_RESIDENCIA%TYPE, 
IN IN_CRTRA_OBSERVACION SII.CGG_RES_TRAMITE.CRTRA_OBSERVACION%TYPE, 
IN IN_CRTRA_DIAS_PERMANENCIA SII.CGG_RES_TRAMITE.CRTRA_DIAS_PERMANENCIA%TYPE, 
IN IN_CRTRA_PENDIENTE SII.CGG_RES_TRAMITE.CRTRA_PENDIENTE%TYPE, 
IN IN_CRTRA_OBSERVACION_PENDIENTE SII.CGG_RES_TRAMITE.CRTRA_OBSERVACION_PENDIENTE%TYPE, 
IN IN_CRTRA_ATENCION_CLIENTE SII.CGG_RES_TRAMITE.CRTRA_ATENCION_CLIENTE%TYPE, 
IN IN_CRTRA_COMUNICADO_RADIAL SII.CGG_RES_TRAMITE.CRTRA_COMUNICADO_RADIAL%TYPE, 
IN IN_CRTRA_MOTIVO SII.CGG_RES_TRAMITE.CRTRA_MOTIVO%TYPE, 
IN IN_CRTRA_FOLIO SII.CGG_RES_TRAMITE.CRTRA_FOLIO%TYPE, 
IN IN_CRTRA_GRUPO SII.CGG_RES_TRAMITE.CRTRA_GRUPO%TYPE, 
IN IN_CRTRA_ORDEN SII.CGG_RES_TRAMITE.CRTRA_ORDEN%TYPE, 
IN IN_CRTRA_FECHA_INGRESO SII.CGG_RES_TRAMITE.CRTRA_FECHA_INGRESO%TYPE, 
IN IN_CRTRA_FECHA_SALIDA SII.CGG_RES_TRAMITE.CRTRA_FECHA_SALIDA%TYPE, 
IN IN_CRTRA_ESTADO SII.CGG_RES_TRAMITE.CRTRA_ESTADO%TYPE, 
IN IN_CRTRA_USUARIO_INSERT SII.CGG_RES_TRAMITE.CRTRA_USUARIO_INSERT%TYPE, 
IN IN_CRTRA_USUARIO_UPDATE SII.CGG_RES_TRAMITE.CRTRA_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
OUT_NUM NUMERIC;
OUT_RESULT VARCHAR;
BEGIN
	IF (UPPER(IN_CRTRA_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_TRAMITE','CRTRA_CODIGO','CRTRA') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRTRA_CODIGO;
	END IF;
	
	IF(IN_CRTRA_NUMERO = 0)THEN
		SELECT SII.F_NUMERO('CGG_RES_TRAMITE','CRTRA_NUMERO','CRTRA_ANIO') INTO OUT_NUM;
	ELSE
		OUT_NUM := IN_CRTRA_NUMERO;		
	END IF;
	
	INSERT INTO SII.CGG_RES_TRAMITE(
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CGG_CRPER_CODIGO, 
		CRPRO_CODIGO, 
		CRTST_CODIGO, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRPER_CODIGO, 
		IN_CRPJR_CODIGO, 
		IN_CGG_CRPER_CODIGO, 
		IN_CRPRO_CODIGO, 
		IN_CRTST_CODIGO, 
		IN_CVVEH_CODIGO, 
		IN_CRETT_CODIGO, 
		IN_CISLA_CODIGO,  
		IN_CVMTR_CODIGO, 
		IN_CGG_CVMTR_CODIGO, 
		IN_CGG_CVVEH_CODIGO, 
		IN_CRTRA_ANIO, 
		OUT_NUM, 
		IN_CRTRA_FECHA_RECEPCION, 
		IN_CRTRA_ACTIVIDAD_RESIDENCIA, 
		IN_CRTRA_OBSERVACION, 
		IN_CRTRA_DIAS_PERMANENCIA, 
		IN_CRTRA_PENDIENTE, 
		IN_CRTRA_OBSERVACION_PENDIENTE, 
		IN_CRTRA_ATENCION_CLIENTE, 
		IN_CRTRA_COMUNICADO_RADIAL, 
		IN_CRTRA_MOTIVO, 
		IN_CRTRA_FOLIO,
		IN_CRTRA_GRUPO, 
		IN_CRTRA_ORDEN, 
		IN_CRTRA_FECHA_INGRESO, 
		IN_CRTRA_FECHA_SALIDA, 
		IN_CRTRA_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRTRA_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRTRA_USUARIO_UPDATE
	);	
	OUT_RESULT:=OUT_KEY||','||OUT_NUM;		
	RETURN OUT_RESULT;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_HISTORIAL
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_HISTORIAL(
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;	
	SQL_STMT TEXT;		
BEGIN
	
	SQL_STMT := 'SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO,
		CRPER_TAUSPICIANTE,		
		CRPJR_CODIGO,
		CRPJR_NOMBRES,        
		CGG_CRPER_CODIGO, 
		CRPER_TBENEFICIARIO,		
		CRPRO_CODIGO, 
		CRTST_CODIGO,
		CRTST_DESCRIPCION,		
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CRETT_NOMBRE,
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		ACTIVIDAD_RESIDENCIA,
		CGCRG_NOMBRE,
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE,
	    CRTRA_GRUPO,
		CRTRA_ORDEN,
		CRTGR_ESTADO_ASIGNACION,
		CRSEG_ESTADO_ATENCION
	FROM (
	    SELECT	
	   	T.CRTRA_CODIGO, 
		T.CRPER_CODIGO,
		COALESCE(PRSA.CRPER_NOMBRES,'''')||'' ''||COALESCE(PRSA.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PRSA.CRPER_APELLIDO_MATERNO,'''') AS CRPER_TAUSPICIANTE,		
		T.CRPJR_CODIGO,
		PJR.CRPJR_RAZON_SOCIAL AS CRPJR_NOMBRES,        
		T.CGG_CRPER_CODIGO, 
		COALESCE(PRSB.CRPER_NOMBRES,'''')||'' ''||COALESCE(PRSB.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PRSB.CRPER_APELLIDO_MATERNO,'''') AS CRPER_TBENEFICIARIO,		
		T.CRPRO_CODIGO, 
		T.CRTST_CODIGO,
		TST.CRTST_DESCRIPCION AS CRTST_DESCRIPCION, 		
		T.CVVEH_CODIGO, 
		T.CRETT_CODIGO, 
		STT.CRETT_NOMBRE,
		T.CISLA_CODIGO,  
		T.CVMTR_CODIGO, 
		T.CGG_CVMTR_CODIGO, 
		T.CGG_CVVEH_CODIGO, 
		T.CRTRA_ANIO, 
		T.CRTRA_NUMERO, 
		T.CRTRA_FECHA_RECEPCION, 
		T.CRTRA_ACTIVIDAD_RESIDENCIA, 
		GMC.CGCRG_NOMBRE,
		GMC.CGCRG_NOMBRE AS ACTIVIDAD_RESIDENCIA,
		T.CRTRA_OBSERVACION, 
		T.CRTRA_DIAS_PERMANENCIA, 
		T.CRTRA_PENDIENTE, 
		T.CRTRA_OBSERVACION_PENDIENTE, 
		T.CRTRA_ATENCION_CLIENTE, 
		T.CRTRA_COMUNICADO_RADIAL, 
		T.CRTRA_MOTIVO, 
		T.CRTRA_FOLIO, 
		T.CRTRA_ESTADO, 
		T.CRTRA_FECHA_INSERT, 
		T.CRTRA_USUARIO_INSERT, 
		T.CRTRA_FECHA_UPDATE, 
		T.CRTRA_USUARIO_UPDATE,
		T.CRTRA_GRUPO,
		T.CRTRA_ORDEN,
		TRG.CRTGR_ESTADO_ASIGNACION,
		(SELECT CRSEG_ESTADO_ATENCION FROM SII.CGG_RES_SEGUIMIENTO WHERE CRTRA_CODIGO = T.CRTRA_CODIGO ORDER BY CRSEG_FECHA_INSERT DESC LIMIT 1) CRSEG_ESTADO_ATENCION
	    FROM SII.CGG_RES_TRAMITE T
		LEFT JOIN SII.CGG_RES_PERSONA PRSA ON PRSA.CRPER_CODIGO = T.CRPER_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA PRSB ON PRSB.CRPER_CODIGO = T.CGG_CRPER_CODIGO
		INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = T.CRTST_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJR ON PJR.CRPJR_CODIGO = T.CRPJR_CODIGO
		LEFT JOIN SII.CGG_GEM_CARGO GMC ON GMC.CGCRG_CODIGO = T.CRTRA_ACTIVIDAD_RESIDENCIA
		LEFT JOIN SII.CGG_RES_TRAMITE_GARANTIA TRG ON TRG.CRTRA_CODIGO = T.CRTRA_CODIGO
		LEFT JOIN SII.CGG_RES_ESTADO_TRAMITE STT ON STT.CRETT_CODIGO = T.CRETT_CODIGO
		WHERE T.CRTRA_ESTADO
	) AS TRA
	WHERE (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
		COALESCE(CRPER_TAUSPICIANTE,'''')||'' ''||
		COALESCE(CRPJR_NOMBRES,'''')||'' ''||
		COALESCE(CRPER_TBENEFICIARIO,'''')||'' ''||
		COALESCE(CRTST_DESCRIPCION,'''')||'' ''||
		COALESCE(TRA.CRTRA_ANIO,0)||'' ''||
		COALESCE(TRA.CRTRA_NUMERO,0)||'' ''||
		COALESCE(TO_CHAR(TRA.CRTRA_FECHA_RECEPCION,''DD/MM/YY''),'' '')||'' ''||
		COALESCE(TRA.ACTIVIDAD_RESIDENCIA,'''')||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION,'''')||'' ''||
		COALESCE(TRA.CRTRA_DIAS_PERMANENCIA,0)||'' ''||
		COALESCE(TRA.CRTRA_PENDIENTE,0)||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION_PENDIENTE,'''')||'' ''||
		COALESCE(TRA.CRTRA_ATENCION_CLIENTE,FALSE)||'' ''||
		COALESCE(TRA.CRTRA_COMUNICADO_RADIAL,'''')||'' ''||
		COALESCE(TRA.CRTRA_MOTIVO,'''')||'' ''||
		COALESCE(TRA.CRTRA_FOLIO,0)||'' ''||
		COALESCE(TRA.CRTRA_ESTADO,FALSE)||'' ''||	
		COALESCE(TRA.CRTRA_USUARIO_INSERT,'''')) = 1)
	LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	
	--ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	
	OPEN TMP_REF FOR EXECUTE SQL_STMT;	
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
*FUNCION. DEVUELVE EL TOTAL DE FILAS DE LA TABLA TRAMITE.
*@param IN_FIND_TEXT TEXT CRITERIO DE BUSQUEDA DE INFORMACION.
*@return NUMERO DE FILAS SELECCIONADAS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_HISTORIAL_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
	TMP_REF REFCURSOR;	
	SQL_STMT TEXT;
    TMP_ROWS NUMERIC;
BEGIN
	
	SQL_STMT := 'SELECT
		COUNT(CRTRA_CODIGO)
	FROM (
	    SELECT	
	   	T.CRTRA_CODIGO, 
		T.CRPER_CODIGO,
		COALESCE(PRSA.CRPER_NOMBRES,'''')||'' ''||COALESCE(PRSA.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PRSA.CRPER_APELLIDO_MATERNO,'''') AS CRPER_TAUSPICIANTE,		
		T.CRPJR_CODIGO,
		PJR.CRPJR_RAZON_SOCIAL AS CRPJR_NOMBRES,        
		T.CGG_CRPER_CODIGO, 
		COALESCE(PRSB.CRPER_NOMBRES,'''')||'' ''||COALESCE(PRSB.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PRSB.CRPER_APELLIDO_MATERNO,'''') AS CRPER_TBENEFICIARIO,
		T.CRPRO_CODIGO, 
		T.CRTST_CODIGO,
		TST.CRTST_DESCRIPCION AS CRTST_DESCRIPCION,
		T.CVVEH_CODIGO, 
		T.CRETT_CODIGO, 
		T.CISLA_CODIGO,  
		T.CVMTR_CODIGO, 
		T.CRTRA_ANIO, 
		T.CRTRA_NUMERO, 
		T.CRTRA_FECHA_RECEPCION, 
		T.CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRG.CGCRG_NOMBRE AS ACTIVIDAD_RESIDENCIA,
		T.CRTRA_OBSERVACION, 
		T.CRTRA_DIAS_PERMANENCIA, 
		T.CRTRA_PENDIENTE, 
		T.CRTRA_OBSERVACION_PENDIENTE, 
		T.CRTRA_ATENCION_CLIENTE, 
		T.CRTRA_COMUNICADO_RADIAL, 
		T.CRTRA_MOTIVO, 
		T.CRTRA_FOLIO, 
		T.CRTRA_ESTADO, 
		T.CRTRA_FECHA_INSERT, 
		T.CRTRA_USUARIO_INSERT, 
		T.CRTRA_FECHA_UPDATE, 
		T.CRTRA_USUARIO_UPDATE,
	    T.CRTRA_GRUPO,
		T.CRTRA_ORDEN
	    FROM SII.CGG_RES_TRAMITE T
		LEFT JOIN SII.CGG_RES_PERSONA PRSA ON PRSA.CRPER_CODIGO = T.CRPER_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA PRSB ON PRSB.CRPER_CODIGO = T.CGG_CRPER_CODIGO
		INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = T.CRTST_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJR ON PJR.CRPJR_CODIGO = T.CRPJR_CODIGO
		LEFT JOIN SII.CGG_GEM_CARGO CRG ON CRG.CGCRG_CODIGO = T.CRTRA_ACTIVIDAD_RESIDENCIA
		WHERE T.CRTRA_ESTADO
	) AS TRA
	WHERE (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
		COALESCE(CRPER_TAUSPICIANTE,'''')||'' ''||
		COALESCE(CRPJR_NOMBRES,'''')||'' ''||
		COALESCE(CRPER_TBENEFICIARIO,'''')||'' ''||
		COALESCE(CRTST_DESCRIPCION,'''')||'' ''||
		COALESCE(TRA.CRTRA_ANIO,0)||'' ''||
		COALESCE(TRA.CRTRA_NUMERO,0)||'' ''||
		COALESCE(TO_CHAR(TRA.CRTRA_FECHA_RECEPCION,''DD/MM/YYYY''),'' '')||'' ''||
		COALESCE(TRA.ACTIVIDAD_RESIDENCIA,'''')||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION,'''')||'' ''||
		COALESCE(TRA.CRTRA_DIAS_PERMANENCIA,0)||'' ''||
		COALESCE(TRA.CRTRA_PENDIENTE,0)||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION_PENDIENTE,'''')||'' ''||
		COALESCE(TRA.CRTRA_ATENCION_CLIENTE,FALSE)||'' ''||
		COALESCE(TRA.CRTRA_COMUNICADO_RADIAL,'''')||'' ''||
		COALESCE(TRA.CRTRA_MOTIVO,'''')||'' ''||
		COALESCE(TRA.CRTRA_FOLIO,0)||'' ''||
		COALESCE(TRA.CRTRA_ESTADO,FALSE)||'' ''||	
		COALESCE(TRA.CRTRA_USUARIO_INSERT,'''')) = 1)';	
	EXECUTE SQL_STMT INTO TMP_ROWS;	
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_RES_TRAMITE_ESTADO_ISLA
* SELECCIONA LOS REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE EN BASE A SU CODIGO DE ESTADO E ISLA DEL TRAMITE.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS.
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @param IN_CISLA_CODIGO CODIGO DE ISLA.
* @param IN_CRETT_CODIGO CODIGO DE ESTADO DE TRAMITE.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_ESTADO_ISLA(
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_CISLA_CODIGO VARCHAR,
IN IN_CRETT_CODIGO VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;	
	SQL_STMT TEXT;	
	TMP_ISLA TEXT;
BEGIN
	
	IF(IN_CISLA_CODIGO IS NULL)THEN
		TMP_ISLA := 'AND TRA.CISLA_CODIGO = '||QUOTE_LITERAL(CISLA_CODIGO);
	ELSE
		TMP_ISLA :='';
	END IF;
	
	SQL_STMT := 'SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO,
		CRPER_TAUSPICIANTE,		
		CRPJR_CODIGO,
		CRPJR_NOMBRES,        
		CGG_CRPER_CODIGO, 
		CRPER_TBENEFICIARIO,		
		CRPRO_CODIGO, 
		CRTST_CODIGO,
		CRTST_DESCRIPCION,		
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		CRETT_NOMBRE,
		CISLA_CODIGO,  
		CVMTR_CODIGO, 
		CGG_CVMTR_CODIGO, 
		CGG_CVVEH_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CGCRG_NOMBRE,
		ACTIVIDAD_RESIDENCIA,
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_ESTADO, 
		CRTRA_FECHA_INSERT, 
		CRTRA_USUARIO_INSERT, 
		CRTRA_FECHA_UPDATE, 
		CRTRA_USUARIO_UPDATE
	    CRTRA_GRUPO,
		CRTRA_ORDEN
	FROM (
	    SELECT	
			T.CRTRA_CODIGO, 
			T.CRPER_CODIGO,
			SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CRPER_CODIGO) AS CRPER_TAUSPICIANTE,		
			T.CRPJR_CODIGO,
			SII.F_CGG_RES_PERSONA_JURIDICA_SELECT_NOMBRES(T.CRPJR_CODIGO) AS CRPJR_NOMBRES,        
			T.CGG_CRPER_CODIGO, 
			SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CGG_CRPER_CODIGO) AS CRPER_TBENEFICIARIO,		
			T.CRPRO_CODIGO, 
			T.CRTST_CODIGO,
			F_CGG_RES_TIPO_SOLICITUD_TRAMITE_SELECT_DESCRIPCION(T.CRTST_CODIGO) AS CRTST_DESCRIPCION, 		
			T.CVVEH_CODIGO, 
			T.CRETT_CODIGO, 
			STT.CRETT_NOMBRE,
			T.CISLA_CODIGO,  
			T.CVMTR_CODIGO, 
			T.CGG_CVMTR_CODIGO, 
			T.CGG_CVVEH_CODIGO, 
			T.CRTRA_ANIO, 
			T.CRTRA_NUMERO, 
			T.CRTRA_FECHA_RECEPCION, 
			T.CRTRA_ACTIVIDAD_RESIDENCIA,
			GMC.CGCRG_NOMBRE,
			SII.F_NOMBRE_CARGO(T.CRTRA_ACTIVIDAD_RESIDENCIA) AS ACTIVIDAD_RESIDENCIA,
			T.CRTRA_OBSERVACION, 
			T.CRTRA_DIAS_PERMANENCIA, 
			T.CRTRA_PENDIENTE, 
			T.CRTRA_OBSERVACION_PENDIENTE, 
			T.CRTRA_ATENCION_CLIENTE, 
			T.CRTRA_COMUNICADO_RADIAL, 
			T.CRTRA_MOTIVO, 
			T.CRTRA_FOLIO, 
			T.CRTRA_ESTADO, 
			T.CRTRA_FECHA_INSERT, 
			T.CRTRA_USUARIO_INSERT, 
			T.CRTRA_FECHA_UPDATE, 
			T.CRTRA_USUARIO_UPDATE,
			T.CRTRA_GRUPO,
			T.CRTRA_ORDEN		
	    FROM SII.CGG_RES_TRAMITE T
		LEFT JOIN SII.CGG_GEM_CARGO GMC ON GMC.CGCRG_CODIGO = T.CRTRA_ACTIVIDAD_RESIDENCIA
		LEFT JOIN SII.CGG_RES_ESTADO_TRAMITE STT ON STT.CRETT_CODIGO = T.CRETT_CODIGO
		WHERE T.CRTRA_ESTADO '||TMP_ISLA||' 
			AND T.CRETT_CODIGO = '||QUOTE_LITERAL(IN_CRETT_CODIGO)||'
	) AS TRA
	WHERE SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
	COALESCE(TRA.CRTRA_ANIO,0)||'' ''||
	COALESCE(TRA.CRTRA_NUMERO,0)||'' ''||
	COALESCE(TO_CHAR(TRA.CRTRA_FECHA_RECEPCION,''DD/MM/YY''),'' '')||'' ''||
	COALESCE(TRA.ACTIVIDAD_RESIDENCIA,'''')||'' ''||
	COALESCE(TRA.CRTRA_OBSERVACION,'''')||'' ''||
	COALESCE(TRA.CRTRA_DIAS_PERMANENCIA,0)||'' ''||
	COALESCE(TRA.CRTRA_PENDIENTE,0)||'' ''||
	COALESCE(TRA.CRTRA_OBSERVACION_PENDIENTE,'''')||'' ''||
	COALESCE(TRA.CRTRA_ATENCION_CLIENTE,FALSE)||'' ''||
	COALESCE(TRA.CRTRA_COMUNICADO_RADIAL,'''')||'' ''||
	COALESCE(TRA.CRTRA_MOTIVO,'''')||'' ''||
	COALESCE(TRA.CRTRA_FOLIO,0)||'' ''||
	COALESCE(TRA.CRTRA_ESTADO,FALSE)||'' ''||	
	COALESCE(TRA.CRTRA_USUARIO_INSERT,'''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	
	OPEN TMP_REF FOR EXECUTE SQL_STMT;	
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
*FUNCION. DEVUELVE EL TOTAL DE FILAS DE LA TABLA TRAMITE SELECIONADO POR SU ESTADO E ISLA.
*@param IN_FIND_TEXT TEXT CRITERIO DE BUSQUEDA DE INFORMACION.
* @ param IN_CISLA_CODIGO CODIGO DE ISLA.
* @ param IN_CRETT_CODIGO CODIGO DE ESTADO DE TRAMITE.
* @ param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
*@return NUMERO DE FILAS SELECCIONADAS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_ESTADO_ISLA_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_CISLA_CODIGO VARCHAR,
IN IN_CRETT_CODIGO VARCHAR
)RETURNS INT AS
$$
DECLARE
	TMP_REF REFCURSOR;	
	SQL_STMT TEXT;
    TMP_ROWS NUMERIC;
	TMP_ISLA TEXT;
BEGIN
	
	IF(IN_CISLA_CODIGO IS NULL)THEN
		TMP_ISLA := 'AND TRA.CISLA_CODIGO = '||QUOTE_LITERAL(CISLA_CODIGO);
	ELSE
		TMP_ISLA :='';
	END IF;
	
	SQL_STMT := 'SELECT
		COUNT(CRTRA_CODIGO)
	FROM (
	    SELECT	
	   	T.CRTRA_CODIGO, 
		T.CRPER_CODIGO,
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CRPER_CODIGO) AS CRPER_TAUSPICIANTE,		
		T.CRPJR_CODIGO,
		SII.F_CGG_RES_PERSONA_JURIDICA_SELECT_NOMBRES(T.CRPJR_CODIGO) AS CRPJR_NOMBRES,        
		T.CGG_CRPER_CODIGO, 
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CGG_CRPER_CODIGO) AS CRPER_TBENEFICIARIO,		
		T.CRPRO_CODIGO, 
		T.CRTST_CODIGO,
		F_CGG_RES_TIPO_SOLICITUD_TRAMITE_SELECT_DESCRIPCION(T.CRTST_CODIGO) AS CRTST_DESCRIPCION, 		
		T.CVVEH_CODIGO, 
		T.CRETT_CODIGO, 
		T.CISLA_CODIGO,  
		T.CVMTR_CODIGO, 
		T.CGG_CVMTR_CODIGO, 
		T.CGG_CVVEH_CODIGO, 
		T.CRTRA_ANIO, 
		T.CRTRA_NUMERO, 
		T.CRTRA_FECHA_RECEPCION, 
		T.CRTRA_ACTIVIDAD_RESIDENCIA, 
		SII.F_NOMBRE_CARGO(T.CRTRA_ACTIVIDAD_RESIDENCIA) AS ACTIVIDAD_RESIDENCIA,
		T.CRTRA_OBSERVACION, 
		T.CRTRA_DIAS_PERMANENCIA, 
		T.CRTRA_PENDIENTE, 
		T.CRTRA_OBSERVACION_PENDIENTE, 
		T.CRTRA_ATENCION_CLIENTE, 
		T.CRTRA_COMUNICADO_RADIAL, 
		T.CRTRA_MOTIVO, 
		T.CRTRA_FOLIO, 
		T.CRTRA_ESTADO, 
		T.CRTRA_FECHA_INSERT, 
		T.CRTRA_USUARIO_INSERT, 
		T.CRTRA_FECHA_UPDATE, 
		T.CRTRA_USUARIO_UPDATE,
	    T.CRTRA_GRUPO,
		T.CRTRA_ORDEN
	    FROM SII.CGG_RES_TRAMITE T
	) AS TRA
	WHERE TRA.CRTRA_ESTADO = TRUE '||TMP_ISLA||' 
	AND TRA.CRETT_CODIGO = '||QUOTE_LITERAL(IN_CRETT_CODIGO)||'
	AND SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
	COALESCE(TRA.CRTRA_ANIO,0)||'' ''||
	COALESCE(TRA.CRTRA_NUMERO,0)||'' ''||
	COALESCE(TO_CHAR(TRA.CRTRA_FECHA_RECEPCION,''DD/MM/YY''),'' '')||'' ''||
	COALESCE(TRA.ACTIVIDAD_RESIDENCIA,'''')||'' ''||
	COALESCE(TRA.CRTRA_OBSERVACION,'''')||'' ''||
	COALESCE(TRA.CRTRA_DIAS_PERMANENCIA,0)||'' ''||
	COALESCE(TRA.CRTRA_PENDIENTE,0)||'' ''||
	COALESCE(TRA.CRTRA_OBSERVACION_PENDIENTE,'''')||'' ''||
	COALESCE(TRA.CRTRA_ATENCION_CLIENTE,FALSE)||'' ''||
	COALESCE(TRA.CRTRA_COMUNICADO_RADIAL,'''')||'' ''||
	COALESCE(TRA.CRTRA_MOTIVO,'''')||'' ''||
	COALESCE(TRA.CRTRA_FOLIO,0)||'' ''||
	COALESCE(TRA.CRTRA_ESTADO,FALSE)||'' ''||	
	COALESCE(TRA.CRTRA_USUARIO_INSERT,'''')) = 1';	
	EXECUTE SQL_STMT INTO TMP_ROWS;	
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
*FUNCION. DEVUELVE EL TOTAL DE FILAS DE LA TABLA TRAMITE SELECIONADO POR SU CODIGO DE TRAMITE.
@param IN_CRTRA_CODIGO CODIGO DE ESTADO DE TRAMITE.
*@return REFCURSOR.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_SELECT2(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT		
		T.CRTRA_NUMERO,        		
		T.CRTRA_FECHA_RECEPCION,
		T.CISLA_CODIGO,
		T.CRPJR_CODIGO,
		T.CRTRA_OBSERVACION	,
		T.CRTRA_COMUNICADO_RADIAL,
		T.CRPER_CODIGO,
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CRPER_CODIGO) AS CRPER_AUSPICIANTE,
		T.CGG_CRPER_CODIGO,	
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CGG_CRPER_CODIGO) AS CRPER_BENEFICIARIO,
		T.CRTRA_ANIO,
		(SELECT I.CISLA_NOMBRE FROM CGG_ISLA I WHERE I.CISLA_CODIGO = T.CISLA_CODIGO) CISLA_NOMBRE,				
		T.CRTRA_ACTIVIDAD_RESIDENCIA,
		(SELECT TST.CRTST_DESCRIPCION FROM SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST WHERE TST.CRTST_CODIGO = T.CRTST_CODIGO) CRTST_DESCRIPCION,						
		(SELECT PJR.CRPJR_RAZON_SOCIAL FROM SII.CGG_RES_PERSONA_JURIDICA PJR WHERE PJR.CRPJR_CODIGO = T.CRPJR_CODIGO) CRPJR_RAZON_SOCIAL,				
		T.CRTST_CODIGO,
		T.CRPRO_CODIGO,
		T.CRTRA_FOLIO,
		T.CRTRA_DIAS_PERMANENCIA,
		T.CRTRA_FECHA_SALIDA,
		(SELECT COALESCE(CVVEH_NOMBRE,'')||' '||COALESCE(CVVEH_PLACA,'')||' '||COALESCE(CVVEH_CHASIS,'') FROM SII.CGG_VEH_VEHICULO WHERE CVVEH_CODIGO = T.CVVEH_CODIGO) VEHICULO,
		T.CRTRA_FECHA_INGRESO,
		T.CRTRA_FECHA_SALIDA,
		T.CRTRA_GRUPO,
		T.CRTRA_ORDEN,
		T.CRETT_CODIGO,
		F.CRFAS_NOMBRE,
		F.CRFAS_CODIGO,
		S.CRSEG_CODIGO
	FROM  SII.CGG_RES_TRAMITE T 
	INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON (TST.CRTST_CODIGO = T.CRTST_CODIGO)
	INNER JOIN SII.CGG_RES_SEGUIMIENTO S ON (T.CRTRA_CODIGO = S.CRTRA_CODIGO)
	INNER JOIN SII.CGG_RES_FASE F ON (S.CRFAS_CODIGO = F.CRFAS_CODIGO)
	WHERE  T.CRTRA_CODIGO = IN_CRTRA_CODIGO AND CGG_CRSEG_CODIGO IS NULL; --DESPACHADO  Y FINALIZADO
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


