/**
* FUNCION SII.F_CGG_RES_PERSONA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_PERSONA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @param IN_CRECV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL ESTADO CIVIL
* @param IN_CRDID_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DOCUMENTO DE IDENTIFICACION
* @param IN_CRTSG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO SANQUINEO
* @param IN_CGNCN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE NACIONALIDAD
* @param IN_CPRR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PARROQUIA
* @param IN_CCTN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CANTON
* @param IN_CGG_CCTN_CODIGO CIUDAD DE ORIGEN EN EL ECUADOR CONTINENTAL DE UN RESIDENTE
* @param IN_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE NACIMIENTO
* @param IN_CGG_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE RESIDENCIA
* @param IN_CRPER_NOMBRES NOMBRES DE LA PERSONA
* @param IN_CRPER_APELLIDO_PATERNO APELLIDO PATERNO
* @param IN_CRPER_APELLIDO_MATERNO APELLIDO MATERNO
* @param IN_CRPER_NUM_DOC_IDENTIFIC NUMERO DE DOCUMENTO DE IDENTIFICACION
* @param IN_CRPER_FECHA_NACIMIENTO FECHA DE NACIMIENTO
* @param IN_CRPER_LUGAR_NACIMIENTO LUGAR DE NACIMIENTO
* @param IN_CRPER_GENERO GENERO DE LA PERSONA
0 - MASCULINO
1 - FEMENINO
* @param IN_CRPER_OBSERVACIONES OBSERVACIONES O COMENTARIOS PARA CON LA PERSONA

* @param IN_CRPER_NUMERO_RESIDENCIA NUMERO UNICO DE IDENTIFICACION DE RESIDENCIA
* @param IN_CRPER_FOTO FOTOGRAFIA DE LA PERSONA
* @param IN_CRPER_FOTO_CURRICULUM FOTOGRAFIA DE LA PERSONA PARA PUBLICACION EN EL CURRICULUM
* @param IN_CRPER_HUELLA_DACTILAR INFORMACION EN BASE64 QUE REPRESENTA LAS HUELLAS CAPTURADAS. ESTA INFORMACION ES PROCESADA POR LA LIBRERIA. ESTA INFORMACION DEBE SER CONSIDERADA PARA VERIFICACIONES.
* @param IN_CRPER_HUELLA_IMAGEN IMAGEN EN FORMATO JPG DE LAS HUELLAS DACTILARES DE LA PERSONA. LAS IMAGENES ESTAN ORDENADAS CONFORME A UNA MATRIZ DE 5X2. SUPERIOR: MANO DERECHA, INFERIOR: MANO IZQUIERDA; DE IZQUIERDA A DERECHA DESDE PULGAR A MENIQUE; RESOLUCION: 248x292 PXL CADA IMAGEN.
* @param IN_CRPER_HUELLA_CADENA INFORMACION EN BASE64 QUE REPRESENTA LAS HUELLAS CAPTURADA. ESTA INFORMACION NO ES PROCESADA POR LA LIBRERIA, CON LA FINALIDAD DE OBTENER IMAGENES INDIVIDUALES DE LA HUELLAS. ESTA INFORMACION NO PUEDE SER CONSIDERADA PARA VERIFICACIONES.
* @param IN_CRPER_FIRMA FIRMA DIGITAL DE LA PERSONA
* @param IN_CRPER_AUTORIZADO ESTADO DEL REGISTRO QUE DEFINE SI UNA PERSONA TIENE AUTORIZADO SU INGRESO A LA PROVINCIA
* @param IN_CRPER_NUMERO_EXPEDIENTE NUMERO DE EXPEDIENTE UNICO
* @param IN_CRPER_FECHA_ARCHIVO FECHA DE ARCHIVO DE LA DOCUMENTACION DE LA PERSONA
* @param IN_CRPER_EMPLEADO ESTADO LABORAL DE LA PERSONA
* @param IN_CRPER_FECHA_ULTIMO_EMPLEO FECHA DE INICIO DEL ULTIMO EMPLEO
* @param IN_CRPER_ASPIRACION_SALARIAL SALARIO ESPERADO POR CUMPLIR CON UN DETERMINADO TRABAJO
* @param IN_CRPER_CUPO_VEHICULAR SI TIENE DISPONIBLE UN CUPO VEHICULAR
* @param IN_CRPER_TIPO_PERSONA CAMPO QUE IDENTIPFICA EL TIPO DE PERSONA
0 - CAPACIDADES ESPECIALES
1 - DISCAPACIDAD FISICA
2 - NORMAL
* @param IN_CRPER_ESTADO_INTERFECTO CAMPO QUE VERIFICA EL ESTADO INTERFECTO DE LA PERSONA

* @param IN_CRPER_FECHA_DEFUNCION FECHA DE DEFUNCION
* @param IN_CRPER_NUMERO_ACTA NUMERO DE ACTA DE DEFUNCION
* @param IN_CRPER_ADJUNTO_ACTA DIGITALIZACION DEL ACTA DE DEFUNCION
* @param IN_CRPER_NOMBRE_ADJUNTO_ACTA NOMBRE DEL ARCHIVO ADJUNTO DEL ACTA.
* @param IN_CRPER_TIPO ALMACENA INFORMACION QUE PERMITE DEFINIR EL ESTATUS DE LA PERSONA.
0 - IRREGULAR
1 - REGULAR
* @param IN_CRPER_ATENCION_CLIENTE SI LA INFORMACION FUE REGISTRADA DESDE ATENCION AL CLIENTE
* @param IN_CRPER_ESTADO ESTADO DEL REGISTRO
* @param IN_CRPER_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRPER_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_INSERT(
IN IN_CRPER_CODIGO SII.CGG_RES_PERSONA.CRPER_CODIGO%TYPE,
IN IN_CRECV_CODIGO SII.CGG_RES_PERSONA.CRECV_CODIGO%TYPE,
IN IN_CRDID_CODIGO SII.CGG_RES_PERSONA.CRDID_CODIGO%TYPE,
IN IN_CRTSG_CODIGO SII.CGG_RES_PERSONA.CRTSG_CODIGO%TYPE,
IN IN_CGNCN_CODIGO SII.CGG_RES_PERSONA.CGNCN_CODIGO%TYPE,
IN IN_CPRR_CODIGO SII.CGG_RES_PERSONA.CPRR_CODIGO%TYPE,
IN IN_CCTN_CODIGO SII.CGG_RES_PERSONA.CCTN_CODIGO%TYPE,
IN IN_CGG_CCTN_CODIGO SII.CGG_RES_PERSONA.CGG_CCTN_CODIGO%TYPE,
IN IN_CPAIS_CODIGO SII.CGG_RES_PERSONA.CPAIS_CODIGO%TYPE,
IN IN_CGG_CPAIS_CODIGO SII.CGG_RES_PERSONA.CGG_CPAIS_CODIGO%TYPE,
IN IN_CRPER_NOMBRES SII.CGG_RES_PERSONA.CRPER_NOMBRES%TYPE,
IN IN_CRPER_APELLIDO_PATERNO SII.CGG_RES_PERSONA.CRPER_APELLIDO_PATERNO%TYPE,
IN IN_CRPER_APELLIDO_MATERNO SII.CGG_RES_PERSONA.CRPER_APELLIDO_MATERNO%TYPE,
IN IN_CRPER_NUM_DOC_IDENTIFIC SII.CGG_RES_PERSONA.CRPER_NUM_DOC_IDENTIFIC%TYPE,
IN IN_CRPER_FECHA_NACIMIENTO SII.CGG_RES_PERSONA.CRPER_FECHA_NACIMIENTO%TYPE,
IN IN_CRPER_LUGAR_NACIMIENTO SII.CGG_RES_PERSONA.CRPER_LUGAR_NACIMIENTO%TYPE,
IN IN_CRPER_GENERO SII.CGG_RES_PERSONA.CRPER_GENERO%TYPE,
IN IN_CRPER_OBSERVACIONES SII.CGG_RES_PERSONA.CRPER_OBSERVACIONES%TYPE,
IN IN_CRPER_NUMERO_RESIDENCIA SII.CGG_RES_PERSONA.CRPER_NUMERO_RESIDENCIA%TYPE,
IN IN_CRPER_FOTO SII.CGG_RES_PERSONA.CRPER_FOTO%TYPE,
IN IN_CRPER_FOTO_CURRICULUM SII.CGG_RES_PERSONA.CRPER_FOTO_CURRICULUM%TYPE,
IN IN_CRPER_HUELLA_DACTILAR SII.CGG_RES_PERSONA.CRPER_HUELLA_DACTILAR%TYPE,
IN IN_CRPER_HUELLA_IMAGEN SII.CGG_RES_PERSONA.CRPER_HUELLA_IMAGEN%TYPE,
IN IN_CRPER_HUELLA_CADENA SII.CGG_RES_PERSONA.CRPER_HUELLA_CADENA%TYPE,
IN IN_CRPER_FIRMA SII.CGG_RES_PERSONA.CRPER_FIRMA%TYPE,
IN IN_CRPER_AUTORIZADO SII.CGG_RES_PERSONA.CRPER_AUTORIZADO%TYPE,
IN IN_CRPER_NUMERO_EXPEDIENTE SII.CGG_RES_PERSONA.CRPER_NUMERO_EXPEDIENTE%TYPE,
IN IN_CRPER_FECHA_ARCHIVO SII.CGG_RES_PERSONA.CRPER_FECHA_ARCHIVO%TYPE,
IN IN_CRPER_EMPLEADO SII.CGG_RES_PERSONA.CRPER_EMPLEADO%TYPE,
IN IN_CRPER_FECHA_ULTIMO_EMPLEO SII.CGG_RES_PERSONA.CRPER_FECHA_ULTIMO_EMPLEO%TYPE,
IN IN_CRPER_ASPIRACION_SALARIAL SII.CGG_RES_PERSONA.CRPER_ASPIRACION_SALARIAL%TYPE,
IN IN_CRPER_CUPO_VEHICULAR SII.CGG_RES_PERSONA.CRPER_CUPO_VEHICULAR%TYPE,
IN IN_CRPER_TIPO_PERSONA SII.CGG_RES_PERSONA.CRPER_TIPO_PERSONA%TYPE,
IN IN_CRPER_ESTADO_INTERFECTO SII.CGG_RES_PERSONA.CRPER_ESTADO_INTERFECTO%TYPE,
IN IN_CRPER_FECHA_DEFUNCION SII.CGG_RES_PERSONA.CRPER_FECHA_DEFUNCION%TYPE,
IN IN_CRPER_NUMERO_ACTA SII.CGG_RES_PERSONA.CRPER_NUMERO_ACTA%TYPE,
IN IN_CRPER_ADJUNTO_ACTA SII.CGG_RES_PERSONA.CRPER_ADJUNTO_ACTA%TYPE,
IN IN_CRPER_NOMBRE_ADJUNTO_ACTA SII.CGG_RES_PERSONA.CRPER_NOMBRE_ADJUNTO_ACTA%TYPE,
IN IN_CRPER_TIPO SII.CGG_RES_PERSONA.CRPER_TIPO%TYPE,
IN IN_CRPER_ATENCION_CLIENTE SII.CGG_RES_PERSONA.CRPER_ATENCION_CLIENTE%TYPE,
IN IN_CRPER_ESTADO SII.CGG_RES_PERSONA.CRPER_ESTADO%TYPE,
IN IN_CRPER_USUARIO_INSERT SII.CGG_RES_PERSONA.CRPER_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
TMP_RECORD RECORD;
TMP_COUNT INT;
BEGIN
	IF (UPPER(IN_CRPER_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_PERSONA','CRPER_CODIGO','CRPER') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRPER_CODIGO;
	END IF;
	
	SELECT COUNT(CRPER_CODIGO) INTO TMP_COUNT
	FROM SII.CGG_RES_PERSONA PRS WHERE PRS.CRPER_ESTADO 
		AND PRS.CRPER_NUM_DOC_IDENTIFIC = IN_CRPER_NUM_DOC_IDENTIFIC;
		
	IF (TMP_COUNT > 0 ) THEN
		RAISE EXCEPTION 'La persona indicada ya esta registrada.';
	END IF;

	INSERT INTO SII.CGG_RES_PERSONA(
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA, 
		CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRECV_CODIGO, 
		IN_CRDID_CODIGO, 
		IN_CRTSG_CODIGO, 
		IN_CGNCN_CODIGO, 
		IN_CPRR_CODIGO, 
		IN_CCTN_CODIGO, 
		IN_CGG_CCTN_CODIGO, 
		IN_CPAIS_CODIGO, 
		IN_CGG_CPAIS_CODIGO, 
		IN_CRPER_NOMBRES, 
		IN_CRPER_APELLIDO_PATERNO, 
		IN_CRPER_APELLIDO_MATERNO, 
		IN_CRPER_NUM_DOC_IDENTIFIC, 
		IN_CRPER_FECHA_NACIMIENTO, 
		IN_CRPER_LUGAR_NACIMIENTO, 
		IN_CRPER_GENERO, 
		IN_CRPER_OBSERVACIONES, 
		IN_CRPER_NUMERO_RESIDENCIA, 
		IN_CRPER_FOTO, 
		IN_CRPER_FOTO_CURRICULUM, 
		IN_CRPER_HUELLA_DACTILAR, 
		IN_CRPER_HUELLA_IMAGEN, 
		IN_CRPER_HUELLA_CADENA, 
		IN_CRPER_FIRMA, 
		IN_CRPER_AUTORIZADO, 
		IN_CRPER_NUMERO_EXPEDIENTE, 
		IN_CRPER_FECHA_ARCHIVO, 
		IN_CRPER_EMPLEADO, 
		IN_CRPER_FECHA_ULTIMO_EMPLEO, 
		IN_CRPER_ASPIRACION_SALARIAL, 
		IN_CRPER_CUPO_VEHICULAR, 
		IN_CRPER_TIPO_PERSONA, 
		IN_CRPER_ESTADO_INTERFECTO, 
		IN_CRPER_FECHA_DEFUNCION, 
		IN_CRPER_NUMERO_ACTA, 
		IN_CRPER_ADJUNTO_ACTA, 
		IN_CRPER_NOMBRE_ADJUNTO_ACTA, 
		IN_CRPER_TIPO, 
		IN_CRPER_ATENCION_CLIENTE, 
		IN_CRPER_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRPER_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRPER_USUARIO_INSERT
	);
	FOR TMP_RECORD IN (SELECT 
			CRPER_CODIGO,
			CRPER_NOMBRES,
			CRPER_APELLIDO_PATERNO,
			CRPER_APELLIDO_MATERNO,
			CRPER_NUM_DOC_IDENTIFIC,
			CRPER_FECHA_NACIMIENTO,
			CRPER_LUGAR_NACIMIENTO,
			CRPER_OBSERVACIONES,
			CRPER_NUMERO_RESIDENCIA,
			CRPER_NUMERO_EXPEDIENTE,
			CRPER_FECHA_ARCHIVO,
			CRPER_FECHA_ULTIMO_EMPLEO,
			CRPER_ASPIRACION_SALARIAL,
			CRPER_FECHA_DEFUNCION,
			CRPER_NUMERO_ACTA
			FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = OUT_KEY ) LOOP
			UPDATE SII.CGG_RES_PERSONA SET CRPER_INDEX = TO_TSVECTOR(TMP_RECORD::VARCHAR)
				WHERE CRPER_CODIGO = TMP_RECORD.CRPER_CODIGO;
		END LOOP;
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_PERSONA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA, 
		CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_PERSONA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		NULL AS CRPER_FOTO, 
		NULL AS CRPER_FOTO_CURRICULUM, 
		NULL AS CRPER_HUELLA_DACTILAR, 
		NULL AS CRPER_HUELLA_IMAGEN, 
		NULL AS CRPER_HUELLA_CADENA, 
		NULL AS CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		NULL AS CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO AND 
		(LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR crper_index @@ plainto_tsquery('||QUOTE_LITERAL(IN_FIND_TEXT)||'))
	LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_PERSONA
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT4 AS
$$
DECLARE
TMP_ROWS INT4;
BEGIN
	
	IF (LENGTH(IN_FIND_TEXT) = 0) THEN
		SELECT RELTUPLES INTO TMP_ROWS FROM PG_CLASS WHERE RELNAME='cgg_res_persona';
		RETURN TMP_ROWS;
	END IF;
	
	SELECT COUNT(CRPER_CODIGO) INTO TMP_ROWS
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO AND 
		(LENGTH(IN_FIND_TEXT) = 0 OR crper_index @@ plainto_tsquery(IN_FIND_TEXT));
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_PERSONA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @param IN_CRECV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL ESTADO CIVIL
* @param IN_CRDID_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DOCUMENTO DE IDENTIFICACION
* @param IN_CRTSG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO SANQUINEO
* @param IN_CGNCN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE NACIONALIDAD
* @param IN_CPRR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PARROQUIA
* @param IN_CCTN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CANTON
* @param IN_CGG_CCTN_CODIGO CIUDAD DE ORIGEN EN EL ECUADOR CONTINENTAL DE UN RESIDENTE
* @param IN_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE NACIMIENTO
* @param IN_CGG_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE RESIDENCIA
* @param IN_CRPER_NOMBRES NOMBRES DE LA PERSONA
* @param IN_CRPER_APELLIDO_PATERNO APELLIDO PATERNO
* @param IN_CRPER_APELLIDO_MATERNO APELLIDO MATERNO
* @param IN_CRPER_NUM_DOC_IDENTIFIC NUMERO DE DOCUMENTO DE IDENTIFICACION
* @param IN_CRPER_FECHA_NACIMIENTO FECHA DE NACIMIENTO
* @param IN_CRPER_LUGAR_NACIMIENTO LUGAR DE NACIMIENTO
* @param IN_CRPER_GENERO GENERO DE LA PERSONA
0 - MASCULINO
1 - FEMENINO
* @param IN_CRPER_OBSERVACIONES OBSERVACIONES O COMENTARIOS PARA CON LA PERSONA

* @param IN_CRPER_NUMERO_RESIDENCIA NUMERO UNICO DE IDENTIFICACION DE RESIDENCIA
* @param IN_CRPER_FOTO FOTOGRAFIA DE LA PERSONA
* @param IN_CRPER_FOTO_CURRICULUM FOTOGRAFIA DE LA PERSONA PARA PUBLICACION EN EL CURRICULUM
* @param IN_CRPER_HUELLA_DACTILAR INFORMACION EN BASE64 QUE REPRESENTA LAS HUELLAS CAPTURADAS. ESTA INFORMACION ES PROCESADA POR LA LIBRERIA. ESTA INFORMACION DEBE SER CONSIDERADA PARA VERIFICACIONES.
* @param IN_CRPER_HUELLA_IMAGEN IMAGEN EN FORMATO JPG DE LAS HUELLAS DACTILARES DE LA PERSONA. LAS IMAGENES ESTAN ORDENADAS CONFORME A UNA MATRIZ DE 5X2. SUPERIOR: MANO DERECHA, INFERIOR: MANO IZQUIERDA; DE IZQUIERDA A DERECHA DESDE PULGAR A MENIQUE; RESOLUCION: 248x292 PXL CADA IMAGEN.
* @param IN_CRPER_HUELLA_CADENA INFORMACION EN BASE64 QUE REPRESENTA LAS HUELLAS CAPTURADA. ESTA INFORMACION NO ES PROCESADA POR LA LIBRERIA, CON LA FINALIDAD DE OBTENER IMAGENES INDIVIDUALES DE LA HUELLAS. ESTA INFORMACION NO PUEDE SER CONSIDERADA PARA VERIFICACIONES.
* @param IN_CRPER_FIRMA FIRMA DIGITAL DE LA PERSONA
* @param IN_CRPER_AUTORIZADO ESTADO DEL REGISTRO QUE DEFINE SI UNA PERSONA TIENE AUTORIZADO SU INGRESO A LA PROVINCIA
* @param IN_CRPER_NUMERO_EXPEDIENTE NUMERO DE EXPEDIENTE UNICO
* @param IN_CRPER_FECHA_ARCHIVO FECHA DE ARCHIVO DE LA DOCUMENTACION DE LA PERSONA
* @param IN_CRPER_EMPLEADO ESTADO LABORAL DE LA PERSONA
* @param IN_CRPER_FECHA_ULTIMO_EMPLEO FECHA DE INICIO DEL ULTIMO EMPLEO
* @param IN_CRPER_ASPIRACION_SALARIAL SALARIO ESPERADO POR CUMPLIR CON UN DETERMINADO TRABAJO
* @param IN_CRPER_CUPO_VEHICULAR SI TIENE DISPONIBLE UN CUPO VEHICULAR
* @param IN_CRPER_TIPO_PERSONA CAMPO QUE IDENTIPFICA EL TIPO DE PERSONA
0 - CAPACIDADES ESPECIALES
1 - DISCAPACIDAD FISICA
2 - NORMAL
* @param IN_CRPER_ESTADO_INTERFECTO CAMPO QUE VERIFICA EL ESTADO INTERFECTO DE LA PERSONA

* @param IN_CRPER_FECHA_DEFUNCION FECHA DE DEFUNCION
* @param IN_CRPER_NUMERO_ACTA NUMERO DE ACTA DE DEFUNCION
* @param IN_CRPER_ADJUNTO_ACTA DIGITALIZACION DEL ACTA DE DEFUNCION
* @param IN_CRPER_NOMBRE_ADJUNTO_ACTA NOMBRE DEL ARCHIVO ADJUNTO DEL ACTA.
* @param IN_CRPER_TIPO ALMACENA INFORMACION QUE PERMITE DEFINIR EL ESTATUS DE LA PERSONA.
0 - IRREGULAR
1 - REGULAR
* @param IN_CRPER_ATENCION_CLIENTE SI LA INFORMACION FUE REGISTRADA DESDE ATENCION AL CLIENTE
* @param IN_CRPER_ESTADO ESTADO DEL REGISTRO
* @param IN_CRPER_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_UPDATE(
IN IN_CRPER_CODIGO SII.CGG_RES_PERSONA.CRPER_CODIGO%TYPE,
IN IN_CRECV_CODIGO SII.CGG_RES_PERSONA.CRECV_CODIGO%TYPE,
IN IN_CRDID_CODIGO SII.CGG_RES_PERSONA.CRDID_CODIGO%TYPE,
IN IN_CRTSG_CODIGO SII.CGG_RES_PERSONA.CRTSG_CODIGO%TYPE,
IN IN_CGNCN_CODIGO SII.CGG_RES_PERSONA.CGNCN_CODIGO%TYPE,
IN IN_CPRR_CODIGO SII.CGG_RES_PERSONA.CPRR_CODIGO%TYPE,
IN IN_CCTN_CODIGO SII.CGG_RES_PERSONA.CCTN_CODIGO%TYPE,
IN IN_CGG_CCTN_CODIGO SII.CGG_RES_PERSONA.CGG_CCTN_CODIGO%TYPE,
IN IN_CPAIS_CODIGO SII.CGG_RES_PERSONA.CPAIS_CODIGO%TYPE,
IN IN_CGG_CPAIS_CODIGO SII.CGG_RES_PERSONA.CGG_CPAIS_CODIGO%TYPE,
IN IN_CRPER_NOMBRES SII.CGG_RES_PERSONA.CRPER_NOMBRES%TYPE,
IN IN_CRPER_APELLIDO_PATERNO SII.CGG_RES_PERSONA.CRPER_APELLIDO_PATERNO%TYPE,
IN IN_CRPER_APELLIDO_MATERNO SII.CGG_RES_PERSONA.CRPER_APELLIDO_MATERNO%TYPE,
IN IN_CRPER_NUM_DOC_IDENTIFIC SII.CGG_RES_PERSONA.CRPER_NUM_DOC_IDENTIFIC%TYPE,
IN IN_CRPER_FECHA_NACIMIENTO SII.CGG_RES_PERSONA.CRPER_FECHA_NACIMIENTO%TYPE,
IN IN_CRPER_LUGAR_NACIMIENTO SII.CGG_RES_PERSONA.CRPER_LUGAR_NACIMIENTO%TYPE,
IN IN_CRPER_GENERO SII.CGG_RES_PERSONA.CRPER_GENERO%TYPE,
IN IN_CRPER_OBSERVACIONES SII.CGG_RES_PERSONA.CRPER_OBSERVACIONES%TYPE,
IN IN_CRPER_NUMERO_RESIDENCIA SII.CGG_RES_PERSONA.CRPER_NUMERO_RESIDENCIA%TYPE,
IN IN_CRPER_FOTO SII.CGG_RES_PERSONA.CRPER_FOTO%TYPE,
IN IN_CRPER_FOTO_CURRICULUM SII.CGG_RES_PERSONA.CRPER_FOTO_CURRICULUM%TYPE,
IN IN_CRPER_HUELLA_DACTILAR SII.CGG_RES_PERSONA.CRPER_HUELLA_DACTILAR%TYPE,
IN IN_CRPER_HUELLA_IMAGEN SII.CGG_RES_PERSONA.CRPER_HUELLA_IMAGEN%TYPE,
IN IN_CRPER_HUELLA_CADENA SII.CGG_RES_PERSONA.CRPER_HUELLA_CADENA%TYPE,
IN IN_CRPER_FIRMA SII.CGG_RES_PERSONA.CRPER_FIRMA%TYPE,
IN IN_CRPER_AUTORIZADO SII.CGG_RES_PERSONA.CRPER_AUTORIZADO%TYPE,
IN IN_CRPER_NUMERO_EXPEDIENTE SII.CGG_RES_PERSONA.CRPER_NUMERO_EXPEDIENTE%TYPE,
IN IN_CRPER_FECHA_ARCHIVO SII.CGG_RES_PERSONA.CRPER_FECHA_ARCHIVO%TYPE,
IN IN_CRPER_EMPLEADO SII.CGG_RES_PERSONA.CRPER_EMPLEADO%TYPE,
IN IN_CRPER_FECHA_ULTIMO_EMPLEO SII.CGG_RES_PERSONA.CRPER_FECHA_ULTIMO_EMPLEO%TYPE,
IN IN_CRPER_ASPIRACION_SALARIAL SII.CGG_RES_PERSONA.CRPER_ASPIRACION_SALARIAL%TYPE,
IN IN_CRPER_CUPO_VEHICULAR SII.CGG_RES_PERSONA.CRPER_CUPO_VEHICULAR%TYPE,
IN IN_CRPER_TIPO_PERSONA SII.CGG_RES_PERSONA.CRPER_TIPO_PERSONA%TYPE,
IN IN_CRPER_ESTADO_INTERFECTO SII.CGG_RES_PERSONA.CRPER_ESTADO_INTERFECTO%TYPE,
IN IN_CRPER_FECHA_DEFUNCION SII.CGG_RES_PERSONA.CRPER_FECHA_DEFUNCION%TYPE,
IN IN_CRPER_NUMERO_ACTA SII.CGG_RES_PERSONA.CRPER_NUMERO_ACTA%TYPE,
IN IN_CRPER_ADJUNTO_ACTA SII.CGG_RES_PERSONA.CRPER_ADJUNTO_ACTA%TYPE,
IN IN_CRPER_NOMBRE_ADJUNTO_ACTA SII.CGG_RES_PERSONA.CRPER_NOMBRE_ADJUNTO_ACTA%TYPE,
IN IN_CRPER_TIPO SII.CGG_RES_PERSONA.CRPER_TIPO%TYPE,
IN IN_CRPER_ATENCION_CLIENTE SII.CGG_RES_PERSONA.CRPER_ATENCION_CLIENTE%TYPE,
IN IN_CRPER_ESTADO SII.CGG_RES_PERSONA.CRPER_ESTADO%TYPE,
IN IN_CRPER_USUARIO_UPDATE SII.CGG_RES_PERSONA.CRPER_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET
		CRECV_CODIGO = IN_CRECV_CODIGO, 
		CRDID_CODIGO = IN_CRDID_CODIGO, 
		CRTSG_CODIGO = IN_CRTSG_CODIGO, 
		CGNCN_CODIGO = IN_CGNCN_CODIGO, 
		CPRR_CODIGO = IN_CPRR_CODIGO, 
		CCTN_CODIGO = IN_CCTN_CODIGO, 
		CGG_CCTN_CODIGO = IN_CGG_CCTN_CODIGO, 
		CPAIS_CODIGO = IN_CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO = IN_CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES = IN_CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO = IN_CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO = IN_CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC = IN_CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO = IN_CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO = IN_CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO = IN_CRPER_GENERO, 
		CRPER_OBSERVACIONES = IN_CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA = IN_CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO = IN_CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM = IN_CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR = IN_CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN = IN_CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA = IN_CRPER_HUELLA_CADENA, 
		CRPER_FIRMA = IN_CRPER_FIRMA, 
		CRPER_AUTORIZADO = IN_CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE = IN_CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO = IN_CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO = IN_CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO = IN_CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL = IN_CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR = IN_CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA = IN_CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO = IN_CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION = IN_CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA = IN_CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA = IN_CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA = IN_CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO = IN_CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE = IN_CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO = IN_CRPER_ESTADO, 
		CRPER_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRPER_USUARIO_UPDATE = IN_CRPER_USUARIO_UPDATE
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_PERSONA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_SELECT(
IN IN_CRPER_CODIGO SII.CGG_RES_PERSONA.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		COALESCE(CRPER_APELLIDO_MATERNO,''), 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		NULL AS CRPER_FOTO_CURRICULUM, 
		NULL AS CRPER_HUELLA_DACTILAR, 
		NULL AS CRPER_HUELLA_IMAGEN, 
		NULL AS CRPER_HUELLA_CADENA, 
		NULL AS CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		NULL AS CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_PERSONA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_DELETE(
IN IN_CRPER_CODIGO SII.CGG_RES_PERSONA.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PERSONA
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_PERSONA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_DELETE_SOFT(
IN IN_CRPER_CODIGO SII.CGG_RES_PERSONA.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET
		CRPER_ESTADO = FALSE
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_S_CGG_RES_TIPO_SANGUINEO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SANGUINEO.
* @param IN_CRTSG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO SANQUINEO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_S_CGG_RES_TIPO_SANGUINEO(
IN IN_CRTSG_CODIGO SII.CGG_RES_PERSONA.CRTSG_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA, 
		CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO = TRUE AND 
		CRTSG_CODIGO = IN_CRTSG_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_RES_TIPO_SANGUINEO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SANGUINEO.
* @param IN_CRTSG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO SANQUINEO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_D_CGG_RES_TIPO_SANGUINEO(
IN IN_CRTSG_CODIGO SII.CGG_RES_PERSONA.CRTSG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PERSONA
	WHERE
		CRTSG_CODIGO = IN_CRTSG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_RES_TIPO_SANGUINEO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SANGUINEO.
* @param IN_CRTSG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO SANQUINEO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_DS_CGG_RES_TIPO_SANGUINEO(
IN IN_CRTSG_CODIGO SII.CGG_RES_PERSONA.CRTSG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET
		crper_estado = false
	WHERE
		CRTSG_CODIGO = IN_CRTSG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_S_CGG_PARROQUIA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_PARROQUIA.
* @param IN_CPRR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PARROQUIA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_S_CGG_PARROQUIA(
IN IN_CPRR_CODIGO SII.CGG_RES_PERSONA.CPRR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA, 
		CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO = TRUE AND 
		CPRR_CODIGO = IN_CPRR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_PARROQUIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_PARROQUIA.
* @param IN_CPRR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PARROQUIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_D_CGG_PARROQUIA(
IN IN_CPRR_CODIGO SII.CGG_RES_PERSONA.CPRR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PERSONA
	WHERE
		CPRR_CODIGO = IN_CPRR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_PARROQUIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_PARROQUIA.
* @param IN_CPRR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PARROQUIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_DS_CGG_PARROQUIA(
IN IN_CPRR_CODIGO SII.CGG_RES_PERSONA.CPRR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET
		crper_estado = false
	WHERE
		CPRR_CODIGO = IN_CPRR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_S_CGG_NACIONALIDAD
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_NACIONALIDAD.
* @param IN_CGNCN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE NACIONALIDAD
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_S_CGG_NACIONALIDAD(
IN IN_CGNCN_CODIGO SII.CGG_RES_PERSONA.CGNCN_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA, 
		CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO = TRUE AND 
		CGNCN_CODIGO = IN_CGNCN_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_NACIONALIDAD
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_NACIONALIDAD.
* @param IN_CGNCN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE NACIONALIDAD
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_D_CGG_NACIONALIDAD(
IN IN_CGNCN_CODIGO SII.CGG_RES_PERSONA.CGNCN_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PERSONA
	WHERE
		CGNCN_CODIGO = IN_CGNCN_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_NACIONALIDAD
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_NACIONALIDAD.
* @param IN_CGNCN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE NACIONALIDAD
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_DS_CGG_NACIONALIDAD(
IN IN_CGNCN_CODIGO SII.CGG_RES_PERSONA.CGNCN_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET
		crper_estado = false
	WHERE
		CGNCN_CODIGO = IN_CGNCN_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_S_CGG_PAIS
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_PAIS.
* @param IN_CGG_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE RESIDENCIA
* @param IN_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE NACIMIENTO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_S_CGG_PAIS(
IN IN_CGG_CPAIS_CODIGO SII.CGG_RES_PERSONA.CGG_CPAIS_CODIGO%TYPE, 
IN IN_CPAIS_CODIGO SII.CGG_RES_PERSONA.CPAIS_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA, 
		CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO = TRUE AND 
		CGG_CPAIS_CODIGO = IN_CGG_CPAIS_CODIGO AND 
		CPAIS_CODIGO = IN_CPAIS_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_PAIS
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_PAIS.
* @param IN_CGG_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE RESIDENCIA
* @param IN_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE NACIMIENTO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_D_CGG_PAIS(
IN IN_CGG_CPAIS_CODIGO SII.CGG_RES_PERSONA.CGG_CPAIS_CODIGO%TYPE, 
IN IN_CPAIS_CODIGO SII.CGG_RES_PERSONA.CPAIS_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PERSONA
	WHERE
		CGG_CPAIS_CODIGO = IN_CGG_CPAIS_CODIGO AND 
		CPAIS_CODIGO = IN_CPAIS_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_PAIS
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_PAIS.
* @param IN_CGG_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE RESIDENCIA
* @param IN_CPAIS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PAIS DE NACIMIENTO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_DS_CGG_PAIS(
IN IN_CGG_CPAIS_CODIGO SII.CGG_RES_PERSONA.CGG_CPAIS_CODIGO%TYPE, 
IN IN_CPAIS_CODIGO SII.CGG_RES_PERSONA.CPAIS_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET
		crper_estado = false
	WHERE
		CGG_CPAIS_CODIGO = IN_CGG_CPAIS_CODIGO AND 
		CPAIS_CODIGO = IN_CPAIS_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_S_CGG_CANTON
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_CANTON.
* @param IN_CGG_CCTN_CODIGO CIUDAD DE ORIGEN EN EL ECUADOR CONTINENTAL DE UN RESIDENTE
* @param IN_CCTN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CANTON
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_S_CGG_CANTON(
IN IN_CGG_CCTN_CODIGO SII.CGG_RES_PERSONA.CGG_CCTN_CODIGO%TYPE, 
IN IN_CCTN_CODIGO SII.CGG_RES_PERSONA.CCTN_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA, 
		CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO = TRUE AND 
		CGG_CCTN_CODIGO = IN_CGG_CCTN_CODIGO AND 
		CCTN_CODIGO = IN_CCTN_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_CANTON
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_CANTON.
* @param IN_CGG_CCTN_CODIGO CIUDAD DE ORIGEN EN EL ECUADOR CONTINENTAL DE UN RESIDENTE
* @param IN_CCTN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CANTON
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_D_CGG_CANTON(
IN IN_CGG_CCTN_CODIGO SII.CGG_RES_PERSONA.CGG_CCTN_CODIGO%TYPE, 
IN IN_CCTN_CODIGO SII.CGG_RES_PERSONA.CCTN_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PERSONA
	WHERE
		CGG_CCTN_CODIGO = IN_CGG_CCTN_CODIGO AND 
		CCTN_CODIGO = IN_CCTN_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_CANTON
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_CANTON.
* @param IN_CGG_CCTN_CODIGO CIUDAD DE ORIGEN EN EL ECUADOR CONTINENTAL DE UN RESIDENTE
* @param IN_CCTN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CANTON
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_DS_CGG_CANTON(
IN IN_CGG_CCTN_CODIGO SII.CGG_RES_PERSONA.CGG_CCTN_CODIGO%TYPE, 
IN IN_CCTN_CODIGO SII.CGG_RES_PERSONA.CCTN_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET
		crper_estado = false
	WHERE
		CGG_CCTN_CODIGO = IN_CGG_CCTN_CODIGO AND 
		CCTN_CODIGO = IN_CCTN_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_S_CGG_RES_DOCUMENTO_IDENTIFICACIO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_DOCUMENTO_IDENTIFICACIO.
* @param IN_CRDID_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DOCUMENTO DE IDENTIFICACION
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_S_CGG_RES_DOCUMENTO_IDENTIFICACIO(
IN IN_CRDID_CODIGO SII.CGG_RES_PERSONA.CRDID_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA, 
		CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO = TRUE AND 
		CRDID_CODIGO = IN_CRDID_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_RES_DOCUMENTO_IDENTIFICACIO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_DOCUMENTO_IDENTIFICACIO.
* @param IN_CRDID_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DOCUMENTO DE IDENTIFICACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_D_CGG_RES_DOCUMENTO_IDENTIFICACIO(
IN IN_CRDID_CODIGO SII.CGG_RES_PERSONA.CRDID_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PERSONA
	WHERE
		CRDID_CODIGO = IN_CRDID_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_RES_DOCUMENTO_IDENTIFICACIO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_DOCUMENTO_IDENTIFICACIO.
* @param IN_CRDID_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DOCUMENTO DE IDENTIFICACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_DS_CGG_RES_DOCUMENTO_IDENTIFICACIO(
IN IN_CRDID_CODIGO SII.CGG_RES_PERSONA.CRDID_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET
		crper_estado = false
	WHERE
		CRDID_CODIGO = IN_CRDID_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_S_CGG_RES_ESTADO_CIVIL
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_ESTADO_CIVIL.
* @param IN_CRECV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL ESTADO CIVIL
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_S_CGG_RES_ESTADO_CIVIL(
IN IN_CRECV_CODIGO SII.CGG_RES_PERSONA.CRECV_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPER_CODIGO, 
		CRECV_CODIGO, 
		CRDID_CODIGO, 
		CRTSG_CODIGO, 
		CGNCN_CODIGO, 
		CPRR_CODIGO, 
		CCTN_CODIGO, 
		CGG_CCTN_CODIGO, 
		CPAIS_CODIGO, 
		CGG_CPAIS_CODIGO, 
		CRPER_NOMBRES, 
		CRPER_APELLIDO_PATERNO, 
		CRPER_APELLIDO_MATERNO, 
		CRPER_NUM_DOC_IDENTIFIC, 
		CRPER_FECHA_NACIMIENTO, 
		CRPER_LUGAR_NACIMIENTO, 
		CRPER_GENERO, 
		CRPER_OBSERVACIONES, 
		CRPER_NUMERO_RESIDENCIA, 
		CRPER_FOTO, 
		CRPER_FOTO_CURRICULUM, 
		CRPER_HUELLA_DACTILAR, 
		CRPER_HUELLA_IMAGEN, 
		CRPER_HUELLA_CADENA, 
		CRPER_FIRMA, 
		CRPER_AUTORIZADO, 
		CRPER_NUMERO_EXPEDIENTE, 
		CRPER_FECHA_ARCHIVO, 
		CRPER_EMPLEADO, 
		CRPER_FECHA_ULTIMO_EMPLEO, 
		CRPER_ASPIRACION_SALARIAL, 
		CRPER_CUPO_VEHICULAR, 
		CRPER_TIPO_PERSONA, 
		CRPER_ESTADO_INTERFECTO, 
		CRPER_FECHA_DEFUNCION, 
		CRPER_NUMERO_ACTA, 
		CRPER_ADJUNTO_ACTA, 
		CRPER_NOMBRE_ADJUNTO_ACTA, 
		CRPER_TIPO, 
		CRPER_ATENCION_CLIENTE, 
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
	FROM SII.CGG_RES_PERSONA
	WHERE CRPER_ESTADO = TRUE AND 
		CRECV_CODIGO = IN_CRECV_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_RES_ESTADO_CIVIL
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_ESTADO_CIVIL.
* @param IN_CRECV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL ESTADO CIVIL
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_D_CGG_RES_ESTADO_CIVIL(
IN IN_CRECV_CODIGO SII.CGG_RES_PERSONA.CRECV_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PERSONA
	WHERE
		CRECV_CODIGO = IN_CRECV_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_D_CGG_RES_ESTADO_CIVIL
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PERSONA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_ESTADO_CIVIL.
* @param IN_CRECV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL ESTADO CIVIL
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_DS_CGG_RES_ESTADO_CIVIL(
IN IN_CRECV_CODIGO SII.CGG_RES_PERSONA.CRECV_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET
		crper_estado = false
	WHERE
		CRECV_CODIGO = IN_CRECV_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
*FUNCION. GENERA UN NUMERO DE EXPEDIENTE EN BASE A LOS NUMERO DE EXPEDIENTES ACTUALMENTE EXISTENTES.
*@return VARCHAR CADENA CON EL NUMERO DE EXPEDIENTE SIGUIENTE.
*/
CREATE OR REPLACE FUNCTION SII.F_GENERA_EXPEDIENTE(
)RETURNS VARCHAR AS
$$
DECLARE
	TMP_NUMERO_EXPEDIENTE VARCHAR;
BEGIN
	TMP_NUMERO_EXPEDIENTE := '';	
	SELECT COALESCE(COUNT(CRPER_NUMERO_EXPEDIENTE),0)+1 INTO TMP_NUMERO_EXPEDIENTE AS CRPER_NUMERO_EXPEDIENTE FROM SII.CGG_RES_PERSONA;
	RETURN TMP_NUMERO_EXPEDIENTE;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
*FUNCION. ACTUALIZA EL NUMERO DE RESIDENCIA DE UNA PERSONA. EL NUMERO DE RESIDENCIA ES UNICO E INDICA LA RESIDENCIA DE UNA PERSONA.
*@param IN_CRPER_CODIGO CODIGO DE PERSONA.
*@param IN_CRPER_NUMERO_EXPEDIENTE NUMERO DE EXPEDIENTE UNICO.
*@param IN_CRPER_USUARIO_UPDATE USUARIO DE ACTUALIZACION.
*/
CREATE OR REPLACE FUNCTION SII.F_ACTUALIZAR_NUMERO_RESIDENCIA(
IN IN_CRPER_CODIGO SII.CGG_RES_PERSONA.CRPER_CODIGO%TYPE,
IN IN_CRPER_NUMERO_RESIDENCIA SII.CGG_RES_PERSONA.CRPER_NUMERO_RESIDENCIA%TYPE,
IN IN_CRPER_USUARIO_UPDATE SII.CGG_RES_PERSONA.CRPER_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PERSONA SET						
		CRPER_NUMERO_RESIDENCIA = IN_CRPER_NUMERO_RESIDENCIA, 		
		CRPER_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRPER_USUARIO_UPDATE = IN_CRPER_USUARIO_UPDATE
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
*FUNCION SII.F_CGG_RES_PERSONA_UPDATE_FOTO_CURRICULUM ACTUALIZA LA IMAGEN DEL CURRICULUM PERTENECIENTE A LA PERSONA
*@param IN_CRPER_CODIGO CODIGO DE PERSONA.
*@param IN_CRPER_FOTO_CURRICULUM CODIGO DE PERSONA.
* @param IN_CCTN_CODIGO IDENTIFICATIVO UNICO DE CANTON.
* @param IN_CPRR_CODIGO IDENTIFICATIVO UNICO DE PARROQUIA.
* @param IN_CGG_CPAIS_CODIGO IDENTIFICATIVO UNICO DE PAIS.
* @param IN_CRPER_EMPLEADO IDENTIFICA SI ES EMPLEADO O NO.
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_UPDATE_FOTO_CURRICULUM(
IN IN_CRPER_CODIGO VARCHAR,
IN IN_CRPER_FOTO_CURRICULUM BYTEA,
IN IN_CCTN_CODIGO VARCHAR,
IN IN_CPRR_CODIGO VARCHAR,
IN IN_CGG_CPAIS_CODIGO VARCHAR,
IN IN_CRPER_EMPLEADO BOOL
	)
  RETURNS void AS
$$
BEGIN

	if(LENGTH(IN_CRPER_FOTO_CURRICULUM) > 0) then
		UPDATE SII.CGG_RES_PERSONA SET
		CRPER_FOTO_CURRICULUM = IN_CRPER_FOTO_CURRICULUM
		WHERE CRPER_CODIGO = IN_CRPER_CODIGO;
	END IF;
	if (LENGTH(IN_CCTN_CODIGO)>0) THEN
		UPDATE SII.CGG_RES_PERSONA SET
		CCTN_CODIGO = IN_CCTN_CODIGO		
		WHERE CRPER_CODIGO = IN_CRPER_CODIGO;
	END IF;
	if (LENGTH(IN_CPRR_CODIGO)>0) THEN
		UPDATE SII.CGG_RES_PERSONA SET
		CPRR_CODIGO = IN_CPRR_CODIGO	
		WHERE CRPER_CODIGO = IN_CRPER_CODIGO;
	END IF;
	if (LENGTH(IN_CGG_CPAIS_CODIGO)>0) THEN
		UPDATE SII.CGG_RES_PERSONA SET		
		CGG_CPAIS_CODIGO = IN_CGG_CPAIS_CODIGO
		WHERE CRPER_CODIGO = IN_CRPER_CODIGO;
	END IF;
	
	UPDATE SII.CGG_RES_PERSONA SET		
	CRPER_EMPLEADO = IN_CRPER_EMPLEADO
	WHERE CRPER_CODIGO = IN_CRPER_CODIGO;
	
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
*FUNCION SII.F_CGG_RES_DATOS_PERSONALES_BYID VISUALIZA DATOS IMPORTANTES PARA LA PRESENTACION DE HOJA DE VIDA
*@param IN_CRPER_CODIGO CODIGO DE PERSONA.
*@return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DATOS_PERSONALES_BYID(
	IN_CRPER_CODIGO VARCHAR)
RETURNS SETOF refcursor AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT		
		PER.CRPER_NOMBRES,
		PER.CRPER_APELLIDO_PATERNO,
		PER.CRPER_APELLIDO_MATERNO,
		PER.CRPER_NUM_DOC_IDENTIFIC,
		PER.CRPER_FECHA_NACIMIENTO,
		PER.CRPER_GENERO,
		PER.CRPER_NUMERO_RESIDENCIA,
		PER.CGG_CPAIS_CODIGO,
		PER.CCTN_CODIGO,
		PER.CPRR_CODIGO,
		TSA.CRTSG_DESCRPCION,
		ECI.CRECV_DESCRPCION,		
		NAC.CGNCN_NACIONALIDAD,
		PAI.CPAIS_NOMBRE,
		PRO.CGPRV_CODIGO,
		PRO.CGPRV_NOMBRE,
		CAN.CCTN_NOMBRE,
		PER.CRPER_EMPLEADO,
		PER.CRPER_ASPIRACION_SALARIAL,
		PER.CRPER_NUMERO_RESIDENCIA,
		ILA.CGINF_HIJOS	
	FROM SII.CGG_RES_PERSONA PER LEFT JOIN SII.CGG_RES_ESTADO_CIVIL ECI ON(PER.CRECV_CODIGO=ECI.CRECV_CODIGO)
		LEFT JOIN SII.CGG_NACIONALIDAD NAC ON(NAC.CGNCN_CODIGO=PER.CGNCN_CODIGO)
		LEFT JOIN SII.CGG_PARROQUIA PAR ON(PAR.CPRR_CODIGO=PER.CPRR_CODIGO)
		LEFT JOIN SII.CGG_CANTON CAN ON (CAN.CCTN_CODIGO=PER.CCTN_CODIGO)
		LEFT JOIN SII.CGG_PROVINCIA PRO ON(PRO.CGPRV_CODIGO=CAN.CGPRV_CODIGO)
		LEFT JOIN SII.CGG_PAIS PAI ON(PAI.CPAIS_CODIGO=PER.CGG_CPAIS_CODIGO)
		LEFT JOIN SII.CGG_RES_TIPO_SANGUINEO TSA ON(TSA.CRTSG_CODIGO=PER.CRTSG_CODIGO)
		LEFT  JOIN SII.CGG_GEM_INFORMACION_LABORAL ILA ON(ILA.CRPER_CODIGO=PER.CRPER_CODIGO)
	WHERE PER.CRPER_ESTADO = TRUE AND 
		PER.CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_EMAILS
* OBTIENE TODOS LOS CONTACTOS DE CORREO ELECTRONICO DE UNA PERSONA.
* @param IN_CRPER_CODIGO CODIGO DE LA PERSONA
* @param IN_SW VERIFICADOR.
* @return CURSOR CON LOS CORREOS ELECTRONICOS DE LA PERSONA
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_EMAILS(
IN IN_CRPER_CODIGO VARCHAR,
IN IN_SW INT
)RETURNS VARCHAR[] AS
$$
DECLARE
OUT_CONTACTOS VARCHAR[];
TMP_RECORD RECORD;
C INT;
BEGIN
	C = 1;
	FOR TMP_RECORD IN (SELECT CNT.CRPRC_CONTACTO FROM SII.CGG_RES_PERSONA PRS
		INNER JOIN SII.CGG_RES_PERSONA_CONTACTO CNT ON CNT.CRPER_CODIGO = PRS.CRPER_CODIGO AND CNT.CRTCO_CODIGO = (SELECT CGCNF_VALOR_CADENA FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = 'CONF43')
		WHERE PRS.CRPER_CODIGO = IN_CRPER_CODIGO) 
	LOOP
		OUT_CONTACTOS[C] = TMP_RECORD.CRPRC_CONTACTO;
		C = C + 1;
	END LOOP;
	
	FOR TMP_RECORD IN (
		SELECT UCN.CSUCT_CONTACTO FROM SII.CGG_RES_PERSONA PRS
		INNER JOIN SII.CGG_USUARIO US ON US.CRPER_CODIGO = PRS.CRPER_CODIGO 
		INNER JOIN SII.CGG_SEC_USUARIO_CONTACTO UCN ON UCN.CUSU_CODIGO = US.CUSU_CODIGO AND UCN.CRTCO_CODIGO = (SELECT CGCNF_VALOR_CADENA FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = 'CONF43')
		WHERE PRS.CRPER_CODIGO = IN_CRPER_CODIGO) 
	LOOP
		OUT_CONTACTOS[C] = TMP_RECORD.CSUCT_CONTACTO;
		C = C + 1;
	END LOOP;
	
	RETURN OUT_CONTACTOS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;