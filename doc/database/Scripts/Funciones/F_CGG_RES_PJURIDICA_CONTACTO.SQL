/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO
* @param IN_CRPJC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO AL CONTACTO DE LA PERSONA JURIDICA
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @param IN_CRTCO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE CONTACTO
* @param IN_CRPJC_DESCRIPCION VALOR ASIGNADO AL CONTACTO
* @param IN_CRPJC_CONTACTO NUMERO DE CONTACTO, DIRECCION DE CORREO ELECTRONICO
* @param IN_CRPJC_PRINCIPAL CAMPO QUE INDICA SI EL CONTACTO ES PRINCIPAL O NO DE UN REGISTRO
* @param IN_CRPJC_ESTADO ESTADO DEL REGISTRO
* @param IN_CRPJC_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRPJC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_INSERT(
IN IN_CRPJC_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJR_CODIGO%TYPE, 
IN IN_CRTCO_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRTCO_CODIGO%TYPE, 
IN IN_CRPJC_DESCRIPCION SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_DESCRIPCION%TYPE, 
IN IN_CRPJC_CONTACTO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_CONTACTO%TYPE, 
IN IN_CRPJC_PRINCIPAL SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_PRINCIPAL%TYPE, 
IN IN_CRPJC_ESTADO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_ESTADO%TYPE, 
IN IN_CRPJC_USUARIO_INSERT SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_USUARIO_INSERT%TYPE, 
IN IN_CRPJC_USUARIO_UPDATE SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CRPJC_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_PJURIDICA_CONTACTO','CRPJC_CODIGO','CRPJC') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRPJC_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_PJURIDICA_CONTACTO(
		CRPJC_CODIGO, 
		CRPJR_CODIGO, 
		CRTCO_CODIGO, 
		CRPJC_DESCRIPCION, 
		CRPJC_CONTACTO, 
		CRPJC_PRINCIPAL, 
		CRPJC_ESTADO, 
		CRPJC_FECHA_INSERT, 
		CRPJC_USUARIO_INSERT, 
		CRPJC_FECHA_UPDATE, 
		CRPJC_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRPJR_CODIGO, 
		IN_CRTCO_CODIGO, 
		IN_CRPJC_DESCRIPCION, 
		IN_CRPJC_CONTACTO, 
		IN_CRPJC_PRINCIPAL, 
		IN_CRPJC_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRPJC_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRPJC_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPJC_CODIGO, 
		CRPJR_CODIGO, 
		CRTCO_CODIGO, 
		CRPJC_DESCRIPCION, 
		CRPJC_CONTACTO, 
		CRPJC_PRINCIPAL, 
		CRPJC_ESTADO, 
		CRPJC_FECHA_INSERT, 
		CRPJC_USUARIO_INSERT, 
		CRPJC_FECHA_UPDATE, 
		CRPJC_USUARIO_UPDATE
	FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE CRPJC_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRPJC_CODIGO, 
		CRPJR_CODIGO, 
		CRTCO_CODIGO, 
		CRPJC_DESCRIPCION, 
		CRPJC_CONTACTO, 
		CRPJC_PRINCIPAL, 
		CRPJC_ESTADO, 
		CRPJC_FECHA_INSERT, 
		CRPJC_USUARIO_INSERT, 
		CRPJC_FECHA_UPDATE, 
		CRPJC_USUARIO_UPDATE
	FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE CRPJC_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CRPJC_DESCRIPCION, '''')||'' ''||COALESCE(CRPJC_CONTACTO, '''')||'' ''||COALESCE(CRPJC_PRINCIPAL, FALSE)||'' ''||COALESCE(CRPJC_ESTADO, FALSE)||'' ''||COALESCE(CRPJC_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRPJC_USUARIO_INSERT, '''')||'' ''||COALESCE(CRPJC_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRPJC_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE CRPJC_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE CRPJC_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRPJC_DESCRIPCION, '''')||' '||COALESCE(CRPJC_CONTACTO, '''')||' '||COALESCE(CRPJC_PRINCIPAL, FALSE)||' '||COALESCE(CRPJC_ESTADO, FALSE)||' '||COALESCE(CRPJC_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRPJC_USUARIO_INSERT, '''')||' '||COALESCE(CRPJC_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRPJC_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_PJURIDICA_CONTACTO
* @param IN_CRPJC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO AL CONTACTO DE LA PERSONA JURIDICA
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @param IN_CRTCO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE CONTACTO
* @param IN_CRPJC_DESCRIPCION VALOR ASIGNADO AL CONTACTO
* @param IN_CRPJC_CONTACTO NUMERO DE CONTACTO, DIRECCION DE CORREO ELECTRONICO
* @param IN_CRPJC_PRINCIPAL CAMPO QUE INDICA SI EL CONTACTO ES PRINCIPAL O NO DE UN REGISTRO
* @param IN_CRPJC_ESTADO ESTADO DEL REGISTRO
* @param IN_CRPJC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_UPDATE(
IN IN_CRPJC_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJR_CODIGO%TYPE, 
IN IN_CRTCO_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRTCO_CODIGO%TYPE, 
IN IN_CRPJC_DESCRIPCION SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_DESCRIPCION%TYPE, 
IN IN_CRPJC_CONTACTO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_CONTACTO%TYPE, 
IN IN_CRPJC_PRINCIPAL SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_PRINCIPAL%TYPE, 
IN IN_CRPJC_ESTADO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_ESTADO%TYPE, 
IN IN_CRPJC_USUARIO_UPDATE SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PJURIDICA_CONTACTO SET
		CRPJR_CODIGO = IN_CRPJR_CODIGO, 
		CRTCO_CODIGO = IN_CRTCO_CODIGO, 
		CRPJC_DESCRIPCION = IN_CRPJC_DESCRIPCION, 
		CRPJC_CONTACTO = IN_CRPJC_CONTACTO, 
		CRPJC_PRINCIPAL = IN_CRPJC_PRINCIPAL, 
		CRPJC_ESTADO = IN_CRPJC_ESTADO, 
		CRPJC_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRPJC_USUARIO_UPDATE = IN_CRPJC_USUARIO_UPDATE
	WHERE
		CRPJC_CODIGO = IN_CRPJC_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO
* @param IN_CRPJC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO AL CONTACTO DE LA PERSONA JURIDICA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_SELECT(
IN IN_CRPJC_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPJC_CODIGO, 
		CRPJR_CODIGO, 
		CRTCO_CODIGO, 
		CRPJC_DESCRIPCION, 
		CRPJC_CONTACTO, 
		CRPJC_PRINCIPAL, 
		CRPJC_ESTADO, 
		CRPJC_FECHA_INSERT, 
		CRPJC_USUARIO_INSERT, 
		CRPJC_FECHA_UPDATE, 
		CRPJC_USUARIO_UPDATE
	FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE CRPJC_ESTADO = TRUE AND 
		CRPJC_CODIGO = IN_CRPJC_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO
* @param IN_CRPJC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO AL CONTACTO DE LA PERSONA JURIDICA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_DELETE(
IN IN_CRPJC_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE
		CRPJC_CODIGO = IN_CRPJC_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO
* @param IN_CRPJC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO AL CONTACTO DE LA PERSONA JURIDICA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_DELETE_SOFT(
IN IN_CRPJC_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PJURIDICA_CONTACTO SET
		CRPJC_ESTADO = FALSE
	WHERE
		CRPJC_CODIGO = IN_CRPJC_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_S_CGG_RES_TIPO_CONTACTO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_CONTACTO.
* @param IN_CRTCO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE CONTACTO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_S_CGG_RES_TIPO_CONTACTO(
IN IN_CRTCO_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRTCO_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPJC_CODIGO, 
		CRPJR_CODIGO, 
		CRTCO_CODIGO, 
		CRPJC_DESCRIPCION, 
		CRPJC_CONTACTO, 
		CRPJC_PRINCIPAL, 
		CRPJC_ESTADO, 
		CRPJC_FECHA_INSERT, 
		CRPJC_USUARIO_INSERT, 
		CRPJC_FECHA_UPDATE, 
		CRPJC_USUARIO_UPDATE
	FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE CRPJC_ESTADO = TRUE AND 
		CRTCO_CODIGO = IN_CRTCO_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_D_CGG_RES_TIPO_CONTACTO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_CONTACTO.
* @param IN_CRTCO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE CONTACTO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_D_CGG_RES_TIPO_CONTACTO(
IN IN_CRTCO_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRTCO_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE
		CRTCO_CODIGO = IN_CRTCO_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_D_CGG_RES_TIPO_CONTACTO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_CONTACTO.
* @param IN_CRTCO_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE CONTACTO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_DS_CGG_RES_TIPO_CONTACTO(
IN IN_CRTCO_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRTCO_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PJURIDICA_CONTACTO SET
		crpjc_estado = false
	WHERE
		CRTCO_CODIGO = IN_CRTCO_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_S_CGG_RES_PERSONA_JURIDICA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_S_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRPJC_CODIGO, 
		CRPJR_CODIGO, 
		CRTCO_CODIGO, 
		CRPJC_DESCRIPCION, 
		CRPJC_CONTACTO, 
		CRPJC_PRINCIPAL, 
		CRPJC_ESTADO, 
		CRPJC_FECHA_INSERT, 
		CRPJC_USUARIO_INSERT, 
		CRPJC_FECHA_UPDATE, 
		CRPJC_USUARIO_UPDATE
	FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE CRPJC_ESTADO = TRUE AND 
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_D_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_PJURIDICA_CONTACTO
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PJURIDICA_CONTACTO_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_PJURIDICA_CONTACTO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PJURIDICA_CONTACTO_DS_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_PJURIDICA_CONTACTO.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_PJURIDICA_CONTACTO SET
		crpjc_estado = false
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

