/**
* FUNCION SII.F_CGG_SUSTITUCION_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_SUSTITUCION
* @param IN_CSUST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE ENCARGA LA RESPONSABILIDAD
* @param IN_CGG_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE RECIBE EL ENCARGO
* @param IN_CSUST_MODALIDAD TIPO DE SUSTITUCION
0 - TEMPORAL DENTRO DEL PERIODO INDICADO
1 - INDEFINIDA A PARTIR DE LA FECHA DE INICIO
* @param IN_CSUST_FECHA_INICIO INICIO DEL PERIODO DE SUSTITUCION
* @param IN_CSUST_FECHA_FIN FIN DEL PERIODO DE SUSTITUCION
* @param IN_CSUST_ESTADO_ENCARGO ALMACENA INFORMACION SOBRE LA VIGENCIA DEL ENCARGO
0 - INACTIVO
1 - ACTIVO
* @param IN_CSUST_ESTADO ESTADO DEL REGISTRO
* @param IN_CSUST_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CSUST_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_INSERT(
IN IN_CSUST_CODIGO SII.CGG_SUSTITUCION.CSUST_CODIGO%TYPE, 
IN IN_CUSU_CODIGO SII.CGG_SUSTITUCION.CUSU_CODIGO%TYPE, 
IN IN_CGG_CUSU_CODIGO SII.CGG_SUSTITUCION.CGG_CUSU_CODIGO%TYPE, 
IN IN_CSUST_MODALIDAD SII.CGG_SUSTITUCION.CSUST_MODALIDAD%TYPE, 
IN IN_CSUST_FECHA_INICIO SII.CGG_SUSTITUCION.CSUST_FECHA_INICIO%TYPE, 
IN IN_CSUST_FECHA_FIN SII.CGG_SUSTITUCION.CSUST_FECHA_FIN%TYPE, 
IN IN_CSUST_ESTADO_ENCARGO SII.CGG_SUSTITUCION.CSUST_ESTADO_ENCARGO%TYPE, 
IN IN_CSUST_ESTADO SII.CGG_SUSTITUCION.CSUST_ESTADO%TYPE, 
IN IN_CSUST_USUARIO_INSERT SII.CGG_SUSTITUCION.CSUST_USUARIO_INSERT%TYPE, 
IN IN_CSUST_USUARIO_UPDATE SII.CGG_SUSTITUCION.CSUST_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CSUST_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_SUSTITUCION','CSUST_CODIGO','CSUST') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CSUST_CODIGO;
	END IF;
	INSERT INTO SII.CGG_SUSTITUCION(
		CSUST_CODIGO, 
		CUSU_CODIGO, 
		CGG_CUSU_CODIGO, 
		CSUST_MODALIDAD, 
		CSUST_FECHA_INICIO, 
		CSUST_FECHA_FIN, 
		CSUST_ESTADO_ENCARGO, 
		CSUST_ESTADO, 
		CSUST_FECHA_INSERT, 
		CSUST_USUARIO_INSERT, 
		CSUST_FECHA_UPDATE, 
		CSUST_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CUSU_CODIGO, 
		IN_CGG_CUSU_CODIGO, 
		IN_CSUST_MODALIDAD, 
		IN_CSUST_FECHA_INICIO, 
		IN_CSUST_FECHA_FIN, 
		IN_CSUST_ESTADO_ENCARGO, 
		IN_CSUST_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CSUST_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CSUST_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_SUSTITUCION
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CSUST_CODIGO, 
		CUSU_CODIGO, 
		CGG_CUSU_CODIGO, 
		CSUST_MODALIDAD, 
		CSUST_FECHA_INICIO, 
		CSUST_FECHA_FIN, 
		CSUST_ESTADO_ENCARGO, 
		CSUST_ESTADO, 
		CSUST_FECHA_INSERT, 
		CSUST_USUARIO_INSERT, 
		CSUST_FECHA_UPDATE, 
		CSUST_USUARIO_UPDATE
	FROM SII.CGG_SUSTITUCION
	WHERE CSUST_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_SUSTITUCION
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN

	OPEN TMP_REF FOR EXECUTE
	'WITH C1 AS (
		SELECT
			SU.CSUST_CODIGO, 
			SU.CUSU_CODIGO, 		
			(SELECT COALESCE(P.CRPER_NOMBRES,'''')||'' ''||COALESCE(P.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(P.CRPER_APELLIDO_MATERNO,'''') FROM SII.CGG_RES_PERSONA P WHERE P.CRPER_CODIGO = USU.CRPER_CODIGO) SUSTITUIDO,
			SU.CGG_CUSU_CODIGO, 
			(SELECT COALESCE(P.CRPER_NOMBRES,'''')||'' ''||COALESCE(P.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(P.CRPER_APELLIDO_MATERNO,'''') FROM SII.CGG_RES_PERSONA P WHERE P.CRPER_CODIGO = (SELECT U.CRPER_CODIGO FROM CGG_USUARIO U WHERE U.CUSU_CODIGO = SU.CGG_CUSU_CODIGO)) SUSTITUTO,		
			SU.CSUST_ESTADO_ENCARGO,
			SU.CSUST_MODALIDAD, 
			SU.CSUST_FECHA_INICIO, 
			SU.CSUST_FECHA_FIN, 
			SU.CSUST_ESTADO_ENCARGO, 
			SU.CSUST_ESTADO, 
			SU.CSUST_FECHA_INSERT, 
			SU.CSUST_USUARIO_INSERT, 
			SU.CSUST_FECHA_UPDATE, 
			SU.CSUST_USUARIO_UPDATE
		FROM SII.CGG_SUSTITUCION SU	
		INNER JOIN SII.CGG_USUARIO USU ON (SU.CUSU_CODIGO = USU.CUSU_CODIGO)
		WHERE CSUST_ESTADO = TRUE 
	)
	SELECT
		*
	FROM C1
	WHERE SII.F_STRING_IN('''||IN_FIND_TEXT||''',SUSTITUTO||'' ''||SUSTITUIDO) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_SUSTITUCION
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(CSUST.CSUST_CODIGO) INTO TMP_ROWS
	FROM SII.CGG_SUSTITUCION
	WHERE CSUST_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_SUSTITUCION
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN	
	WITH C1 AS (
		SELECT 
			CSUST_CODIGO,
			(SELECT COALESCE(P.CRPER_NOMBRES,'')||' '||COALESCE(P.CRPER_APELLIDO_PATERNO,'')||''||COALESCE(P.CRPER_APELLIDO_MATERNO,'') FROM SII.CGG_RES_PERSONA P WHERE P.CRPER_CODIGO = USU.CRPER_CODIGO) SUSTITUIDO,		
			(SELECT COALESCE(P.CRPER_NOMBRES,'')||' '||COALESCE(P.CRPER_APELLIDO_PATERNO,'')||''||COALESCE(P.CRPER_APELLIDO_MATERNO,'') FROM SII.CGG_RES_PERSONA P WHERE P.CRPER_CODIGO = (SELECT U.CRPER_CODIGO FROM CGG_USUARIO U WHERE U.CUSU_CODIGO = SU.CGG_CUSU_CODIGO)) SUSTITUTO		
		FROM SII.CGG_SUSTITUCION CSUST
		INNER JOIN SII.CGG_USUARIO USU ON (SU.CUSU_CODIGO = USU.CUSU_CODIGO)
		WHERE CSUST_ESTADO = TRUE
	)	
	SELECT
		COUNT(C1.CSUST_CODIGO) INTO TMP_ROWS	
	FROM C1
	WHERE SII.F_STRING_IN(IN_FIND_TEXT,SUSTITUTO||' '||SUSTITUIDO) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_SUSTITUCION
* @param IN_CSUST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE ENCARGA LA RESPONSABILIDAD
* @param IN_CGG_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE RECIBE EL ENCARGO
* @param IN_CSUST_MODALIDAD TIPO DE SUSTITUCION
0 - TEMPORAL DENTRO DEL PERIODO INDICADO
1 - INDEFINIDA A PARTIR DE LA FECHA DE INICIO
* @param IN_CSUST_FECHA_INICIO INICIO DEL PERIODO DE SUSTITUCION
* @param IN_CSUST_FECHA_FIN FIN DEL PERIODO DE SUSTITUCION
* @param IN_CSUST_ESTADO_ENCARGO ALMACENA INFORMACION SOBRE LA VIGENCIA DEL ENCARGO
0 - INACTIVO
1 - ACTIVO
* @param IN_CSUST_ESTADO ESTADO DEL REGISTRO
* @param IN_CSUST_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_UPDATE(
IN IN_CSUST_CODIGO SII.CGG_SUSTITUCION.CSUST_CODIGO%TYPE, 
IN IN_CUSU_CODIGO SII.CGG_SUSTITUCION.CUSU_CODIGO%TYPE, 
IN IN_CGG_CUSU_CODIGO SII.CGG_SUSTITUCION.CGG_CUSU_CODIGO%TYPE, 
IN IN_CSUST_MODALIDAD SII.CGG_SUSTITUCION.CSUST_MODALIDAD%TYPE, 
IN IN_CSUST_FECHA_INICIO SII.CGG_SUSTITUCION.CSUST_FECHA_INICIO%TYPE, 
IN IN_CSUST_FECHA_FIN SII.CGG_SUSTITUCION.CSUST_FECHA_FIN%TYPE, 
IN IN_CSUST_ESTADO_ENCARGO SII.CGG_SUSTITUCION.CSUST_ESTADO_ENCARGO%TYPE, 
IN IN_CSUST_ESTADO SII.CGG_SUSTITUCION.CSUST_ESTADO%TYPE, 
IN IN_CSUST_USUARIO_UPDATE SII.CGG_SUSTITUCION.CSUST_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_SUSTITUCION SET
		CUSU_CODIGO = IN_CUSU_CODIGO, 
		CGG_CUSU_CODIGO = IN_CGG_CUSU_CODIGO, 
		CSUST_MODALIDAD = IN_CSUST_MODALIDAD, 
		CSUST_FECHA_INICIO = IN_CSUST_FECHA_INICIO, 
		CSUST_FECHA_FIN = IN_CSUST_FECHA_FIN, 
		CSUST_ESTADO_ENCARGO = IN_CSUST_ESTADO_ENCARGO, 
		CSUST_ESTADO = IN_CSUST_ESTADO, 
		CSUST_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CSUST_USUARIO_UPDATE = IN_CSUST_USUARIO_UPDATE
	WHERE
		CSUST_CODIGO = IN_CSUST_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_SUSTITUCION
* @param IN_CSUST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_SELECT(
IN IN_CSUST_CODIGO SII.CGG_SUSTITUCION.CSUST_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CSUST_CODIGO, 
		CUSU_CODIGO, 
		CGG_CUSU_CODIGO, 
		CSUST_MODALIDAD, 
		CSUST_FECHA_INICIO, 
		CSUST_FECHA_FIN, 
		CSUST_ESTADO_ENCARGO, 
		CSUST_ESTADO, 
		CSUST_FECHA_INSERT, 
		CSUST_USUARIO_INSERT, 
		CSUST_FECHA_UPDATE, 
		CSUST_USUARIO_UPDATE
	FROM SII.CGG_SUSTITUCION
	WHERE CSUST_ESTADO = TRUE AND 
		CSUST_CODIGO = IN_CSUST_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_SUSTITUCION
* @param IN_CSUST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_DELETE(
IN IN_CSUST_CODIGO SII.CGG_SUSTITUCION.CSUST_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_SUSTITUCION
	WHERE
		CSUST_CODIGO = IN_CSUST_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_SUSTITUCION
* @param IN_CSUST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_DELETE_SOFT(
IN IN_CSUST_CODIGO SII.CGG_SUSTITUCION.CSUST_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_SUSTITUCION SET
		CSUST_ESTADO = FALSE
	WHERE
		CSUST_CODIGO = IN_CSUST_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_S_CGG_USUARIO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_SUSTITUCION QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_USUARIO.
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE ENCARGA LA RESPONSABILIDAD
* @param IN_CGG_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE RECIBE EL ENCARGO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_S_CGG_USUARIO(
IN IN_CUSU_CODIGO SII.CGG_SUSTITUCION.CUSU_CODIGO%TYPE, 
IN IN_CGG_CUSU_CODIGO SII.CGG_SUSTITUCION.CGG_CUSU_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CSUST_CODIGO, 
		CUSU_CODIGO, 
		CGG_CUSU_CODIGO, 
		CSUST_MODALIDAD, 
		CSUST_FECHA_INICIO, 
		CSUST_FECHA_FIN, 
		CSUST_ESTADO_ENCARGO, 
		CSUST_ESTADO, 
		CSUST_FECHA_INSERT, 
		CSUST_USUARIO_INSERT, 
		CSUST_FECHA_UPDATE, 
		CSUST_USUARIO_UPDATE
	FROM SII.CGG_SUSTITUCION
	WHERE CSUST_ESTADO = TRUE AND 
		CUSU_CODIGO = IN_CUSU_CODIGO AND 
		CGG_CUSU_CODIGO = IN_CGG_CUSU_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_D_CGG_USUARIO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_SUSTITUCION QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_USUARIO.
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE ENCARGA LA RESPONSABILIDAD
* @param IN_CGG_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE RECIBE EL ENCARGO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_D_CGG_USUARIO(
IN IN_CUSU_CODIGO SII.CGG_SUSTITUCION.CUSU_CODIGO%TYPE, 
IN IN_CGG_CUSU_CODIGO SII.CGG_SUSTITUCION.CGG_CUSU_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_SUSTITUCION
	WHERE
		CUSU_CODIGO = IN_CUSU_CODIGO AND 
		CGG_CUSU_CODIGO = IN_CGG_CUSU_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SUSTITUCION_D_CGG_USUARIO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_SUSTITUCION QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_USUARIO.
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE ENCARGA LA RESPONSABILIDAD
* @param IN_CGG_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO QUE RECIBE EL ENCARGO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SUSTITUCION_DS_CGG_USUARIO(
IN IN_CUSU_CODIGO SII.CGG_SUSTITUCION.CUSU_CODIGO%TYPE, 
IN IN_CGG_CUSU_CODIGO SII.CGG_SUSTITUCION.CGG_CUSU_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_SUSTITUCION SET
		csust_estado = false
	WHERE
		CUSU_CODIGO = IN_CUSU_CODIGO AND 
		CGG_CUSU_CODIGO = IN_CGG_CUSU_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

