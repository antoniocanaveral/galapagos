/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CRONOGRAMA ENCUESTA
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CDCRE_DESCRIPCION DESCRIPCION DEL CRONOGRAMA DE ENCUESTA
* @param IN_CDCRE_FECHA_EJECUCION FECHA DE EJECUCION DEL CRONOGRAMA
* @param IN_CDCRE_FECHA_MAXIMA_REALIZACION FECHA MAXIMA HASTA CUANDO SE PUEDE EJECUTAR UNA ENCUESTA
* @param IN_CDCRE_ESTADO ESTADO DEL REGISTRO
* @param IN_CDCRE_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CDCRE_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_INSERT(
IN IN_CDCRE_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_CODIGO%TYPE,
IN IN_CDENC_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDENC_CODIGO%TYPE,
IN IN_CDCUR_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCUR_CODIGO%TYPE,
IN IN_CISLA_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CISLA_CODIGO%TYPE,
IN IN_CDCRE_DESCRIPCION SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_DESCRIPCION%TYPE,
IN IN_CDCRE_FECHA_EJECUCION SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_FECHA_EJECUCION%TYPE,
IN IN_CDCRE_FECHA_MAXIMA_REALIZACION SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_FECHA_MAXIMA_REALIZACION%TYPE,
IN IN_CDCRE_ESTADO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_ESTADO%TYPE,
IN IN_CDCRE_USUARIO_INSERT SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CDCRE_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_DHU_CRONOGRAMA_ENCUESTA','CDCRE_CODIGO','CDCRE') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CDCRE_CODIGO;
	END IF;
	INSERT INTO SII.CGG_DHU_CRONOGRAMA_ENCUESTA(
		CDCRE_CODIGO, 
		CDENC_CODIGO, 
		CDCUR_CODIGO, 
		CISLA_CODIGO, 
		CDCRE_DESCRIPCION, 
		CDCRE_FECHA_EJECUCION, 
		CDCRE_FECHA_MAXIMA_REALIZACION, 
		CDCRE_ESTADO, 
		CDCRE_FECHA_INSERT, 
		CDCRE_USUARIO_INSERT, 
		CDCRE_FECHA_UPDATE, 
		CDCRE_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CDENC_CODIGO, 
		IN_CDCUR_CODIGO, 
		IN_CISLA_CODIGO, 
		IN_CDCRE_DESCRIPCION, 
		IN_CDCRE_FECHA_EJECUCION, 
		IN_CDCRE_FECHA_MAXIMA_REALIZACION, 
		IN_CDCRE_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CDCRE_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CDCRE_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCRE_CODIGO, 
		CDENC_CODIGO, 
		CDCUR_CODIGO, 
		CISLA_CODIGO, 
		CDCRE_DESCRIPCION, 
		CDCRE_FECHA_EJECUCION, 
		CDCRE_FECHA_MAXIMA_REALIZACION, 
		CDCRE_ESTADO, 
		CDCRE_FECHA_INSERT, 
		CDCRE_USUARIO_INSERT, 
		CDCRE_FECHA_UPDATE, 
		CDCRE_USUARIO_UPDATE
	FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA
	WHERE CDCRE_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA__SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_SELECT(
IN IN_USER_NAME VARCHAR(50),
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CR.CDCRE_CODIGO, 
		CR.CDENC_CODIGO, 
		EN.CDENC_NOMBRE,
		CR.CDCUR_CODIGO,
		CS.CDCUR_DESCRIPCION,		
		CR.CISLA_CODIGO, 
		IL.CISLA_NOMBRE,
		CR.CDCRE_DESCRIPCION, 
		CR.CDCRE_FECHA_EJECUCION, 
		CR.CDCRE_FECHA_MAXIMA_REALIZACION, 
		CR.CDCRE_ESTADO, 
		CR.CDCRE_FECHA_INSERT, 
		CR.CDCRE_USUARIO_INSERT, 
		CR.CDCRE_FECHA_UPDATE, 
		CR.CDCRE_USUARIO_UPDATE
	FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA CR
	INNER JOIN CGG_DHU_ENCUESTA EN ON (EN.CDENC_CODIGO = CR.CDENC_CODIGO)
	INNER JOIN CGG_DHU_CURSO CS ON (CS.CDCUR_CODIGO = CR.CDCUR_CODIGO)
	INNER JOIN CGG_ISLA IL ON (IL.CISLA_CODIGO = CR.CISLA_CODIGO)
	WHERE CDCRE_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	CASE WHEN CR.CDCRE_CODIGO IS NULL THEN '''' ELSE CR.CDCRE_CODIGO END ||'' ''||
	CASE WHEN CR.CDENC_CODIGO IS NULL THEN '''' ELSE CR.CDENC_CODIGO END ||'' ''||
	CASE WHEN EN.CDENC_NOMBRE IS NULL THEN '''' ELSE EN.CDENC_NOMBRE END ||'' ''||
	CASE WHEN CR.CDCUR_CODIGO IS NULL THEN '''' ELSE CR.CDCUR_CODIGO END ||'' ''||
	CASE WHEN CS.CDCUR_DESCRIPCION IS NULL THEN '''' ELSE CS.CDCUR_DESCRIPCION END ||'' ''||
	CASE WHEN CR.CISLA_CODIGO IS NULL THEN '''' ELSE CR.CISLA_CODIGO END ||'' ''||
	CASE WHEN IL.CISLA_NOMBRE IS NULL THEN '''' ELSE IL.CISLA_NOMBRE END ||'' ''||
	CASE WHEN CR.CDCRE_DESCRIPCION IS NULL THEN '''' ELSE CR.CDCRE_DESCRIPCION END ||'' ''||
	CASE WHEN CR.CDCRE_FECHA_EJECUCION IS NULL THEN CURRENT_TIMESTAMP ELSE CR.CDCRE_FECHA_EJECUCION END ||'' ''||
	CASE WHEN CR.CDCRE_FECHA_MAXIMA_REALIZACION IS NULL THEN CURRENT_TIMESTAMP ELSE CR.CDCRE_FECHA_MAXIMA_REALIZACION END ||'' ''||
	CASE WHEN CR.CDCRE_ESTADO IS NULL THEN FALSE ELSE CR.CDCRE_ESTADO END ||'' ''||
	CASE WHEN CR.CDCRE_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CR.CDCRE_FECHA_INSERT END ||'' ''||
	CASE WHEN CR.CDCRE_USUARIO_INSERT IS NULL THEN '''' ELSE CR.CDCRE_USUARIO_INSERT END ||'' ''||
	CASE WHEN CR.CDCRE_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CR.CDCRE_FECHA_UPDATE END ||'' ''||
	CASE WHEN CR.CDCRE_USUARIO_UPDATE IS NULL THEN '''' ELSE CR.CDCRE_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA CR
	INNER JOIN CGG_DHU_ENCUESTA EN ON (EN.CDENC_CODIGO = CR.CDENC_CODIGO)
	INNER JOIN CGG_DHU_CURSO CS ON (CS.CDCUR_CODIGO = CR.CDCUR_CODIGO)
	INNER JOIN CGG_ISLA IL ON (IL.CISLA_CODIGO = CR.CISLA_CODIGO)
	WHERE CDCRE_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA CR
	INNER JOIN CGG_DHU_ENCUESTA EN ON (EN.CDENC_CODIGO = CR.CDENC_CODIGO)	
	INNER JOIN CGG_DHU_CURSO CS ON (CS.CDCUR_CODIGO = CR.CDCUR_CODIGO)
	INNER JOIN CGG_ISLA IL ON (IL.CISLA_CODIGO = CR.CISLA_CODIGO)
	WHERE CDCRE_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,
	CASE WHEN CR.CDCRE_CODIGO IS NULL THEN '''' ELSE CR.CDCRE_CODIGO END ||' '||
	CASE WHEN CR.CDENC_CODIGO IS NULL THEN '''' ELSE CR.CDENC_CODIGO END ||' '||	
	CASE WHEN EN.CDENC_NOMBRE IS NULL THEN '''' ELSE EN.CDENC_NOMBRE END ||' '||
	CASE WHEN CR.CDCUR_CODIGO IS NULL THEN '''' ELSE CR.CDCUR_CODIGO END ||' '||
	CASE WHEN CS.CDCUR_DESCRIPCION IS NULL THEN '''' ELSE CS.CDCUR_DESCRIPCION END ||' '||
	CASE WHEN CR.CISLA_CODIGO IS NULL THEN '''' ELSE CR.CISLA_CODIGO END ||' '||
	CASE WHEN IL.CISLA_NOMBRE IS NULL THEN '''' ELSE IL.CISLA_NOMBRE END ||' '||
	CASE WHEN CR.CDCRE_DESCRIPCION IS NULL THEN '''' ELSE CR.CDCRE_DESCRIPCION END ||' '||
	CASE WHEN CR.CDCRE_FECHA_EJECUCION IS NULL THEN CURRENT_TIMESTAMP ELSE CR.CDCRE_FECHA_EJECUCION END ||' '||
	CASE WHEN CR.CDCRE_FECHA_MAXIMA_REALIZACION IS NULL THEN CURRENT_TIMESTAMP ELSE CR.CDCRE_FECHA_MAXIMA_REALIZACION END ||' '||
	CASE WHEN CR.CDCRE_ESTADO IS NULL THEN FALSE ELSE CR.CDCRE_ESTADO END ||' '||
	CASE WHEN CR.CDCRE_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CR.CDCRE_FECHA_INSERT END ||' '||
	CASE WHEN CR.CDCRE_USUARIO_INSERT IS NULL THEN '''' ELSE CR.CDCRE_USUARIO_INSERT END ||' '||
	CASE WHEN CR.CDCRE_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CR.CDCRE_FECHA_UPDATE END ||' '||
	CASE WHEN CR.CDCRE_USUARIO_UPDATE IS NULL THEN '''' ELSE CR.CDCRE_USUARIO_UPDATE END ) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CRONOGRAMA ENCUESTA
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CDCRE_DESCRIPCION DESCRIPCION DEL CRONOGRAMA DE ENCUESTA
* @param IN_CDCRE_FECHA_EJECUCION FECHA DE EJECUCION DEL CRONOGRAMA
* @param IN_CDCRE_FECHA_MAXIMA_REALIZACION FECHA MAXIMA HASTA CUANDO SE PUEDE EJECUTAR UNA ENCUESTA
* @param IN_CDCRE_ESTADO ESTADO DEL REGISTRO
* @param IN_CDCRE_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_UPDATE(
IN IN_CDCRE_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_CODIGO%TYPE,
IN IN_CDENC_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDENC_CODIGO%TYPE,
IN IN_CDCUR_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCUR_CODIGO%TYPE,
IN IN_CISLA_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CISLA_CODIGO%TYPE,
IN IN_CDCRE_DESCRIPCION SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_DESCRIPCION%TYPE,
IN IN_CDCRE_FECHA_EJECUCION SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_FECHA_EJECUCION%TYPE,
IN IN_CDCRE_FECHA_MAXIMA_REALIZACION SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_FECHA_MAXIMA_REALIZACION%TYPE,
IN IN_CDCRE_ESTADO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_ESTADO%TYPE,
IN IN_CDCRE_USUARIO_UPDATE SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CRONOGRAMA_ENCUESTA SET
		CDENC_CODIGO = IN_CDENC_CODIGO, 
		CDCUR_CODIGO = IN_CDCUR_CODIGO, 
		CISLA_CODIGO = IN_CISLA_CODIGO, 
		CDCRE_DESCRIPCION = IN_CDCRE_DESCRIPCION, 
		CDCRE_FECHA_EJECUCION = IN_CDCRE_FECHA_EJECUCION, 
		CDCRE_FECHA_MAXIMA_REALIZACION = IN_CDCRE_FECHA_MAXIMA_REALIZACION, 
		CDCRE_ESTADO = IN_CDCRE_ESTADO, 
		CDCRE_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CDCRE_USUARIO_UPDATE = IN_CDCRE_USUARIO_UPDATE
	WHERE
		CDCRE_CODIGO = IN_CDCRE_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CRONOGRAMA ENCUESTA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_SELECT(
IN IN_CDCRE_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCRE_CODIGO, 
		CDENC_CODIGO, 
		CDCUR_CODIGO, 
		CISLA_CODIGO, 
		CDCRE_DESCRIPCION, 
		CDCRE_FECHA_EJECUCION, 
		CDCRE_FECHA_MAXIMA_REALIZACION, 
		CDCRE_ESTADO, 
		CDCRE_FECHA_INSERT, 
		CDCRE_USUARIO_INSERT, 
		CDCRE_FECHA_UPDATE, 
		CDCRE_USUARIO_UPDATE
	FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA
	WHERE CDCRE_ESTADO = TRUE AND 
		CDCRE_CODIGO = IN_CDCRE_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CRONOGRAMA ENCUESTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_DELETE(
IN IN_CDCRE_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA
	WHERE
		CDCRE_CODIGO = IN_CDCRE_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CRONOGRAMA ENCUESTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_DELETE_SOFT(
IN IN_CDCRE_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCRE_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CRONOGRAMA_ENCUESTA SET
		CDCRE_ESTADO = FALSE
	WHERE
		CDCRE_CODIGO = IN_CDCRE_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_S_CGG_ISLA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_ISLA.
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_S_CGG_ISLA(
IN IN_CISLA_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CISLA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCRE_CODIGO, 
		CDENC_CODIGO, 
		CDCUR_CODIGO, 
		CISLA_CODIGO, 
		CDCRE_DESCRIPCION, 
		CDCRE_FECHA_EJECUCION, 
		CDCRE_FECHA_MAXIMA_REALIZACION, 
		CDCRE_ESTADO, 
		CDCRE_FECHA_INSERT, 
		CDCRE_USUARIO_INSERT, 
		CDCRE_FECHA_UPDATE, 
		CDCRE_USUARIO_UPDATE
	FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA
	WHERE CDCRE_ESTADO = TRUE AND 
		CISLA_CODIGO = IN_CISLA_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_D_CGG_ISLA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_ISLA.
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_D_CGG_ISLA(
IN IN_CISLA_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CISLA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA
	WHERE
		CISLA_CODIGO = IN_CISLA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_D_CGG_ISLA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_ISLA.
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_DS_CGG_ISLA(
IN IN_CISLA_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CISLA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CRONOGRAMA_ENCUESTA SET
		cdcre_estado = false
	WHERE
		CISLA_CODIGO = IN_CISLA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_S_CGG_DHU_ENCUESTA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_ENCUESTA.
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_S_CGG_DHU_ENCUESTA(
IN IN_CDENC_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDENC_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCRE_CODIGO, 
		CDENC_CODIGO, 
		CDCUR_CODIGO, 
		CISLA_CODIGO, 
		CDCRE_DESCRIPCION, 
		CDCRE_FECHA_EJECUCION, 
		CDCRE_FECHA_MAXIMA_REALIZACION, 
		CDCRE_ESTADO, 
		CDCRE_FECHA_INSERT, 
		CDCRE_USUARIO_INSERT, 
		CDCRE_FECHA_UPDATE, 
		CDCRE_USUARIO_UPDATE
	FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA
	WHERE CDCRE_ESTADO = TRUE AND 
		CDENC_CODIGO = IN_CDENC_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_D_CGG_DHU_ENCUESTA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_ENCUESTA.
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_D_CGG_DHU_ENCUESTA(
IN IN_CDENC_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDENC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA
	WHERE
		CDENC_CODIGO = IN_CDENC_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_D_CGG_DHU_ENCUESTA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_ENCUESTA.
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_DS_CGG_DHU_ENCUESTA(
IN IN_CDENC_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDENC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CRONOGRAMA_ENCUESTA SET
		cdcre_estado = false
	WHERE
		CDENC_CODIGO = IN_CDENC_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_S_CGG_DHU_CURSO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CURSO.
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_S_CGG_DHU_CURSO(
IN IN_CDCUR_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCUR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCRE_CODIGO, 
		CDENC_CODIGO, 
		CDCUR_CODIGO, 
		CISLA_CODIGO, 
		CDCRE_DESCRIPCION, 
		CDCRE_FECHA_EJECUCION, 
		CDCRE_FECHA_MAXIMA_REALIZACION, 
		CDCRE_ESTADO, 
		CDCRE_FECHA_INSERT, 
		CDCRE_USUARIO_INSERT, 
		CDCRE_FECHA_UPDATE, 
		CDCRE_USUARIO_UPDATE
	FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA
	WHERE CDCRE_ESTADO = TRUE AND 
		CDCUR_CODIGO = IN_CDCUR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_D_CGG_DHU_CURSO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CURSO.
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_D_CGG_DHU_CURSO(
IN IN_CDCUR_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCUR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_CRONOGRAMA_ENCUESTA
	WHERE
		CDCUR_CODIGO = IN_CDCUR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_D_CGG_DHU_CURSO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CURSO.
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CRONOGRAMA_ENCUESTA_DS_CGG_DHU_CURSO(
IN IN_CDCUR_CODIGO SII.CGG_DHU_CRONOGRAMA_ENCUESTA.CDCUR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CRONOGRAMA_ENCUESTA SET
		cdcre_estado = false
	WHERE
		CDCUR_CODIGO = IN_CDCUR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

