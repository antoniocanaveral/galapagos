/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA
* @param IN_CRMVI_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD INTERNA
* @param IN_CRMLE_CODIGO MUELLE ORIGEN
* @param IN_CGG_CRMLE_CODIGO MUELLE DESTINO
* @param IN_CREMB_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EMBARCACION
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO  DE PERSONA
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD
* @param IN_CARPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRALN_DESCRIPCION_VUELO DESCRIPCION DEL VUELO 
* @param IN_CRMVI_FECHA_VIAJE FECHA DE VIAJE
* @param IN_CRMVI_TIPO_OPERACION TIPO DE OPERACION DE LA PERSONA SOBRE LAS ISLAS
* @param IN_CRMVI_OBSERVACION DESCRIPCION CORTA 
* @param IN_CRMVI_ESTADO ESTADO DEL REGISTRO
* @param IN_CRMVI_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRMVI_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_INSERT(
IN IN_CRMVI_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_CODIGO%TYPE, 
IN IN_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMLE_CODIGO%TYPE, 
IN IN_CGG_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CRMLE_CODIGO%TYPE, 
IN IN_CREMB_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CREMB_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRPER_CODIGO%TYPE, 
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMOV_CODIGO%TYPE, 
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CARPT_CODIGO%TYPE, 
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CARPT_CODIGO%TYPE, 
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRALN_CODIGO%TYPE, 
IN IN_CRALN_DESCRIPCION_VUELO SII.CGG_RES_MOVILIDAD_INTERNA.CRALN_DESCRIPCION_VUELO%TYPE, 
IN IN_CRMVI_FECHA_VIAJE SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_FECHA_VIAJE%TYPE, 
IN IN_CRMVI_TIPO_OPERACION SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_TIPO_OPERACION%TYPE, 
IN IN_CRMVI_OBSERVACION SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_OBSERVACION%TYPE, 
IN IN_CRMVI_ESTADO SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_ESTADO%TYPE, 
IN IN_CRMVI_USUARIO_INSERT SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_USUARIO_INSERT%TYPE, 
IN IN_CRMVI_USUARIO_UPDATE SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CRMVI_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_MOVILIDAD_INTERNA','CRMVI_CODIGO','CRMVI') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRMVI_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_MOVILIDAD_INTERNA(
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRMLE_CODIGO, 
		IN_CGG_CRMLE_CODIGO, 
		IN_CREMB_CODIGO, 
		IN_CRPER_CODIGO, 
		IN_CRMOV_CODIGO, 
		IN_CARPT_CODIGO, 
		IN_CGG_CARPT_CODIGO, 
		IN_CRALN_CODIGO, 
		IN_CRALN_DESCRIPCION_VUELO, 
		IN_CRMVI_FECHA_VIAJE, 
		IN_CRMVI_TIPO_OPERACION, 
		IN_CRMVI_OBSERVACION, 
		IN_CRMVI_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRMVI_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRMVI_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CRALN_DESCRIPCION_VUELO, '''')||'' ''||COALESCE(CRMVI_FECHA_VIAJE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRMVI_TIPO_OPERACION, 0)||'' ''||COALESCE(CRMVI_OBSERVACION, '''')||'' ''||COALESCE(CRMVI_ESTADO, FALSE)||'' ''||COALESCE(CRMVI_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRMVI_USUARIO_INSERT, '''')||'' ''||COALESCE(CRMVI_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRMVI_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRALN_DESCRIPCION_VUELO, '''')||' '||COALESCE(CRMVI_FECHA_VIAJE, CURRENT_TIMESTAMP)||' '||COALESCE(CRMVI_TIPO_OPERACION, 0)||' '||COALESCE(CRMVI_OBSERVACION, '''')||' '||COALESCE(CRMVI_ESTADO, FALSE)||' '||COALESCE(CRMVI_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRMVI_USUARIO_INSERT, '''')||' '||COALESCE(CRMVI_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRMVI_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_MOVILIDAD_INTERNA
* @param IN_CRMVI_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD INTERNA
* @param IN_CRMLE_CODIGO MUELLE ORIGEN
* @param IN_CGG_CRMLE_CODIGO MUELLE DESTINO
* @param IN_CREMB_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EMBARCACION
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO  DE PERSONA
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD
* @param IN_CARPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRALN_DESCRIPCION_VUELO DESCRIPCION DEL VUELO 
* @param IN_CRMVI_FECHA_VIAJE FECHA DE VIAJE
* @param IN_CRMVI_TIPO_OPERACION TIPO DE OPERACION DE LA PERSONA SOBRE LAS ISLAS
* @param IN_CRMVI_OBSERVACION DESCRIPCION CORTA 
* @param IN_CRMVI_ESTADO ESTADO DEL REGISTRO
* @param IN_CRMVI_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_UPDATE(
IN IN_CRMVI_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_CODIGO%TYPE, 
IN IN_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMLE_CODIGO%TYPE, 
IN IN_CGG_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CRMLE_CODIGO%TYPE, 
IN IN_CREMB_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CREMB_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRPER_CODIGO%TYPE, 
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMOV_CODIGO%TYPE, 
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CARPT_CODIGO%TYPE, 
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CARPT_CODIGO%TYPE, 
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRALN_CODIGO%TYPE, 
IN IN_CRALN_DESCRIPCION_VUELO SII.CGG_RES_MOVILIDAD_INTERNA.CRALN_DESCRIPCION_VUELO%TYPE, 
IN IN_CRMVI_FECHA_VIAJE SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_FECHA_VIAJE%TYPE, 
IN IN_CRMVI_TIPO_OPERACION SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_TIPO_OPERACION%TYPE, 
IN IN_CRMVI_OBSERVACION SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_OBSERVACION%TYPE, 
IN IN_CRMVI_ESTADO SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_ESTADO%TYPE, 
IN IN_CRMVI_USUARIO_UPDATE SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD_INTERNA SET
		CRMLE_CODIGO = IN_CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO = IN_CGG_CRMLE_CODIGO, 
		CREMB_CODIGO = IN_CREMB_CODIGO, 
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CRMOV_CODIGO = IN_CRMOV_CODIGO, 
		CARPT_CODIGO = IN_CARPT_CODIGO, 
		CGG_CARPT_CODIGO = IN_CGG_CARPT_CODIGO, 
		CRALN_CODIGO = IN_CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO = IN_CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE = IN_CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION = IN_CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION = IN_CRMVI_OBSERVACION, 
		CRMVI_ESTADO = IN_CRMVI_ESTADO, 
		CRMVI_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRMVI_USUARIO_UPDATE = IN_CRMVI_USUARIO_UPDATE
	WHERE
		CRMVI_CODIGO = IN_CRMVI_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA
* @param IN_CRMVI_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD INTERNA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_SELECT(
IN IN_CRMVI_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE AND 
		CRMVI_CODIGO = IN_CRMVI_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA
* @param IN_CRMVI_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD INTERNA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_DELETE(
IN IN_CRMVI_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE
		CRMVI_CODIGO = IN_CRMVI_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA
* @param IN_CRMVI_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD INTERNA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_DELETE_SOFT(
IN IN_CRMVI_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMVI_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD_INTERNA SET
		CRMVI_ESTADO = FALSE
	WHERE
		CRMVI_CODIGO = IN_CRMVI_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_MUELLE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_MUELLE.
* @param IN_CRMLE_CODIGO MUELLE ORIGEN
* @param IN_CGG_CRMLE_CODIGO MUELLE DESTINO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_MUELLE(
IN IN_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMLE_CODIGO%TYPE, 
IN IN_CGG_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CRMLE_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE AND 
		CRMLE_CODIGO = IN_CRMLE_CODIGO AND 
		CGG_CRMLE_CODIGO = IN_CGG_CRMLE_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_MUELLE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_MUELLE.
* @param IN_CRMLE_CODIGO MUELLE ORIGEN
* @param IN_CGG_CRMLE_CODIGO MUELLE DESTINO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_MUELLE(
IN IN_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMLE_CODIGO%TYPE, 
IN IN_CGG_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CRMLE_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE
		CRMLE_CODIGO = IN_CRMLE_CODIGO AND 
		CGG_CRMLE_CODIGO = IN_CGG_CRMLE_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_MUELLE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_MUELLE.
* @param IN_CRMLE_CODIGO MUELLE ORIGEN
* @param IN_CGG_CRMLE_CODIGO MUELLE DESTINO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_DS_CGG_RES_MUELLE(
IN IN_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMLE_CODIGO%TYPE, 
IN IN_CGG_CRMLE_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CRMLE_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD_INTERNA SET
		crmvi_estado = false
	WHERE
		CRMLE_CODIGO = IN_CRMLE_CODIGO AND 
		CGG_CRMLE_CODIGO = IN_CGG_CRMLE_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_AEROPUERTO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROPUERTO.
* @param IN_CARPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_AEROPUERTO(
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CARPT_CODIGO%TYPE, 
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CARPT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE AND 
		CARPT_CODIGO = IN_CARPT_CODIGO AND 
		CGG_CARPT_CODIGO = IN_CGG_CARPT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_AEROPUERTO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROPUERTO.
* @param IN_CARPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_AEROPUERTO(
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CARPT_CODIGO%TYPE, 
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CARPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE
		CARPT_CODIGO = IN_CARPT_CODIGO AND 
		CGG_CARPT_CODIGO = IN_CGG_CARPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_AEROPUERTO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROPUERTO.
* @param IN_CARRPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_DS_CGG_RES_AEROPUERTO(
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CARPT_CODIGO%TYPE, 
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CGG_CARPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD_INTERNA SET
		crmvi_estado = false
	WHERE
		CARPT_CODIGO = IN_CARPT_CODIGO AND 
		CGG_CARPT_CODIGO = IN_CGG_CARPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_MOVILIDAD
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_MOVILIDAD.
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_MOVILIDAD(
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMOV_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE AND 
		CRMOV_CODIGO = IN_CRMOV_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_MOVILIDAD
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_MOVILIDAD.
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_MOVILIDAD(
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMOV_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE
		CRMOV_CODIGO = IN_CRMOV_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_MOVILIDAD
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_MOVILIDAD.
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE MOVILIDAD
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_DS_CGG_RES_MOVILIDAD(
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRMOV_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD_INTERNA SET
		crmvi_estado = false
	WHERE
		CRMOV_CODIGO = IN_CRMOV_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_EMBARCACION
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_EMBARCACION.
* @param IN_CREMB_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EMBARCACION
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_EMBARCACION(
IN IN_CREMB_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CREMB_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE AND 
		CREMB_CODIGO = IN_CREMB_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_EMBARCACION
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_EMBARCACION.
* @param IN_CREMB_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EMBARCACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_EMBARCACION(
IN IN_CREMB_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CREMB_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE
		CREMB_CODIGO = IN_CREMB_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_EMBARCACION
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_EMBARCACION.
* @param IN_CREMB_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EMBARCACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_DS_CGG_RES_EMBARCACION(
IN IN_CREMB_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CREMB_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD_INTERNA SET
		crmvi_estado = false
	WHERE
		CREMB_CODIGO = IN_CREMB_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_AEROLINEA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROLINEA.
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_AEROLINEA(
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRALN_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE AND 
		CRALN_CODIGO = IN_CRALN_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_AEROLINEA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROLINEA.
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_AEROLINEA(
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRALN_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE
		CRALN_CODIGO = IN_CRALN_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_AEROLINEA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROLINEA.
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_DS_CGG_RES_AEROLINEA(
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRALN_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD_INTERNA SET
		crmvi_estado = false
	WHERE
		CRALN_CODIGO = IN_CRALN_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_PERSONA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO  DE PERSONA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_S_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMVI_CODIGO, 
		CRMLE_CODIGO, 
		CGG_CRMLE_CODIGO, 
		CREMB_CODIGO, 
		CRPER_CODIGO, 
		CRMOV_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRALN_CODIGO, 
		CRALN_DESCRIPCION_VUELO, 
		CRMVI_FECHA_VIAJE, 
		CRMVI_TIPO_OPERACION, 
		CRMVI_OBSERVACION, 
		CRMVI_ESTADO, 
		CRMVI_FECHA_INSERT, 
		CRMVI_USUARIO_INSERT, 
		CRMVI_FECHA_UPDATE, 
		CRMVI_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE CRMVI_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO  DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD_INTERNA
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INTERNA_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INTERNA_DS_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD_INTERNA.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD_INTERNA SET
		crmvi_estado = false
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

