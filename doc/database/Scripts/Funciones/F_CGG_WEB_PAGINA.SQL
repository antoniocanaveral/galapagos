/**
* FUNCION SII.F_CGG_WEB_PAGINA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_WEB_PAGINA
* @param IN_CWPAG_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @param IN_CWPAG_NOMBRE NOMBRE COMPLETO DE LA PAGINA WEB
* @param IN_CWPAG_TITULO CONTENIDO DE LA FRASE O MENSAJE
* @param IN_CWPAG_DESCRIPCION CONTENIDO DE LA FRASE O MENSAJE
* @param IN_CWPAG_CONFIGURACION DATOS DE CONFIGURACION DE MENSAJES QUE APARECEN EN LA PAGIN
* @param IN_CWPAG_ESTADO ESTADO DEL REGISTRO
* @param IN_CWPAG_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CWPAG_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_WEB_PAGINA_INSERT(
IN IN_CWPAG_CODIGO SII.CGG_WEB_PAGINA.CWPAG_CODIGO%TYPE,
IN IN_CWPAG_NOMBRE SII.CGG_WEB_PAGINA.CWPAG_NOMBRE%TYPE,
IN IN_CWPAG_TITULO SII.CGG_WEB_PAGINA.CWPAG_TITULO%TYPE,
IN IN_CWPAG_DESCRIPCION SII.CGG_WEB_PAGINA.CWPAG_DESCRIPCION%TYPE,
IN IN_CWPAG_CONFIGURACION SII.CGG_WEB_PAGINA.CWPAG_CONFIGURACION%TYPE,
IN IN_CWPAG_ESTADO SII.CGG_WEB_PAGINA.CWPAG_ESTADO%TYPE,
IN IN_CWPAG_USUARIO_INSERT SII.CGG_WEB_PAGINA.CWPAG_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CWPAG_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_WEB_PAGINA','CWPAG_CODIGO','CWPAG') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CWPAG_CODIGO;
	END IF;
	INSERT INTO SII.CGG_WEB_PAGINA(
		CWPAG_CODIGO, 
		CWPAG_NOMBRE, 
		CWPAG_TITULO, 
		CWPAG_DESCRIPCION, 
		CWPAG_CONFIGURACION, 
		CWPAG_ESTADO, 
		CWPAG_FECHA_INSERT, 
		CWPAG_USUARIO_INSERT, 
		CWPAG_FECHA_UPDATE, 
		CWPAG_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CWPAG_NOMBRE, 
		IN_CWPAG_TITULO, 
		IN_CWPAG_DESCRIPCION, 
		IN_CWPAG_CONFIGURACION, 
		IN_CWPAG_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CWPAG_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CWPAG_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_WEB_PAGINA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_WEB_PAGINA
* @param IN_CWPAG_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @param IN_CWPAG_NOMBRE NOMBRE COMPLETO DE LA PAGINA WEB
* @param IN_CWPAG_TITULO CONTENIDO DE LA FRASE O MENSAJE
* @param IN_CWPAG_DESCRIPCION CONTENIDO DE LA FRASE O MENSAJE
* @param IN_CWPAG_CONFIGURACION DATOS DE CONFIGURACION DE MENSAJES QUE APARECEN EN LA PAGIN
* @param IN_CWPAG_ESTADO ESTADO DEL REGISTRO
* @param IN_CWPAG_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_WEB_PAGINA_UPDATE(
IN IN_CWPAG_CODIGO SII.CGG_WEB_PAGINA.CWPAG_CODIGO%TYPE,
IN IN_CWPAG_NOMBRE SII.CGG_WEB_PAGINA.CWPAG_NOMBRE%TYPE,
IN IN_CWPAG_TITULO SII.CGG_WEB_PAGINA.CWPAG_TITULO%TYPE,
IN IN_CWPAG_DESCRIPCION SII.CGG_WEB_PAGINA.CWPAG_DESCRIPCION%TYPE,
IN IN_CWPAG_CONFIGURACION SII.CGG_WEB_PAGINA.CWPAG_CONFIGURACION%TYPE,
IN IN_CWPAG_ESTADO SII.CGG_WEB_PAGINA.CWPAG_ESTADO%TYPE,
IN IN_CWPAG_USUARIO_UPDATE SII.CGG_WEB_PAGINA.CWPAG_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_WEB_PAGINA SET
		CWPAG_NOMBRE = IN_CWPAG_NOMBRE, 
		CWPAG_TITULO = IN_CWPAG_TITULO, 
		CWPAG_DESCRIPCION = IN_CWPAG_DESCRIPCION, 
		CWPAG_CONFIGURACION = IN_CWPAG_CONFIGURACION, 
		CWPAG_ESTADO = IN_CWPAG_ESTADO, 
		CWPAG_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CWPAG_USUARIO_UPDATE = IN_CWPAG_USUARIO_UPDATE
	WHERE
		CWPAG_CODIGO = IN_CWPAG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_WEB_PAGINA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_WEB_PAGINA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_WEB_PAGINA_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CWPAG_CODIGO, 
		CWPAG_NOMBRE, 
		CWPAG_TITULO, 
		CWPAG_DESCRIPCION, 
		CWPAG_CONFIGURACION		
	FROM SII.CGG_WEB_PAGINA
	WHERE CWPAG_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
		COALESCE(CWPAG_NOMBRE, '''')||'' ''||
		COALESCE(CWPAG_TITULO, '''')||'' ''||
		COALESCE(CWPAG_DESCRIPCION, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_WEB_PAGINA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_WEB_PAGINA
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_WEB_PAGINA_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_WEB_PAGINA
	WHERE CWPAG_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_WEB_PAGINA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_WEB_PAGINA
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_WEB_PAGINA_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_WEB_PAGINA
	WHERE CWPAG_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,
		COALESCE(CWPAG_NOMBRE, '''')||' '||
		COALESCE(CWPAG_TITULO, '''')||' '||
		COALESCE(CWPAG_DESCRIPCION, '''')
	) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_WEB_PAGINA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_WEB_PAGINA
* @param IN_CWPAG_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_WEB_PAGINA_DELETE(
IN IN_CWPAG_CODIGO SII.CGG_WEB_PAGINA.CWPAG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_WEB_PAGINA
	WHERE
		CWPAG_CODIGO = IN_CWPAG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_WEB_PAGINA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_WEB_PAGINA
* @param IN_CWPAG_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_WEB_PAGINA_DELETE_SOFT(
IN IN_CWPAG_CODIGO SII.CGG_WEB_PAGINA.CWPAG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_WEB_PAGINA SET
		CWPAG_ESTADO = FALSE
	WHERE
		CWPAG_CODIGO = IN_CWPAG_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_WEB_PAGINA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_WEB_PAGINA
* @param IN_CWPAG_CODIGO CODIGO DE LA TABLA CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_WEB_PAGINA_SELECT(
IN IN_CWPAG_CODIGO VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	
	OPEN TMP_REF FOR
	SELECT
		CWPAG_CODIGO, 
		CWPAG_NOMBRE, 
		CWPAG_TITULO, 
		CWPAG_DESCRIPCION, 
		CWPAG_CONFIGURACION,
		CWPAG_ESTADO
	FROM SII.CGG_WEB_PAGINA
	WHERE CWPAG_ESTADO = TRUE AND CWPAG_CODIGO = IN_CWPAG_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;