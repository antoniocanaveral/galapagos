/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL
* @param IN_CRRPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REPRESENTANTE LEGAL
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @param IN_CRRPT_FECHA_REGISTRO FECHA QUE SE INGRESO LA INFORMACION DEL REPRESNTANTE LEGAL
* @param IN_CRRPT_ACTIVO ALMACENA INFORMACION DEL ESTADO DEL REPRESENTANTE LEGAL DENTRO D ELA EMPRESA
* @param IN_CRRPT_ESTADO ESTADO DEL REGISTRO
* @param IN_CRRPT_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRRPT_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_INSERT(
IN IN_CRRPT_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPER_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPJR_CODIGO%TYPE, 
IN IN_CRRPT_FECHA_REGISTRO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_FECHA_REGISTRO%TYPE, 
IN IN_CRRPT_ACTIVO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_ACTIVO%TYPE, 
IN IN_CRRPT_ESTADO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_ESTADO%TYPE, 
IN IN_CRRPT_USUARIO_INSERT SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_USUARIO_INSERT%TYPE, 
IN IN_CRRPT_USUARIO_UPDATE SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CRRPT_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_REPRESENTANTE_LEGAL','CRRPT_CODIGO','CRRPT') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRRPT_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_REPRESENTANTE_LEGAL(
		CRRPT_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CRRPT_FECHA_REGISTRO, 
		CRRPT_ACTIVO, 
		CRRPT_ESTADO, 
		CRRPT_FECHA_INSERT, 
		CRRPT_USUARIO_INSERT, 
		CRRPT_FECHA_UPDATE, 
		CRRPT_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRPER_CODIGO, 
		IN_CRPJR_CODIGO, 
		IN_CRRPT_FECHA_REGISTRO, 
		IN_CRRPT_ACTIVO, 
		IN_CRRPT_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRRPT_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRRPT_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRRPT_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CRRPT_FECHA_REGISTRO, 
		CRRPT_ACTIVO, 
		CRRPT_ESTADO, 
		CRRPT_FECHA_INSERT, 
		CRRPT_USUARIO_INSERT, 
		CRRPT_FECHA_UPDATE, 
		CRRPT_USUARIO_UPDATE
	FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE CRRPT_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRRPT_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CRRPT_FECHA_REGISTRO, 
		CRRPT_ACTIVO, 
		CRRPT_ESTADO, 
		CRRPT_FECHA_INSERT, 
		CRRPT_USUARIO_INSERT, 
		CRRPT_FECHA_UPDATE, 
		CRRPT_USUARIO_UPDATE
	FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE CRRPT_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CRRPT_FECHA_REGISTRO, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRRPT_ACTIVO, FALSE)||'' ''||COALESCE(CRRPT_ESTADO, FALSE)||'' ''||COALESCE(CRRPT_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRRPT_USUARIO_INSERT, '''')||'' ''||COALESCE(CRRPT_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRRPT_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE CRRPT_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE CRRPT_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRRPT_FECHA_REGISTRO, CURRENT_TIMESTAMP)||' '||COALESCE(CRRPT_ACTIVO, FALSE)||' '||COALESCE(CRRPT_ESTADO, FALSE)||' '||COALESCE(CRRPT_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRRPT_USUARIO_INSERT, '''')||' '||COALESCE(CRRPT_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRRPT_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_REPRESENTANTE_LEGAL
* @param IN_CRRPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REPRESENTANTE LEGAL
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @param IN_CRRPT_FECHA_REGISTRO FECHA QUE SE INGRESO LA INFORMACION DEL REPRESNTANTE LEGAL
* @param IN_CRRPT_ACTIVO ALMACENA INFORMACION DEL ESTADO DEL REPRESENTANTE LEGAL DENTRO D ELA EMPRESA
* @param IN_CRRPT_ESTADO ESTADO DEL REGISTRO
* @param IN_CRRPT_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_UPDATE(
IN IN_CRRPT_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPER_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPJR_CODIGO%TYPE, 
IN IN_CRRPT_FECHA_REGISTRO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_FECHA_REGISTRO%TYPE, 
IN IN_CRRPT_ACTIVO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_ACTIVO%TYPE, 
IN IN_CRRPT_ESTADO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_ESTADO%TYPE, 
IN IN_CRRPT_USUARIO_UPDATE SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_REPRESENTANTE_LEGAL SET
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CRPJR_CODIGO = IN_CRPJR_CODIGO, 
		CRRPT_FECHA_REGISTRO = IN_CRRPT_FECHA_REGISTRO, 
		CRRPT_ACTIVO = IN_CRRPT_ACTIVO, 
		CRRPT_ESTADO = IN_CRRPT_ESTADO, 
		CRRPT_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRRPT_USUARIO_UPDATE = IN_CRRPT_USUARIO_UPDATE
	WHERE
		CRRPT_CODIGO = IN_CRRPT_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL
* @param IN_CRRPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REPRESENTANTE LEGAL
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_SELECT(
IN IN_CRRPT_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRRPT_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CRRPT_FECHA_REGISTRO, 
		CRRPT_ACTIVO, 
		CRRPT_ESTADO, 
		CRRPT_FECHA_INSERT, 
		CRRPT_USUARIO_INSERT, 
		CRRPT_FECHA_UPDATE, 
		CRRPT_USUARIO_UPDATE
	FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE CRRPT_ESTADO = TRUE AND 
		CRRPT_CODIGO = IN_CRRPT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL
* @param IN_CRRPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REPRESENTANTE LEGAL
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_DELETE(
IN IN_CRRPT_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE
		CRRPT_CODIGO = IN_CRRPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL
* @param IN_CRRPT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REPRESENTANTE LEGAL
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_DELETE_SOFT(
IN IN_CRRPT_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRRPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_REPRESENTANTE_LEGAL SET
		CRRPT_ESTADO = FALSE
	WHERE
		CRRPT_CODIGO = IN_CRRPT_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_S_CGG_RES_PERSONA_JURIDICA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_S_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPJR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRRPT_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CRRPT_FECHA_REGISTRO, 
		CRRPT_ACTIVO, 
		CRRPT_ESTADO, 
		CRRPT_FECHA_INSERT, 
		CRRPT_USUARIO_INSERT, 
		CRRPT_FECHA_UPDATE, 
		CRRPT_USUARIO_UPDATE
	FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE CRRPT_ESTADO = TRUE AND 
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_D_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_DS_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_REPRESENTANTE_LEGAL SET
		crrpt_estado = false
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_S_CGG_RES_PERSONA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_S_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRRPT_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		CRRPT_FECHA_REGISTRO, 
		CRRPT_ACTIVO, 
		CRRPT_ESTADO, 
		CRRPT_FECHA_INSERT, 
		CRRPT_USUARIO_INSERT, 
		CRRPT_FECHA_UPDATE, 
		CRRPT_USUARIO_UPDATE
	FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE CRRPT_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_D_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REPRESENTANTE_LEGAL_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REPRESENTANTE_LEGAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REPRESENTANTE_LEGAL_DS_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_REPRESENTANTE_LEGAL.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_REPRESENTANTE_LEGAL SET
		crrpt_estado = false
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
*FUNCION. SELECCIONA LA PERSONA REPRESENTANTE LEGAL DE UNA PERSONAL JURIDICA.
*@param IN_CRPJR_CODIGO CODIGO DE PERSONAL JURIDICA.
*@return CURSOR CON INFORMACION DE PERSONA.
*/
CREATE OR REPLACE FUNCTION SII.F_REPRESENTANTE_LEGAL_EMPRESA(
IN IN_CRPJR_CODIGO VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	REPRESENTANTE TEXT;
	PERCODIGO VARCHAR(20);
	TMP_REF REFCURSOR;
BEGIN

	REPRESENTANTE := '';
		
	SELECT		
		COALESCE(CRPER_CODIGO,'') INTO PERCODIGO		
	FROM SII.CGG_RES_REPRESENTANTE_LEGAL
	WHERE CRPJR_CODIGO = IN_CRPJR_CODIGO AND
	      CRRPT_ACTIVO = TRUE AND
		  CRRPT_ESTADO = TRUE;
	
	IF(TRIM(LENGTH(PERCODIGO))>=1)THEN
		 TMP_REF := SII.F_CGG_RES_PERSONA_SELECT(PERCODIGO);		
	END IF;
			
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

