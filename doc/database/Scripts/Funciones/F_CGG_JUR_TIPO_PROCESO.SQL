/**
* FUNCION SII.F_CGG_JUR_TIPO_PROCESO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_JUR_TIPO_PROCESO.
* @param IN_CJTPR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE PROCESO DE CONTRATACION
* @param IN_CJTPR_NOMBRE NOMBRE DEL PROCESO DE CONVENIO. EN CASO DE CONTRATOS LOS TIPOS SON CONTRATACION DIRECTA, MINIMA CUANTIA, ETC, Y EN CASO DE CONVENIOS ES: MARCO, ESPECIFICO Y COMODATO. SE DISCRIMINAN POR EL CAMPO DE TIPO DE PROCESO
* @param IN_CJTPR_DESCRIPCION CADENA DE TEXTO DE DESCRIPCION DEL PROCESO DE CONTRATACION.
* @param IN_CJTPR_ESTADO ESTADO DEL REGISTRO DE PROCESO DE CONTRATACION
* @param IN_CJTPR_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CJTPR_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @param IN_CJTPR_TIPO TIPO DE PROCESO:
0 - CONTRATO
1 - CONVENIO
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_TIPO_PROCESO_INSERT(
IN IN_CJTPR_CODIGO SII.CGG_JUR_TIPO_PROCESO.CJTPR_CODIGO%TYPE,
IN IN_CJTPR_NOMBRE SII.CGG_JUR_TIPO_PROCESO.CJTPR_NOMBRE%TYPE,
IN IN_CJTPR_DESCRIPCION SII.CGG_JUR_TIPO_PROCESO.CJTPR_DESCRIPCION%TYPE,
IN IN_CJTPR_ESTADO SII.CGG_JUR_TIPO_PROCESO.CJTPR_ESTADO%TYPE,
IN IN_CJTPR_USUARIO_INSERT SII.CGG_JUR_TIPO_PROCESO.CJTPR_USUARIO_INSERT%TYPE,
IN IN_CJTPR_TIPO SII.CGG_JUR_TIPO_PROCESO.CJTPR_TIPO%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CJTPR_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_JUR_TIPO_PROCESO','CJTPR_CODIGO','CJTPR') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CJTPR_CODIGO;
	END IF;
	INSERT INTO SII.CGG_JUR_TIPO_PROCESO(
		CJTPR_CODIGO, 
		CJTPR_NOMBRE, 
		CJTPR_DESCRIPCION, 
		CJTPR_ESTADO, 
		CJTPR_FECHA_INSERT, 
		CJTPR_USUARIO_INSERT, 
		CJTPR_FECHA_UPDATE, 
		CJTPR_USUARIO_UPDATE, 
		CJTPR_TIPO
	) VALUES (
		OUT_KEY, 
		IN_CJTPR_NOMBRE, 
		IN_CJTPR_DESCRIPCION, 
		IN_CJTPR_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CJTPR_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CJTPR_USUARIO_INSERT, 
		IN_CJTPR_TIPO
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_TIPO_PROCESO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_JUR_TIPO_PROCESO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_TIPO_PROCESO_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CJTPR_CODIGO, 
		CJTPR_NOMBRE, 
		CJTPR_DESCRIPCION, 
		CJTPR_ESTADO, 		
		CJTPR_TIPO
	FROM SII.CGG_JUR_TIPO_PROCESO
	WHERE CJTPR_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_TIPO_PROCESO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_JUR_TIPO_PROCESO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_TIPO_PROCESO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CJTPR_CODIGO, 
		CJTPR_NOMBRE, 
		CJTPR_DESCRIPCION, 
		CJTPR_ESTADO, 
		CJTPR_FECHA_INSERT, 
		CJTPR_USUARIO_INSERT, 
		CJTPR_FECHA_UPDATE, 
		CJTPR_USUARIO_UPDATE, 
		CJTPR_TIPO
	FROM SII.CGG_JUR_TIPO_PROCESO
	WHERE CJTPR_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CJTPR_NOMBRE, '''')||'' ''||COALESCE(CJTPR_DESCRIPCION, '''')||'' ''||COALESCE(CJTPR_ESTADO, FALSE)||'' ''||COALESCE(CJTPR_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CJTPR_USUARIO_INSERT, '''')||'' ''||COALESCE(CJTPR_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CJTPR_USUARIO_UPDATE, '''')||'' ''||COALESCE(CJTPR_TIPO, 0)) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_TIPO_PROCESO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_JUR_TIPO_PROCESO
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_TIPO_PROCESO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_JUR_TIPO_PROCESO
	WHERE CJTPR_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_TIPO_PROCESO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_JUR_TIPO_PROCESO
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_TIPO_PROCESO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_JUR_TIPO_PROCESO
	WHERE CJTPR_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CJTPR_NOMBRE, '''')||' '||COALESCE(CJTPR_DESCRIPCION, '''')||' '||COALESCE(CJTPR_ESTADO, FALSE)||' '||COALESCE(CJTPR_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CJTPR_USUARIO_INSERT, '''')||' '||COALESCE(CJTPR_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CJTPR_USUARIO_UPDATE, '''')||' '||COALESCE(CJTPR_TIPO, 0)) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_TIPO_PROCESO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_JUR_TIPO_PROCESO
* @param IN_CJTPR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE PROCESO DE CONTRATACION.
* @param IN_CJTPR_NOMBRE NOMBRE DEL PROCESO DE CONVENIO. EN CASO DE CONTRATOS LOS TIPOS SON CONTRATACION DIRECTA, MINIMA CUANTIA, ETC, Y EN CASO DE CONVENIOS ES: MARCO, ESPECIFICO Y COMODATO. SE DISCRIMINAN POR EL CAMPO DE TIPO DE PROCESO
* @param IN_CJTPR_DESCRIPCION CADENA DE TEXTO DE DESCRIPCION DEL PROCESO DE CONTRATACION
* @param IN_CJTPR_ESTADO ESTADO DEL REGISTRO DE PROCESO DE CONTRATACION
* @param IN_CJTPR_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @param IN_CJTPR_TIPO TIPO DE PROCESO:
0 - CONTRATO
1 - CONVENIO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_TIPO_PROCESO_UPDATE(
IN IN_CJTPR_CODIGO SII.CGG_JUR_TIPO_PROCESO.CJTPR_CODIGO%TYPE,
IN IN_CJTPR_NOMBRE SII.CGG_JUR_TIPO_PROCESO.CJTPR_NOMBRE%TYPE,
IN IN_CJTPR_DESCRIPCION SII.CGG_JUR_TIPO_PROCESO.CJTPR_DESCRIPCION%TYPE,
IN IN_CJTPR_ESTADO SII.CGG_JUR_TIPO_PROCESO.CJTPR_ESTADO%TYPE,
IN IN_CJTPR_USUARIO_UPDATE SII.CGG_JUR_TIPO_PROCESO.CJTPR_USUARIO_UPDATE%TYPE,
IN IN_CJTPR_TIPO SII.CGG_JUR_TIPO_PROCESO.CJTPR_TIPO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_JUR_TIPO_PROCESO SET
		CJTPR_NOMBRE = IN_CJTPR_NOMBRE, 
		CJTPR_DESCRIPCION = IN_CJTPR_DESCRIPCION, 
		CJTPR_ESTADO = IN_CJTPR_ESTADO, 
		CJTPR_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CJTPR_USUARIO_UPDATE = IN_CJTPR_USUARIO_UPDATE, 
		CJTPR_TIPO = IN_CJTPR_TIPO
	WHERE
		CJTPR_CODIGO = IN_CJTPR_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_TIPO_PROCESO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_JUR_TIPO_PROCESO.
* @param IN_CJTPR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE PROCESO DE CONTRATACION
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_TIPO_PROCESO_SELECT(
IN IN_CJTPR_CODIGO SII.CGG_JUR_TIPO_PROCESO.CJTPR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CJTPR_CODIGO, 
		CJTPR_NOMBRE, 
		CJTPR_DESCRIPCION, 
		CJTPR_ESTADO, 		
		CJTPR_TIPO
	FROM SII.CGG_JUR_TIPO_PROCESO
	WHERE CJTPR_ESTADO = TRUE AND 
		CJTPR_CODIGO = IN_CJTPR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_TIPO_PROCESO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_JUR_TIPO_PROCESO.
* @param IN_CJTPR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE PROCESO DE CONTRATACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_TIPO_PROCESO_DELETE(
IN IN_CJTPR_CODIGO SII.CGG_JUR_TIPO_PROCESO.CJTPR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_JUR_TIPO_PROCESO
	WHERE
		CJTPR_CODIGO = IN_CJTPR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_TIPO_PROCESO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_JUR_TIPO_PROCESO.
* @param IN_CJTPR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE PROCESO DE CONTRATACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_TIPO_PROCESO_DELETE_SOFT(
IN IN_CJTPR_CODIGO SII.CGG_JUR_TIPO_PROCESO.CJTPR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_JUR_TIPO_PROCESO SET
		CJTPR_ESTADO = FALSE
	WHERE
		CJTPR_CODIGO = IN_CJTPR_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

