/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_KDX_COMPRA_DETALLE.
* @param IN_CKCMD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA DETALLE
* @param IN_CKCMP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA
* @param IN_CKESP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ESPECIES
* @param IN_CKCMD_SERIE_INICIO SERIE DE INICIO DE LAS ESPECIES
* @param IN_CKCMD_SERIE_FIN SERIE DE FIN DE LAS ESPECIES
* @param IN_CKCMD_CANTIDAD CANTIDAD DE ESPECIES
* @param IN_CKCMD_PRECIO_UNITARIO PRECIO UNITARIO DE LA ESPECIE
* @param IN_CKCMD_TOTAL TOTAL DE LA COMPRA
* @param IN_CKCMD_ESTADO ESTADO DEL REGISTRO
* @param IN_CKCMD_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CKCMD_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_INSERT(
IN IN_CKCMD_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_CODIGO%TYPE,
IN IN_CKCMP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMP_CODIGO%TYPE,
IN IN_CKESP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKESP_CODIGO%TYPE,
IN IN_CKCMD_SERIE_INICIO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_SERIE_INICIO%TYPE,
IN IN_CKCMD_SERIE_FIN SII.CGG_KDX_COMPRA_DETALLE.CKCMD_SERIE_FIN%TYPE,
IN IN_CKCMD_CANTIDAD SII.CGG_KDX_COMPRA_DETALLE.CKCMD_CANTIDAD%TYPE,
IN IN_CKCMD_PRECIO_UNITARIO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_PRECIO_UNITARIO%TYPE,
IN IN_CKCMD_TOTAL SII.CGG_KDX_COMPRA_DETALLE.CKCMD_TOTAL%TYPE,
IN IN_CKCMD_ESTADO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_ESTADO%TYPE,
IN IN_CKCMD_USUARIO_INSERT SII.CGG_KDX_COMPRA_DETALLE.CKCMD_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CKCMD_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_KDX_COMPRA_DETALLE','CKCMD_CODIGO','CKCMD') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CKCMD_CODIGO;
	END IF;
	INSERT INTO SII.CGG_KDX_COMPRA_DETALLE(
		CKCMD_CODIGO, 
		CKCMP_CODIGO, 
		CKESP_CODIGO, 
		CKCMD_SERIE_INICIO, 
		CKCMD_SERIE_FIN, 
		CKCMD_CANTIDAD, 
		CKCMD_PRECIO_UNITARIO, 
		CKCMD_TOTAL, 
		CKCMD_ESTADO, 
		CKCMD_FECHA_INSERT, 
		CKCMD_USUARIO_INSERT, 
		CKCMD_FECHA_UPDATE, 
		CKCMD_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CKCMP_CODIGO, 
		IN_CKESP_CODIGO, 
		IN_CKCMD_SERIE_INICIO, 
		IN_CKCMD_SERIE_FIN, 
		IN_CKCMD_CANTIDAD, 
		IN_CKCMD_PRECIO_UNITARIO, 
		IN_CKCMD_TOTAL, 
		IN_CKCMD_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CKCMD_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CKCMD_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKCMD_CODIGO, 
		CKCMP_CODIGO, 
		CKESP_CODIGO, 
		CKCMD_SERIE_INICIO, 
		CKCMD_SERIE_FIN, 
		CKCMD_CANTIDAD, 
		CKCMD_PRECIO_UNITARIO, 
		CKCMD_TOTAL, 
		CKCMD_ESTADO, 
		CKCMD_FECHA_INSERT, 
		CKCMD_USUARIO_INSERT, 
		CKCMD_FECHA_UPDATE, 
		CKCMD_USUARIO_UPDATE
	FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE CKCMD_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CKCMD_CODIGO, 
		CKCMP_CODIGO, 
		CKESP_CODIGO, 
		CKCMD_SERIE_INICIO, 
		CKCMD_SERIE_FIN, 
		CKCMD_CANTIDAD, 
		CKCMD_PRECIO_UNITARIO, 
		CKCMD_TOTAL, 
		CKCMD_ESTADO, 
		CKCMD_FECHA_INSERT, 
		CKCMD_USUARIO_INSERT, 
		CKCMD_FECHA_UPDATE, 
		CKCMD_USUARIO_UPDATE
	FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE CKCMD_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CKCMD_SERIE_INICIO, 0)||'' ''||COALESCE(CKCMD_SERIE_FIN, 0)||'' ''||COALESCE(CKCMD_CANTIDAD, 0)||'' ''||COALESCE(CKCMD_PRECIO_UNITARIO, 0)||'' ''||COALESCE(CKCMD_TOTAL, 0)||'' ''||COALESCE(CKCMD_ESTADO, FALSE)||'' ''||COALESCE(CKCMD_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKCMD_USUARIO_INSERT, '''')||'' ''||COALESCE(CKCMD_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKCMD_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE CKCMD_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE CKCMD_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CKCMD_SERIE_INICIO, 0)||' '||COALESCE(CKCMD_SERIE_FIN, 0)||' '||COALESCE(CKCMD_CANTIDAD, 0)||' '||COALESCE(CKCMD_PRECIO_UNITARIO, 0)||' '||COALESCE(CKCMD_TOTAL, 0)||' '||COALESCE(CKCMD_ESTADO, FALSE)||' '||COALESCE(CKCMD_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CKCMD_USUARIO_INSERT, '''')||' '||COALESCE(CKCMD_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CKCMD_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_KDX_COMPRA_DETALLE.
* @param IN_CKCMD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA DETALLE
* @param IN_CKCMP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA
* @param IN_CKESP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ESPECIES
* @param IN_CKCMD_SERIE_INICIO SERIE DE INICIO DE LAS ESPECIES
* @param IN_CKCMD_SERIE_FIN SERIE DE FIN DE LAS ESPECIES
* @param IN_CKCMD_CANTIDAD CANTIDAD DE ESPECIES
* @param IN_CKCMD_PRECIO_UNITARIO PRECIO UNITARIO DE LA ESPECIE
* @param IN_CKCMD_TOTAL TOTAL DE LA COMPRA
* @param IN_CKCMD_ESTADO ESTADO DEL REGISTRO
* @param IN_CKCMD_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_UPDATE(
IN IN_CKCMD_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_CODIGO%TYPE,
IN IN_CKCMP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMP_CODIGO%TYPE,
IN IN_CKESP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKESP_CODIGO%TYPE,
IN IN_CKCMD_SERIE_INICIO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_SERIE_INICIO%TYPE,
IN IN_CKCMD_SERIE_FIN SII.CGG_KDX_COMPRA_DETALLE.CKCMD_SERIE_FIN%TYPE,
IN IN_CKCMD_CANTIDAD SII.CGG_KDX_COMPRA_DETALLE.CKCMD_CANTIDAD%TYPE,
IN IN_CKCMD_PRECIO_UNITARIO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_PRECIO_UNITARIO%TYPE,
IN IN_CKCMD_TOTAL SII.CGG_KDX_COMPRA_DETALLE.CKCMD_TOTAL%TYPE,
IN IN_CKCMD_ESTADO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_ESTADO%TYPE,
IN IN_CKCMD_USUARIO_UPDATE SII.CGG_KDX_COMPRA_DETALLE.CKCMD_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_KDX_COMPRA_DETALLE SET
		CKCMP_CODIGO = IN_CKCMP_CODIGO, 
		CKESP_CODIGO = IN_CKESP_CODIGO, 
		CKCMD_SERIE_INICIO = IN_CKCMD_SERIE_INICIO, 
		CKCMD_SERIE_FIN = IN_CKCMD_SERIE_FIN, 
		CKCMD_CANTIDAD = IN_CKCMD_CANTIDAD, 
		CKCMD_PRECIO_UNITARIO = IN_CKCMD_PRECIO_UNITARIO, 
		CKCMD_TOTAL = IN_CKCMD_TOTAL, 
		CKCMD_ESTADO = IN_CKCMD_ESTADO, 
		CKCMD_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CKCMD_USUARIO_UPDATE = IN_CKCMD_USUARIO_UPDATE
	WHERE
		CKCMD_CODIGO = IN_CKCMD_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_KDX_COMPRA_DETALLE.
* @param IN_CKCMD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA DETALLE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_SELECT(
IN IN_CKCMD_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKCMD_CODIGO, 
		CKCMP_CODIGO, 
		CKESP_CODIGO, 
		CKCMD_SERIE_INICIO, 
		CKCMD_SERIE_FIN, 
		CKCMD_CANTIDAD, 
		CKCMD_PRECIO_UNITARIO, 
		CKCMD_TOTAL, 
		CKCMD_ESTADO, 
		CKCMD_FECHA_INSERT, 
		CKCMD_USUARIO_INSERT, 
		CKCMD_FECHA_UPDATE, 
		CKCMD_USUARIO_UPDATE
	FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE CKCMD_ESTADO = TRUE AND 
		CKCMD_CODIGO = IN_CKCMD_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_KDX_COMPRA_DETALLE.
* @param IN_CKCMD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA DETALLE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_DELETE(
IN IN_CKCMD_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE
		CKCMD_CODIGO = IN_CKCMD_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_KDX_COMPRA_DETALLE.
* @param IN_CKCMD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA DETALLE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_DELETE_SOFT(
IN IN_CKCMD_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMD_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_KDX_COMPRA_DETALLE SET
		CKCMD_ESTADO = FALSE
	WHERE
		CKCMD_CODIGO = IN_CKCMD_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_S_CGG_KDX_ESPECIE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_ESPECIE.
* @param IN_CKESP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ESPECIES
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_S_CGG_KDX_ESPECIE(
IN IN_CKESP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKESP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKCMD_CODIGO, 
		CKCMP_CODIGO, 
		CKESP_CODIGO, 
		CKCMD_SERIE_INICIO, 
		CKCMD_SERIE_FIN, 
		CKCMD_CANTIDAD, 
		CKCMD_PRECIO_UNITARIO, 
		CKCMD_TOTAL, 
		CKCMD_ESTADO, 
		CKCMD_FECHA_INSERT, 
		CKCMD_USUARIO_INSERT, 
		CKCMD_FECHA_UPDATE, 
		CKCMD_USUARIO_UPDATE
	FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE CKCMD_ESTADO = TRUE AND 
		CKESP_CODIGO = IN_CKESP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_D_CGG_KDX_ESPECIE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_ESPECIE.
* @param IN_CKESP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ESPECIES
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_D_CGG_KDX_ESPECIE(
IN IN_CKESP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKESP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE
		CKESP_CODIGO = IN_CKESP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_D_CGG_KDX_ESPECIE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_ESPECIE.
* @param IN_CKESP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ESPECIES
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_DS_CGG_KDX_ESPECIE(
IN IN_CKESP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKESP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_KDX_COMPRA_DETALLE SET
		ckcmd_estado = false
	WHERE
		CKESP_CODIGO = IN_CKESP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_S_CGG_KDX_COMPRA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_COMPRA.
* @param IN_CKCMP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_S_CGG_KDX_COMPRA(
IN IN_CKCMP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKCMD_CODIGO, 
		CKCMP_CODIGO, 
		CKESP_CODIGO, 
		CKCMD_SERIE_INICIO, 
		CKCMD_SERIE_FIN, 
		CKCMD_CANTIDAD, 
		CKCMD_PRECIO_UNITARIO, 
		CKCMD_TOTAL, 
		CKCMD_ESTADO, 
		CKCMD_FECHA_INSERT, 
		CKCMD_USUARIO_INSERT, 
		CKCMD_FECHA_UPDATE, 
		CKCMD_USUARIO_UPDATE
	FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE CKCMD_ESTADO = TRUE AND 
		CKCMP_CODIGO = IN_CKCMP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_D_CGG_KDX_COMPRA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_COMPRA.
* @param IN_CKCMP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_D_CGG_KDX_COMPRA(
IN IN_CKCMP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_KDX_COMPRA_DETALLE
	WHERE
		CKCMP_CODIGO = IN_CKCMP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_COMPRA_DETALLE_D_CGG_KDX_COMPRA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_COMPRA_DETALLE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_COMPRA.
* @param IN_CKCMP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE COMPRA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_COMPRA_DETALLE_DS_CGG_KDX_COMPRA(
IN IN_CKCMP_CODIGO SII.CGG_KDX_COMPRA_DETALLE.CKCMP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_KDX_COMPRA_DETALLE SET
		ckcmd_estado = false
	WHERE
		CKCMP_CODIGO = IN_CKCMP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

