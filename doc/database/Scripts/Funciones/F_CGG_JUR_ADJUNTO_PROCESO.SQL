/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO.
* @param IN_CJADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ADJUNTO DE HISTORIAL DE PROCESO
* @param IN_CJPJU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO JUDICIAL
* @param IN_CJADP_DESCRIPCION DESCRIP`CION DEL ARCHIVO ADJUNTO
* @param IN_CJHTP_FECHA_REGISTRO FECHA DE REGISTRO DEL ADJUNTO
* @param IN_CJADP_NOMBRE_ADJUNTO NOMBRE DEL ADJUNTO
* @param IN_CJADP_ADJUNTO ARCHIVO DIGITAL 
* @param IN_CJADP_ESTADO ESTADO DEL REGISTRO
* @param IN_CJADP_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CJADP_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @param IN_CJHTP_CODIGO IDENTIFICATIVO DEL LA TABLA HISTORIAL PROCESO
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_INSERT(
IN IN_CJADP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_CODIGO%TYPE,
IN IN_CJPJU_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJPJU_CODIGO%TYPE,
IN IN_CJADP_DESCRIPCION SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_DESCRIPCION%TYPE,
IN IN_CJHTP_FECHA_REGISTRO SII.CGG_JUR_ADJUNTO_PROCESO.CJHTP_FECHA_REGISTRO%TYPE,
IN IN_CJADP_NOMBRE_ADJUNTO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_NOMBRE_ADJUNTO%TYPE,
IN IN_CJADP_ADJUNTO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_ADJUNTO%TYPE,
IN IN_CJADP_ESTADO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_ESTADO%TYPE,
IN IN_CJADP_USUARIO_INSERT SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_USUARIO_INSERT%TYPE,
IN IN_CJHTP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJHTP_CODIGO%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CJADP_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_JUR_ADJUNTO_PROCESO','CJADP_CODIGO','CJADP') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CJADP_CODIGO;
	END IF;
	INSERT INTO SII.CGG_JUR_ADJUNTO_PROCESO(
		CJADP_CODIGO, 
		CJPJU_CODIGO, 
		CJADP_DESCRIPCION, 
		CJHTP_FECHA_REGISTRO, 
		CJADP_NOMBRE_ADJUNTO, 
		CJADP_ADJUNTO, 
		CJADP_ESTADO, 
		CJADP_FECHA_INSERT, 
		CJADP_USUARIO_INSERT, 
		CJADP_FECHA_UPDATE, 
		CJADP_USUARIO_UPDATE, 
		CJHTP_CODIGO
	) VALUES (
		OUT_KEY, 
		IN_CJPJU_CODIGO, 
		IN_CJADP_DESCRIPCION, 
		IN_CJHTP_FECHA_REGISTRO, 
		IN_CJADP_NOMBRE_ADJUNTO, 
		IN_CJADP_ADJUNTO, 
		IN_CJADP_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CJADP_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CJADP_USUARIO_INSERT, 
		IN_CJHTP_CODIGO
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CJADP_CODIGO, 
		CJPJU_CODIGO, 
		CJADP_DESCRIPCION, 
		CJHTP_FECHA_REGISTRO, 
		CJADP_NOMBRE_ADJUNTO, 
		CJADP_ADJUNTO, 
		CJADP_ESTADO, 
		CJADP_FECHA_INSERT, 
		CJADP_USUARIO_INSERT, 
		CJADP_FECHA_UPDATE, 
		CJADP_USUARIO_UPDATE, 
		CJHTP_CODIGO
	FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE CJADP_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CJADP_CODIGO, 
		CJPJU_CODIGO, 
		CJADP_DESCRIPCION, 
		CJHTP_FECHA_REGISTRO, 
		CJADP_NOMBRE_ADJUNTO, 
		CJADP_ADJUNTO, 
		CJADP_ESTADO, 
		CJADP_FECHA_INSERT, 
		CJADP_USUARIO_INSERT, 
		CJADP_FECHA_UPDATE, 
		CJADP_USUARIO_UPDATE, 
		CJHTP_CODIGO
	FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE CJADP_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CJADP_DESCRIPCION, '''')||'' ''||COALESCE(CJHTP_FECHA_REGISTRO, CURRENT_TIMESTAMP)||'' ''||COALESCE(CJADP_NOMBRE_ADJUNTO, '''')||'' ''||COALESCE(CJADP_ESTADO, FALSE)||'' ''||COALESCE(CJADP_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CJADP_USUARIO_INSERT, '''')||'' ''||COALESCE(CJADP_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CJADP_USUARIO_UPDATE, '''')||'' ''||) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE CJADP_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE CJADP_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CJADP_DESCRIPCION, '''')||' '||COALESCE(CJHTP_FECHA_REGISTRO, CURRENT_TIMESTAMP)||' '||COALESCE(CJADP_NOMBRE_ADJUNTO, '''')||' '||COALESCE(CJADP_ESTADO, FALSE)||' '||COALESCE(CJADP_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CJADP_USUARIO_INSERT, '''')||' '||COALESCE(CJADP_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CJADP_USUARIO_UPDATE, '''')||' '||) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_JUR_ADJUNTO_PROCESO.
* @param IN_CJADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ADJUNTO DE HISTORIAL DE PROCESO
* @param IN_CJPJU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO JUDICIAL
* @param IN_CJADP_DESCRIPCION DESCRIP`CION DEL ARCHIVO ADJUNTO
* @param IN_CJHTP_FECHA_REGISTRO FECHA DE REGISTRO DEL ADJUNTO
* @param IN_CJADP_NOMBRE_ADJUNTO NOMBRE DEL ADJUNTO
* @param IN_CJADP_ADJUNTO ARCHIVO DIGITAL 
* @param IN_CJADP_ESTADO ESTADO DEL REGISTRO
* @param IN_CJADP_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @param IN_CJHTP_CODIGO IDENTIFICATIVO DEL LA TABLA HISTORIAL PROCESO

* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_UPDATE(
IN IN_CJADP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_CODIGO%TYPE,
IN IN_CJPJU_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJPJU_CODIGO%TYPE,
IN IN_CJADP_DESCRIPCION SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_DESCRIPCION%TYPE,
IN IN_CJHTP_FECHA_REGISTRO SII.CGG_JUR_ADJUNTO_PROCESO.CJHTP_FECHA_REGISTRO%TYPE,
IN IN_CJADP_NOMBRE_ADJUNTO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_NOMBRE_ADJUNTO%TYPE,
IN IN_CJADP_ADJUNTO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_ADJUNTO%TYPE,
IN IN_CJADP_ESTADO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_ESTADO%TYPE,
IN IN_CJADP_USUARIO_UPDATE SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_USUARIO_UPDATE%TYPE,
IN IN_CJHTP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJHTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_JUR_ADJUNTO_PROCESO SET
		CJPJU_CODIGO = IN_CJPJU_CODIGO, 
		CJADP_DESCRIPCION = IN_CJADP_DESCRIPCION, 
		CJHTP_FECHA_REGISTRO = IN_CJHTP_FECHA_REGISTRO, 
		CJADP_NOMBRE_ADJUNTO = IN_CJADP_NOMBRE_ADJUNTO, 
		CJADP_ADJUNTO = IN_CJADP_ADJUNTO, 
		CJADP_ESTADO = IN_CJADP_ESTADO, 
		CJADP_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CJADP_USUARIO_UPDATE = IN_CJADP_USUARIO_UPDATE, 
		CJHTP_CODIGO = IN_CJHTP_CODIGO
	WHERE
		CJADP_CODIGO = IN_CJADP_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO.
* @param IN_CJADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ADJUNTO DE HISTORIAL DE PROCESO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_SELECT(
IN IN_CJADP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CJADP_CODIGO, 
		CJPJU_CODIGO, 
		CJADP_DESCRIPCION, 
		CJHTP_FECHA_REGISTRO, 
		CJADP_NOMBRE_ADJUNTO, 
		CJADP_ADJUNTO, 
		CJADP_ESTADO, 
		CJADP_FECHA_INSERT, 
		CJADP_USUARIO_INSERT, 
		CJADP_FECHA_UPDATE, 
		CJADP_USUARIO_UPDATE, 
		CJHTP_CODIGO
	FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE CJADP_ESTADO = TRUE AND 
		CJADP_CODIGO = IN_CJADP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO.
* @param IN_CJADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ADJUNTO DE HISTORIAL DE PROCESO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_DELETE(
IN IN_CJADP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE
		CJADP_CODIGO = IN_CJADP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO.
* @param IN_CJADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ADJUNTO DE HISTORIAL DE PROCESO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_DELETE_SOFT(
IN IN_CJADP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJADP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_JUR_ADJUNTO_PROCESO SET
		CJADP_ESTADO = FALSE
	WHERE
		CJADP_CODIGO = IN_CJADP_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_S_CGG_JUR_HISTORIAL_PROCESO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_JUR_HISTORIAL_PROCESO.
* @param IN_CJHTP_CODIGO IDENTIFICATIVO DEL LA TABLA HISTORIAL PROCESO

* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_S_CGG_JUR_HISTORIAL_PROCESO(
IN IN_CJHTP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJHTP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CJADP_CODIGO, 
		CJPJU_CODIGO, 
		CJADP_DESCRIPCION, 
		CJHTP_FECHA_REGISTRO, 
		CJADP_NOMBRE_ADJUNTO, 
		CJADP_ADJUNTO, 
		CJADP_ESTADO, 
		CJADP_FECHA_INSERT, 
		CJADP_USUARIO_INSERT, 
		CJADP_FECHA_UPDATE, 
		CJADP_USUARIO_UPDATE, 
		CJHTP_CODIGO
	FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE CJADP_ESTADO = TRUE AND 
		CJHTP_CODIGO = IN_CJHTP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_D_CGG_JUR_HISTORIAL_PROCESO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_JUR_HISTORIAL_PROCESO.
* @param IN_CJHTP_CODIGO IDENTIFICATIVO DEL LA TABLA HISTORIAL PROCESO

* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_D_CGG_JUR_HISTORIAL_PROCESO(
IN IN_CJHTP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJHTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE
		CJHTP_CODIGO = IN_CJHTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_D_CGG_JUR_HISTORIAL_PROCESO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_JUR_HISTORIAL_PROCESO.
* @param IN_CJHTP_CODIGO IDENTIFICATIVO DEL LA TABLA HISTORIAL PROCESO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_DS_CGG_JUR_HISTORIAL_PROCESO(
IN IN_CJHTP_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJHTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_JUR_ADJUNTO_PROCESO SET
		cjadp_estado = false
	WHERE
		CJHTP_CODIGO = IN_CJHTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_S_CGG_JUR_PROCESO_JUDICIAL
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_JUR_PROCESO_JUDICIAL.
* @param IN_CJPJU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO JUDICIAL
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_S_CGG_JUR_PROCESO_JUDICIAL(
IN IN_CJPJU_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJPJU_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CJADP_CODIGO, 
		CJPJU_CODIGO, 
		CJADP_DESCRIPCION, 
		CJHTP_FECHA_REGISTRO, 
		CJADP_NOMBRE_ADJUNTO, 
		CJADP_ADJUNTO, 
		CJADP_ESTADO, 
		CJADP_FECHA_INSERT, 
		CJADP_USUARIO_INSERT, 
		CJADP_FECHA_UPDATE, 
		CJADP_USUARIO_UPDATE, 
		CJHTP_CODIGO
	FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE CJADP_ESTADO = TRUE AND 
		CJPJU_CODIGO = IN_CJPJU_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_D_CGG_JUR_PROCESO_JUDICIAL
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_JUR_PROCESO_JUDICIAL.
* @param IN_CJPJU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO JUDICIAL
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_D_CGG_JUR_PROCESO_JUDICIAL(
IN IN_CJPJU_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJPJU_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_JUR_ADJUNTO_PROCESO
	WHERE
		CJPJU_CODIGO = IN_CJPJU_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_ADJUNTO_PROCESO_D_CGG_JUR_PROCESO_JUDICIAL
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_JUR_ADJUNTO_PROCESO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_JUR_PROCESO_JUDICIAL.
* @param IN_CJPJU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PROCESO JUDICIAL
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_ADJUNTO_PROCESO_DS_CGG_JUR_PROCESO_JUDICIAL(
IN IN_CJPJU_CODIGO SII.CGG_JUR_ADJUNTO_PROCESO.CJPJU_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_JUR_ADJUNTO_PROCESO SET
		cjadp_estado = false
	WHERE
		CJPJU_CODIGO = IN_CJPJU_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

