/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_DHU_CATEGORIA.
* @param IN_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @param IN_CGG_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @param IN_CDCAT_NOMBRE NOMBRE DE LA CATEGORIA
* @param IN_CDCAT_ESTADO ESTADO DEL REGISTRO
* @param IN_CDCAT_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CDCAT_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_INSERT(
IN IN_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CDCAT_CODIGO%TYPE,
IN IN_CGG_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CGG_CDCAT_CODIGO%TYPE,
IN IN_CDCAT_NOMBRE SII.CGG_DHU_CATEGORIA.CDCAT_NOMBRE%TYPE,
IN IN_CDCAT_ESTADO SII.CGG_DHU_CATEGORIA.CDCAT_ESTADO%TYPE,
IN IN_CDCAT_USUARIO_INSERT SII.CGG_DHU_CATEGORIA.CDCAT_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CDCAT_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_DHU_CATEGORIA','CDCAT_CODIGO','CDCAT') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CDCAT_CODIGO;
	END IF;
	INSERT INTO SII.CGG_DHU_CATEGORIA(
		CDCAT_CODIGO, 
		CGG_CDCAT_CODIGO, 
		CDCAT_NOMBRE, 
		CDCAT_ESTADO, 
		CDCAT_FECHA_INSERT, 
		CDCAT_USUARIO_INSERT, 
		CDCAT_FECHA_UPDATE, 
		CDCAT_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CGG_CDCAT_CODIGO, 
		IN_CDCAT_NOMBRE, 
		IN_CDCAT_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CDCAT_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CDCAT_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_DHU_CATEGORIA.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCAT_CODIGO, 
		CGG_CDCAT_CODIGO, 
		CDCAT_NOMBRE, 
		CDCAT_ESTADO, 
		CDCAT_FECHA_INSERT, 
		CDCAT_USUARIO_INSERT, 
		CDCAT_FECHA_UPDATE, 
		CDCAT_USUARIO_UPDATE
	FROM SII.CGG_DHU_CATEGORIA
	WHERE CDCAT_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_DHU_CATEGORIA.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO.
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CTG.CDCAT_CODIGO, 
		CTG.CGG_CDCAT_CODIGO, 
		(SELECT CDCAT_NOMBRE FROM CGG_DHU_CATEGORIA CT WHERE CT.CDCAT_CODIGO = CTG.CGG_CDCAT_CODIGO) SUB_CATEGORIA,
		CTG.CDCAT_NOMBRE, 
		CTG.CDCAT_ESTADO, 
		CTG.CDCAT_FECHA_INSERT, 
		CTG.CDCAT_USUARIO_INSERT, 
		CTG.CDCAT_FECHA_UPDATE, 
		CTG.CDCAT_USUARIO_UPDATE
	FROM SII.CGG_DHU_CATEGORIA CTG
	WHERE CDCAT_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CDCAT_NOMBRE, '''')||'' ''||COALESCE(CDCAT_ESTADO, FALSE)||'' ''||COALESCE(CDCAT_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CDCAT_USUARIO_INSERT, '''')||'' ''||COALESCE(CDCAT_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CDCAT_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_CATEGORIA.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_CATEGORIA
	WHERE CDCAT_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_CATEGORIA.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_CATEGORIA
	WHERE CDCAT_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CDCAT_NOMBRE, '''')||' '||COALESCE(CDCAT_ESTADO, FALSE)||' '||COALESCE(CDCAT_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CDCAT_USUARIO_INSERT, '''')||' '||COALESCE(CDCAT_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CDCAT_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_DHU_CATEGORIA.
* @param IN_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @param IN_CGG_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @param IN_CDCAT_NOMBRE NOMBRE DE LA CATEGORIA
* @param IN_CDCAT_ESTADO ESTADO DEL REGISTRO
* @param IN_CDCAT_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_UPDATE(
IN IN_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CDCAT_CODIGO%TYPE,
IN IN_CGG_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CGG_CDCAT_CODIGO%TYPE,
IN IN_CDCAT_NOMBRE SII.CGG_DHU_CATEGORIA.CDCAT_NOMBRE%TYPE,
IN IN_CDCAT_ESTADO SII.CGG_DHU_CATEGORIA.CDCAT_ESTADO%TYPE,
IN IN_CDCAT_USUARIO_UPDATE SII.CGG_DHU_CATEGORIA.CDCAT_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CATEGORIA SET
		CGG_CDCAT_CODIGO = IN_CGG_CDCAT_CODIGO, 
		CDCAT_NOMBRE = IN_CDCAT_NOMBRE, 
		CDCAT_ESTADO = IN_CDCAT_ESTADO, 
		CDCAT_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CDCAT_USUARIO_UPDATE = IN_CDCAT_USUARIO_UPDATE
	WHERE
		CDCAT_CODIGO = IN_CDCAT_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_DHU_CATEGORIA.
* @param IN_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_SELECT(
IN IN_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CDCAT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCAT_CODIGO, 
		CGG_CDCAT_CODIGO, 
		CDCAT_NOMBRE, 
		CDCAT_ESTADO, 
		CDCAT_FECHA_INSERT, 
		CDCAT_USUARIO_INSERT, 
		CDCAT_FECHA_UPDATE, 
		CDCAT_USUARIO_UPDATE
	FROM SII.CGG_DHU_CATEGORIA
	WHERE CDCAT_ESTADO = TRUE AND 
		CDCAT_CODIGO = IN_CDCAT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_DHU_CATEGORIA.
* @param IN_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_DELETE(
IN IN_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CDCAT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_CATEGORIA
	WHERE
		CDCAT_CODIGO = IN_CDCAT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_DHU_CATEGORIA.
* @param IN_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_DELETE_SOFT(
IN IN_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CDCAT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CATEGORIA SET
		CDCAT_ESTADO = FALSE
	WHERE
		CDCAT_CODIGO = IN_CDCAT_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_S_CGG_DHU_CATEGORIA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CATEGORIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CATEGORIA.
* @param IN_CGG_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_S_CGG_DHU_CATEGORIA(
IN IN_CGG_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CGG_CDCAT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCAT_CODIGO, 
		CGG_CDCAT_CODIGO, 
		CDCAT_NOMBRE, 
		CDCAT_ESTADO, 
		CDCAT_FECHA_INSERT, 
		CDCAT_USUARIO_INSERT, 
		CDCAT_FECHA_UPDATE, 
		CDCAT_USUARIO_UPDATE
	FROM SII.CGG_DHU_CATEGORIA
	WHERE CDCAT_ESTADO = TRUE AND 
		CGG_CDCAT_CODIGO = IN_CGG_CDCAT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_D_CGG_DHU_CATEGORIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CATEGORIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CATEGORIA.
* @param IN_CGG_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_D_CGG_DHU_CATEGORIA(
IN IN_CGG_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CGG_CDCAT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_CATEGORIA
	WHERE
		CGG_CDCAT_CODIGO = IN_CGG_CDCAT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CATEGORIA_D_CGG_DHU_CATEGORIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CATEGORIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CATEGORIA.
* @param IN_CGG_CDCAT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA CATEGORIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CATEGORIA_DS_CGG_DHU_CATEGORIA(
IN IN_CGG_CDCAT_CODIGO SII.CGG_DHU_CATEGORIA.CGG_CDCAT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CATEGORIA SET
		cdcat_estado = false
	WHERE
		CGG_CDCAT_CODIGO = IN_CGG_CDCAT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

