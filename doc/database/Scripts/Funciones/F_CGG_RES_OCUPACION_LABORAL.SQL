/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_OCUPACION_LABORAL
* @param IN_CROCL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OCUPACION LABORAL
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE TIENE UNA OCUPACION LABORAL
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE ACTUA COMO EMPLEADOR
* @param IN_CGCRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CARGO
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA 
* @param IN_CROCL_TIPO TIPO DE OCUPACION LABORAL
0 -  PUBLICA
1 - PRIVADA
2 - PROPIA
3 - OTROS
* @param IN_CROCL_ESTADO ESTADO DEL REGISTRO
* @param IN_CROCL_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CROCL_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_INSERT(
IN IN_CROCL_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CROCL_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPER_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGG_CRPER_CODIGO%TYPE, 
IN IN_CGCRG_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGCRG_CODIGO%TYPE, 
IN IN_CSCTP_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CSCTP_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPJR_CODIGO%TYPE, 
IN IN_CROCL_TIPO SII.CGG_RES_OCUPACION_LABORAL.CROCL_TIPO%TYPE, 
IN IN_CROCL_ESTADO SII.CGG_RES_OCUPACION_LABORAL.CROCL_ESTADO%TYPE, 
IN IN_CROCL_USUARIO_INSERT SII.CGG_RES_OCUPACION_LABORAL.CROCL_USUARIO_INSERT%TYPE, 
IN IN_CROCL_USUARIO_UPDATE SII.CGG_RES_OCUPACION_LABORAL.CROCL_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CROCL_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_OCUPACION_LABORAL','CROCL_CODIGO','CROCL') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CROCL_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_OCUPACION_LABORAL(
		CROCL_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO, 
		CGCRG_CODIGO, 
		CSCTP_CODIGO, 
		CRPJR_CODIGO, 
		CROCL_TIPO, 
		CROCL_ESTADO, 
		CROCL_FECHA_INSERT, 
		CROCL_USUARIO_INSERT, 
		CROCL_FECHA_UPDATE, 
		CROCL_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRPER_CODIGO, 
		IN_CGG_CRPER_CODIGO, 
		IN_CGCRG_CODIGO, 
		IN_CSCTP_CODIGO, 
		IN_CRPJR_CODIGO, 
		IN_CROCL_TIPO, 
		IN_CROCL_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CROCL_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CROCL_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_SELECT_AS(
IN IN_USER_NAME varchar(50)
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CROCL_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO, 
		CGCRG_CODIGO, 
		CSCTP_CODIGO, 
		CRPJR_CODIGO, 
		CROCL_TIPO, 
		CROCL_ESTADO, 
		CROCL_FECHA_INSERT, 
		CROCL_USUARIO_INSERT, 
		CROCL_FECHA_UPDATE, 
		CROCL_USUARIO_UPDATE
	FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE CROCL_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/*
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL__SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_SELECT(
IN IN_USER_NAME varchar(50),
IN IN_START_INDEX int,
IN IN_LIMIT int,
IN IN_SORT_FIELD_NAME varchar,
IN IN_DIRECTION varchar,
IN IN_FIND_TEXT text
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CROCL_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO, 
		CGCRG_CODIGO, 
		CSCTP_CODIGO, 
		CRPJR_CODIGO, 
		CROCL_TIPO, 
		CROCL_ESTADO, 
		CROCL_FECHA_INSERT, 
		CROCL_USUARIO_INSERT, 
		CROCL_FECHA_UPDATE, 
		CROCL_USUARIO_UPDATE
	FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE CROCL_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',CASE WHEN CROCL_CODIGO IS NULL THEN '''' ELSE CROCL_CODIGO END ||'' ''||CASE WHEN CRPER_CODIGO IS NULL THEN '''' ELSE CRPER_CODIGO END ||'' ''||CASE WHEN CGG_CRPER_CODIGO IS NULL THEN '''' ELSE CGG_CRPER_CODIGO END ||'' ''||CASE WHEN CGCRG_CODIGO IS NULL THEN '''' ELSE CGCRG_CODIGO END ||'' ''||CASE WHEN CSCTP_CODIGO IS NULL THEN '''' ELSE CSCTP_CODIGO END ||'' ''||CASE WHEN CRPJR_CODIGO IS NULL THEN '''' ELSE CRPJR_CODIGO END ||'' ''||CASE WHEN CROCL_TIPO IS NULL THEN 0 ELSE CROCL_TIPO END ||'' ''||CASE WHEN CROCL_ESTADO IS NULL THEN FALSE ELSE CROCL_ESTADO END ||'' ''||CASE WHEN CROCL_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CROCL_FECHA_INSERT END ||'' ''||CASE WHEN CROCL_USUARIO_INSERT IS NULL THEN '''' ELSE CROCL_USUARIO_INSERT END ||'' ''||CASE WHEN CROCL_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CROCL_FECHA_UPDATE END ||'' ''||CASE WHEN CROCL_USUARIO_UPDATE IS NULL THEN '''' ELSE CROCL_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE CROCL_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE CROCL_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,CASE WHEN CROCL_CODIGO IS NULL THEN '''' ELSE CROCL_CODIGO END ||' '||CASE WHEN CRPER_CODIGO IS NULL THEN '''' ELSE CRPER_CODIGO END ||' '||CASE WHEN CGG_CRPER_CODIGO IS NULL THEN '''' ELSE CGG_CRPER_CODIGO END ||' '||CASE WHEN CGCRG_CODIGO IS NULL THEN '''' ELSE CGCRG_CODIGO END ||' '||CASE WHEN CSCTP_CODIGO IS NULL THEN '''' ELSE CSCTP_CODIGO END ||' '||CASE WHEN CRPJR_CODIGO IS NULL THEN '''' ELSE CRPJR_CODIGO END ||' '||CASE WHEN CROCL_TIPO IS NULL THEN 0 ELSE CROCL_TIPO END ||' '||CASE WHEN CROCL_ESTADO IS NULL THEN FALSE ELSE CROCL_ESTADO END ||' '||CASE WHEN CROCL_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CROCL_FECHA_INSERT END ||' '||CASE WHEN CROCL_USUARIO_INSERT IS NULL THEN '''' ELSE CROCL_USUARIO_INSERT END ||' '||CASE WHEN CROCL_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CROCL_FECHA_UPDATE END ||' '||CASE WHEN CROCL_USUARIO_UPDATE IS NULL THEN '''' ELSE CROCL_USUARIO_UPDATE END ) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_OCUPACION_LABORAL
* @param IN_CROCL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OCUPACION LABORAL
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE TIENE UNA OCUPACION LABORAL
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE ACTUA COMO EMPLEADOR
* @param IN_CGCRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CARGO
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA 
* @param IN_CROCL_TIPO TIPO DE OCUPACION LABORAL
0 -  PUBLICA
1 - PRIVADA
2 - PROPIA
3 - OTROS
* @param IN_CROCL_ESTADO ESTADO DEL REGISTRO
* @param IN_CROCL_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_UPDATE(
IN IN_CROCL_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CROCL_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPER_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGG_CRPER_CODIGO%TYPE, 
IN IN_CGCRG_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGCRG_CODIGO%TYPE, 
IN IN_CSCTP_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CSCTP_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPJR_CODIGO%TYPE, 
IN IN_CROCL_TIPO SII.CGG_RES_OCUPACION_LABORAL.CROCL_TIPO%TYPE, 
IN IN_CROCL_ESTADO SII.CGG_RES_OCUPACION_LABORAL.CROCL_ESTADO%TYPE, 
IN IN_CROCL_USUARIO_UPDATE SII.CGG_RES_OCUPACION_LABORAL.CROCL_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_OCUPACION_LABORAL SET
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CGG_CRPER_CODIGO = IN_CGG_CRPER_CODIGO, 
		CGCRG_CODIGO = IN_CGCRG_CODIGO, 
		CSCTP_CODIGO = IN_CSCTP_CODIGO, 
		CRPJR_CODIGO = IN_CRPJR_CODIGO, 
		CROCL_TIPO = IN_CROCL_TIPO, 
		CROCL_ESTADO = IN_CROCL_ESTADO, 
		CROCL_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CROCL_USUARIO_UPDATE = IN_CROCL_USUARIO_UPDATE
	WHERE
		CROCL_CODIGO = IN_CROCL_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_OCUPACION_LABORAL
* @param IN_CROCL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OCUPACION LABORAL
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_SELECT(
IN IN_CROCL_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CROCL_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CROCL_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO, 
		CGCRG_CODIGO, 
		CSCTP_CODIGO, 
		CRPJR_CODIGO, 
		CROCL_TIPO, 
		CROCL_ESTADO, 
		CROCL_FECHA_INSERT, 
		CROCL_USUARIO_INSERT, 
		CROCL_FECHA_UPDATE, 
		CROCL_USUARIO_UPDATE
	FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE CROCL_ESTADO = TRUE AND 
		CROCL_CODIGO = IN_CROCL_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_OCUPACION_LABORAL
* @param IN_CROCL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OCUPACION LABORAL
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_DELETE(
IN IN_CROCL_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CROCL_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE
		CROCL_CODIGO = IN_CROCL_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_OCUPACION_LABORAL
* @param IN_CROCL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OCUPACION LABORAL
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_DELETE_SOFT(
IN IN_CROCL_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CROCL_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_OCUPACION_LABORAL SET
		CROCL_ESTADO = FALSE
	WHERE
		CROCL_CODIGO = IN_CROCL_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_S_CGG_RES_PERSONA_JURIDICA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA 
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_S_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPJR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CROCL_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO, 
		CGCRG_CODIGO, 
		CSCTP_CODIGO, 
		CRPJR_CODIGO, 
		CROCL_TIPO, 
		CROCL_ESTADO, 
		CROCL_FECHA_INSERT, 
		CROCL_USUARIO_INSERT, 
		CROCL_FECHA_UPDATE, 
		CROCL_USUARIO_UPDATE
	FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE CROCL_ESTADO = TRUE AND 
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA 
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA 
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_DS_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_OCUPACION_LABORAL SET
		crocl_estado = false
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_S_CGG_RES_PERSONA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE TIENE UNA OCUPACION LABORAL
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE ACTUA COMO EMPLEADOR
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_S_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPER_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGG_CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CROCL_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO, 
		CGCRG_CODIGO, 
		CSCTP_CODIGO, 
		CRPJR_CODIGO, 
		CROCL_TIPO, 
		CROCL_ESTADO, 
		CROCL_FECHA_INSERT, 
		CROCL_USUARIO_INSERT, 
		CROCL_FECHA_UPDATE, 
		CROCL_USUARIO_UPDATE
	FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE CROCL_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO AND 
		CGG_CRPER_CODIGO = IN_CGG_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE TIENE UNA OCUPACION LABORAL
* @param IN_CGG_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE ACTUA COMO EMPLEADOR
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPER_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGG_CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO AND 
		CGG_CRPER_CODIGO = IN_CGG_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE TIENE UNA OCUPACION LABORAL
* @param IN_CGG_CRPER_CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA QUE ACTUA COMO EMPLEADOR
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_DS_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPER_CODIGO%TYPE, 
IN IN_CGG_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGG_CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_OCUPACION_LABORAL SET
		crocl_estado = false
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO AND 
		CGG_CRPER_CODIGO = IN_CGG_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_S_CGG_GEM_CARGO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_GEM_CARGO.
* @param IN_CGCRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CARGO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_S_CGG_GEM_CARGO(
IN IN_CGCRG_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGCRG_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CROCL_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO, 
		CGCRG_CODIGO, 
		CSCTP_CODIGO, 
		CRPJR_CODIGO, 
		CROCL_TIPO, 
		CROCL_ESTADO, 
		CROCL_FECHA_INSERT, 
		CROCL_USUARIO_INSERT, 
		CROCL_FECHA_UPDATE, 
		CROCL_USUARIO_UPDATE
	FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE CROCL_ESTADO = TRUE AND 
		CGCRG_CODIGO = IN_CGCRG_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_GEM_CARGO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_GEM_CARGO.
* @param IN_CGCRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CARGO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_GEM_CARGO(
IN IN_CGCRG_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGCRG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE
		CGCRG_CODIGO = IN_CGCRG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_GEM_CARGO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_GEM_CARGO.
* @param IN_CGCRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CARGO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_DS_CGG_GEM_CARGO(
IN IN_CGCRG_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CGCRG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_OCUPACION_LABORAL SET
		crocl_estado = false
	WHERE
		CGCRG_CODIGO = IN_CGCRG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_S_CGG_SECTOR_PRODUCTIVO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_S_CGG_SECTOR_PRODUCTIVO(
IN IN_CSCTP_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CSCTP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CROCL_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO, 
		CGCRG_CODIGO, 
		CSCTP_CODIGO, 
		CRPJR_CODIGO, 
		CROCL_TIPO, 
		CROCL_ESTADO, 
		CROCL_FECHA_INSERT, 
		CROCL_USUARIO_INSERT, 
		CROCL_FECHA_UPDATE, 
		CROCL_USUARIO_UPDATE
	FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE CROCL_ESTADO = TRUE AND 
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_SECTOR_PRODUCTIVO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_SECTOR_PRODUCTIVO(
IN IN_CSCTP_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_OCUPACION_LABORAL
	WHERE
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_D_CGG_SECTOR_PRODUCTIVO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_OCUPACION_LABORAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_DS_CGG_SECTOR_PRODUCTIVO(
IN IN_CSCTP_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_OCUPACION_LABORAL SET
		crocl_estado = false
	WHERE
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_OCUPACION_LABORAL_PERSONA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_OCUPACION_LABORAL
* @param IN_CRPER_CODIGO IDENTIFICATIVO UNICO DE PERSONA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_OCUPACION_LABORAL_PERSONA_SELECT(
IN IN_CRPER_CODIGO SII.CGG_RES_OCUPACION_LABORAL.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CROCL_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO, 
		(SELECT CRPER_NOMBRES ||' '||CRPER_APELLIDO_PATERNO ||' '||CRPER_APELLIDO_MATERNO FROM CGG_RES_PERSONA WHERE CRPER_CODIGO = CGG_CRPER_CODIGO) CGG_CRPER_NOMBRES,
		CGCRG_CODIGO,
		(SELECT  CGCRG_NOMBRE FROM CGG_GEM_CARGO WHERE CGCRG_CODIGO = OLA.CGCRG_CODIGO)  CGCRG_NOMBRE,
		CSCTP_CODIGO, 
		(SELECT  CSCTP_NOMBRE FROM CGG_SECTOR_PRODUCTIVO WHERE CSCTP_CODIGO = OLA.CSCTP_CODIGO)  CSCTP_NOMBRE,
		CRPJR_CODIGO, 
		(SELECT  CRPJR_RAZON_SOCIAL FROM CGG_RES_PERSONA_JURIDICA WHERE CRPJR_CODIGO = OLA.CRPJR_CODIGO)  CRPJR_RAZON_SOCIAL,
		CROCL_TIPO
	FROM SII.CGG_RES_OCUPACION_LABORAL OLA
	WHERE CROCL_ESTADO = TRUE AND 
		CRPER_CODIGO =  IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
