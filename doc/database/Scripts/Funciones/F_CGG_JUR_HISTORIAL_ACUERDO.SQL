/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO.
* @param IN_CJHAC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL HISTORIAL DE ACUERDO
* @param IN_CJACU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ACUERDO DE CONTRATO O CONVENIO
* @param IN_CJHAC_DESCRIPCION DESCRIPCION DEL MOVIMIENTO DEL ACUERDO
* @param IN_CJHAC_RESPONSABLE NOMBRE DEL RESPONSABLE DE ESTE HISTORIAL DEL ACUERDO
* @param IN_CJHAC_FECHA FECHA DE REGISTRO DE OPERACION DEL ACUERDO
* @param IN_CJHAC_ESTADO ESTADO DEL REGISTRO DEL ACUERDO
* @param IN_CJHAC_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA DE HISTORIAL DE ACUERDO
* @param IN_CJHAC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION DE HISTORIAL DE ACUERDO
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_INSERT(
IN IN_CJHAC_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_CODIGO%TYPE,
IN IN_CJACU_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJACU_CODIGO%TYPE,
IN IN_CJHAC_DESCRIPCION SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_DESCRIPCION%TYPE,
IN IN_CJHAC_RESPONSABLE SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_RESPONSABLE%TYPE,
IN IN_CJHAC_FECHA SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_FECHA%TYPE,
IN IN_CJHAC_ESTADO SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_ESTADO%TYPE,
IN IN_CJHAC_USUARIO_INSERT SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CJHAC_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_JUR_HISTORIAL_ACUERDO','CJHAC_CODIGO','CJHAC') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CJHAC_CODIGO;
	END IF;
	INSERT INTO SII.CGG_JUR_HISTORIAL_ACUERDO(
		CJHAC_CODIGO, 
		CJACU_CODIGO, 
		CJHAC_DESCRIPCION, 
		CJHAC_RESPONSABLE, 
		CJHAC_FECHA, 
		CJHAC_ESTADO, 
		CJHAC_FECHA_INSERT, 
		CJHAC_USUARIO_INSERT, 
		CJHAC_FECHA_UPDATE, 
		CJHAC_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CJACU_CODIGO, 
		IN_CJHAC_DESCRIPCION, 
		IN_CJHAC_RESPONSABLE, 
		IN_CJHAC_FECHA, 
		IN_CJHAC_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CJHAC_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CJHAC_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CJHAC_CODIGO, 
		CJACU_CODIGO, 
		CJHAC_DESCRIPCION, 
		CJHAC_RESPONSABLE, 
		CJHAC_FECHA, 
		CJHAC_ESTADO, 
		CJHAC_FECHA_INSERT, 
		CJHAC_USUARIO_INSERT, 
		CJHAC_FECHA_UPDATE, 
		CJHAC_USUARIO_UPDATE
	FROM SII.CGG_JUR_HISTORIAL_ACUERDO
	WHERE CJHAC_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
	TMP_SQL TEXT;
BEGIN
	
	TMP_SQL :=
	'SELECT
		HA.CJHAC_CODIGO, 
		HA.CJACU_CODIGO, 		
		ACR.CRPJR_CODIGO,
		PJA.CRPJR_RAZON_SOCIAL,			
		ACR.CRPER_CODIGO, 
		(PER.CRPER_NOMBRES||'' ''||PER.CRPER_APELLIDO_PATERNO||'' ''||PER.CRPER_APELLIDO_MATERNO) PERSONA,				
		ACR.CJTPR_CODIGO, 
		TP.CJTPR_NOMBRE,	
		ACR.CJACU_ANIO, 
		ACR.CJACU_NUMERO, 
		ACR.CJACU_OBJETO, 
		ACR.CJACU_FECHA_SUSCRIPCION, 
		ACR.CJACU_FECHA_INICIO, 
		ACR.CJACU_RESPONSABLE, 
		ACR.CJACU_ESTADO_EJECUCION,
		TP.CJTPR_TIPO,	
		ACR.CJACU_TIPO_PERSONA,	
		HA.CJHAC_DESCRIPCION, 
		HA.CJHAC_RESPONSABLE, 
		HA.CJHAC_FECHA, 
		HA.CJHAC_ESTADO, 
		HA.CJHAC_FECHA_INSERT, 
		HA.CJHAC_USUARIO_INSERT, 
		HA.CJHAC_FECHA_UPDATE, 
		HA.CJHAC_USUARIO_UPDATE
	FROM SII.CGG_JUR_HISTORIAL_ACUERDO HA
	INNER JOIN SII.CGG_JUR_ACUERDO ACR ON (ACR.CJACU_CODIGO= HA.CJACU_CODIGO)
	LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJA ON(PJA.CRPJR_CODIGO = ACR.CRPJR_CODIGO)
	LEFT JOIN SII.CGG_RES_PERSONA PER ON (PER.CRPER_CODIGO = ACR.CRPER_CODIGO)
	LEFT JOIN SII.CGG_JUR_TIPO_PROCESO TP ON (TP.CJTPR_CODIGO = ACR.CJTPR_CODIGO)
	WHERE CJHAC_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(PJA.CRPJR_RAZON_SOCIAL,'''')||'' ''||
	COALESCE(PER.CRPER_NOMBRES,'''')||'' ''||
	COALESCE(PER.CRPER_APELLIDO_PATERNO,'''')||'' ''||
	COALESCE(PER.CRPER_APELLIDO_MATERNO,'''')||'' ''||
	COALESCE(TP.CJTPR_CODIGO, '''')||'' ''||
	COALESCE(TP.CJTPR_NOMBRE,'''')||'' ''||
	COALESCE(CJACU_ANIO, 0)||'' ''||
	COALESCE(CJACU_NUMERO, '''')||'' ''||
	COALESCE(CJACU_FECHA_SUSCRIPCION, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CJACU_ESTADO_EJECUCION, 0)||'' ''||
	COALESCE(CJACU_TIPO_PERSONA, 0)||'' ''||
	COALESCE(CJACU_COSTO, 0)||'' ''||
	COALESCE(CJACU_TIEMPO, 0)||'' ''||	
	COALESCE(CJHAC_DESCRIPCION, '''')||'' ''||
	COALESCE(CJHAC_RESPONSABLE, '''')||'' ''||
	COALESCE(CJHAC_FECHA, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CJHAC_ESTADO, FALSE)||'' ''||
	COALESCE(CJHAC_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CJHAC_USUARIO_INSERT, '''')||'' ''||
	COALESCE(CJHAC_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CJHAC_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	OPEN TMP_REF FOR EXECUTE TMP_SQL;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_JUR_HISTORIAL_ACUERDO HA
	INNER JOIN CGG_JUR_ACUERDO ACR ON (ACR.CJACU_CODIGO= HA.CJACU_CODIGO)
	WHERE CJHAC_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_JUR_HISTORIAL_ACUERDO HA
	INNER JOIN CGG_JUR_ACUERDO ACR ON (ACR.CJACU_CODIGO= HA.CJACU_CODIGO)
	WHERE CJHAC_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,
	COALESCE(CJTPR_CODIGO, '''')||' '||
	COALESCE(CJACU_ANIO, 0)||' '||
	COALESCE(CJACU_NUMERO, '''')||' '||
	COALESCE(CJACU_FECHA_SUSCRIPCION, CURRENT_TIMESTAMP)||' '||
	COALESCE(CJACU_ESTADO_EJECUCION, 0)||' '||
	COALESCE(CJACU_TIPO_PERSONA, 0)||' '||
	COALESCE(CJACU_COSTO, 0)||' '||
	COALESCE(CJACU_TIEMPO, 0)||' '||
	COALESCE(CJHAC_DESCRIPCION, '''')||' '||
	COALESCE(CJHAC_RESPONSABLE, '''')||' '||
	COALESCE(CJHAC_FECHA, CURRENT_TIMESTAMP)||' '||
	COALESCE(CJHAC_ESTADO, FALSE)||' '||
	COALESCE(CJHAC_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||
	COALESCE(CJHAC_USUARIO_INSERT, '''')||' '||
	COALESCE(CJHAC_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||
	COALESCE(CJHAC_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_JUR_HISTORIAL_ACUERDO.
* @param IN_CJHAC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL HISTORIAL DE ACUERDO
* @param IN_CJACU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ACUERDO DE CONTRATO O CONVENIO
* @param IN_CJHAC_DESCRIPCION DESCRIPCION DEL MOVIMIENTO DEL ACUERDO
* @param IN_CJHAC_RESPONSABLE NOMBRE DEL RESPONSABLE DE ESTE HISTORIAL DEL ACUERDO
* @param IN_CJHAC_FECHA FECHA DE REGISTRO DE OPERACION DEL ACUERDO
* @param IN_CJHAC_ESTADO ESTADO DEL REGISTRO DEL ACUERDO
* @param IN_CJHAC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION DE HISTORIAL DE ACUERDO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_UPDATE(
IN IN_CJHAC_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_CODIGO%TYPE,
IN IN_CJACU_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJACU_CODIGO%TYPE,
IN IN_CJHAC_DESCRIPCION SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_DESCRIPCION%TYPE,
IN IN_CJHAC_RESPONSABLE SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_RESPONSABLE%TYPE,
IN IN_CJHAC_FECHA SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_FECHA%TYPE,
IN IN_CJHAC_ESTADO SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_ESTADO%TYPE,
IN IN_CJHAC_USUARIO_UPDATE SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_JUR_HISTORIAL_ACUERDO SET
		CJACU_CODIGO = IN_CJACU_CODIGO, 
		CJHAC_DESCRIPCION = IN_CJHAC_DESCRIPCION, 
		CJHAC_RESPONSABLE = IN_CJHAC_RESPONSABLE, 
		CJHAC_FECHA = IN_CJHAC_FECHA, 
		CJHAC_ESTADO = IN_CJHAC_ESTADO, 
		CJHAC_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CJHAC_USUARIO_UPDATE = IN_CJHAC_USUARIO_UPDATE
	WHERE
		CJHAC_CODIGO = IN_CJHAC_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO.
* @param IN_CJHAC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL HISTORIAL DE ACUERDO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_SELECT(
IN IN_CJHAC_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CJHAC_CODIGO, 
		CJACU_CODIGO, 
		CJHAC_DESCRIPCION, 
		CJHAC_RESPONSABLE, 
		CJHAC_FECHA, 
		CJHAC_ESTADO, 
		CJHAC_FECHA_INSERT, 
		CJHAC_USUARIO_INSERT, 
		CJHAC_FECHA_UPDATE, 
		CJHAC_USUARIO_UPDATE
	FROM SII.CGG_JUR_HISTORIAL_ACUERDO
	WHERE CJHAC_ESTADO = TRUE AND 
		CJHAC_CODIGO = IN_CJHAC_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO.
* @param IN_CJHAC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL HISTORIAL DE ACUERDO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_DELETE(
IN IN_CJHAC_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_JUR_HISTORIAL_ACUERDO
	WHERE
		CJHAC_CODIGO = IN_CJHAC_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO.
* @param IN_CJHAC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DEL HISTORIAL DE ACUERDO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_DELETE_SOFT(
IN IN_CJHAC_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJHAC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_JUR_HISTORIAL_ACUERDO SET
		CJHAC_ESTADO = FALSE
	WHERE
		CJHAC_CODIGO = IN_CJHAC_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_S_CGG_JUR_ACUERDO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_JUR_ACUERDO.
* @param IN_CJACU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ACUERDO DE CONTRATO O CONVENIO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_S_CGG_JUR_ACUERDO(
IN IN_CJACU_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJACU_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CJHAC_CODIGO, 
		CJACU_CODIGO, 
		CJHAC_DESCRIPCION, 
		CJHAC_RESPONSABLE, 
		CJHAC_FECHA, 
		CJHAC_ESTADO, 
		CJHAC_FECHA_INSERT, 
		CJHAC_USUARIO_INSERT, 
		CJHAC_FECHA_UPDATE, 
		CJHAC_USUARIO_UPDATE
	FROM SII.CGG_JUR_HISTORIAL_ACUERDO
	WHERE CJHAC_ESTADO = TRUE AND 
		CJACU_CODIGO = IN_CJACU_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_D_CGG_JUR_ACUERDO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_JUR_ACUERDO.
* @param IN_CJACU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ACUERDO DE CONTRATO O CONVENIO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_D_CGG_JUR_ACUERDO(
IN IN_CJACU_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJACU_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_JUR_HISTORIAL_ACUERDO
	WHERE
		CJACU_CODIGO = IN_CJACU_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_JUR_HISTORIAL_ACUERDO_D_CGG_JUR_ACUERDO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_JUR_HISTORIAL_ACUERDO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_JUR_ACUERDO.
* @param IN_CJACU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ACUERDO DE CONTRATO O CONVENIO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_JUR_HISTORIAL_ACUERDO_DS_CGG_JUR_ACUERDO(
IN IN_CJACU_CODIGO SII.CGG_JUR_HISTORIAL_ACUERDO.CJACU_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_JUR_HISTORIAL_ACUERDO SET
		cjhac_estado = false
	WHERE
		CJACU_CODIGO = IN_CJACU_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

