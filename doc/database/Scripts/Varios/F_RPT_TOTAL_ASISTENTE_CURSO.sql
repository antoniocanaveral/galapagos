/**
* FUNCTION f_rpt_total_asistente_curso
* CONTABILIZA EL TOTAL DE PERSONAS QUE ASISTIERON A UN CURSO EN PARTICULAR.
* @param in_crtst_tipo_solicitud IDENTIFICATIVO UNICO DE TIPO DE SOLICITUD
* @param in_cdtcr_codigo IDENTIFICATIVO UNICO DE TIPO DE CURSO
* @param in_cctn_codigo IDENTIFICATIVO UNICO DE CANTON
* @return TEXT
*/
CREATE OR REPLACE FUNCTION f_rpt_total_asistente_curso(
in_crtst_tipo_solicitud character varying, 
in_cdtcr_codigo character varying, 
in_cctn_codigo character varying)
  RETURNS text AS
$BODY$
DECLARE	
	V_TOTAL INT;	
	SQL_TEXTO TEXT;
	TMP_CURSOR REFCURSOR;
	TMP_COLUMN INT;       
BEGIN	
	V_TOTAL:=0;		
	SQL_TEXTO := 'SELECT 
COUNT(PER.CRPER_CODIGO),
SII.F_TRAMITE_TIPO(TST.CRTST_CODIGO) AS CRTST_TIPO_TRAMITE
FROM SII.CGG_DHU_ASISTENTE_CURSO ACR
INNER JOIN SII.CGG_DHU_CURSO CUR ON (CUR.CDCUR_CODIGO=ACR.CDCUR_CODIGO)
INNER JOIN SII.CGG_CANTON CTN ON (CTN.CCTN_CODIGO=CUR.CCTN_CODIGO)
INNER JOIN SII.CGG_RES_PERSONA PER ON(PER.CRPER_CODIGO=ACR.CRPER_CODIGO)
LEFT JOIN SII.CGG_RES_RESIDENCIA RS ON (RS.CRPER_CODIGO = PER.CRPER_CODIGO)
LEFT JOIN SII.CGG_RES_TRAMITE TRA ON (TRA.CRPER_CODIGO=PER.CRPER_CODIGO)
LEFT JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON(TST.CRTST_CODIGO =TRA.CRTST_CODIGO)
	WHERE  CUR.CDCUR_ESTADO_CURSO=4
	AND (SELECT SII.F_TIPO_SOLICITUD_PADRE(RS.CRTST_CODIGO)) IN (SELECT TRIM(CGCNF_VALOR_CADENA) FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO IN ('||QUOTE_LITERAL(IN_CRTST_TIPO_SOLICITUD)||'))
	AND CUR.CDTCR_CODIGO='||QUOTE_LITERAL(IN_CDTCR_CODIGO)||'
	AND CTN.CCTN_CODIGO='||QUOTE_LITERAL(IN_CCTN_CODIGO)||'
	GROUP BY TST.CRTST_CODIGO';
	OPEN TMP_CURSOR FOR EXECUTE SQL_TEXTO;
	LOOP
		FETCH TMP_CURSOR INTO TMP_COLUMN;
		EXIT WHEN NOT FOUND;
	        V_TOTAL:=TMP_COLUMN;
	END LOOP;
	CLOSE TMP_CURSOR;
			
	RETURN V_TOTAL;	
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION f_rpt_total_asistente_curso(character varying, character varying, character varying) OWNER TO sii;
