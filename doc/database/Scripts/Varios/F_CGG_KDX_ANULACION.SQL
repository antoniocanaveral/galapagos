/**
* FUNCION SII.F_CGG_KDX_ANULACION_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_KDX_ANULACION.
* @param IN_CKANL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE UNA ANULACION
* @param IN_CKASG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ASIGNACION
* @param IN_CKUPV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO PUNTO DE VENTA
* @param IN_CKANL_NUMERO_ANULACION NUMERO SECUENCIAL UNICO DE IDENTIFICACION DE LA ASIGNACION
* @param IN_CKANL_FECHA_ANULACION FECHA DE RECEPCION DE LAS ESPECIES
* @param IN_CKANL_CANTIDAD CANTIDAD DE ESPECIES
* @param IN_CKANL_PRECIO_UNITARIO PRECIO DE VENTA DE LA ESPECIE
* @param IN_CKANL_PRECIO_TOTAL VALOR TOTAL DE LA ANULACION
* @param IN_CKANL_SERIE_INICIO SERIE DE INICIO DE LAS ESPECIES
* @param IN_CKANL_SERIE_FIN SERIE DE FIN DE LAS ESPECIES
* @param IN_CKANL_OBSERVACION COMENTARIO AFIN A LA ASIGNACION
* @param IN_CKANL_JUSTIFICACION DESCRIPCION DE LA JUSTIFICACION QUE MOTIVO LA ANULACION
* @param IN_CKANL_TIPO_ANULACION TIPO DE ANULACION:
0.- DEFECTO FABRICA
1.- OTRAS
* @param IN_CKANL_ESTADO_ANULACION ESTADO DEL REGISTRO DE VENTA UTILIZADO PARA OPERACIONES
0.-  REGISTRADA
1.-  CONFIRMADA
* @param IN_CKANL_ESTADO ESTADO DEL REGISTRO
* @param IN_CKANL_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CKANL_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_INSERT1(
IN IN_CKANL_CODIGO SII.CGG_KDX_ANULACION.CKANL_CODIGO%TYPE,
IN IN_CKASG_CODIGO SII.CGG_KDX_ANULACION.CKASG_CODIGO%TYPE,
IN IN_CKUPV_CODIGO SII.CGG_KDX_ANULACION.CKUPV_CODIGO%TYPE,
IN IN_CKANL_NUMERO_ANULACION SII.CGG_KDX_ANULACION.CKANL_NUMERO_ANULACION%TYPE,
IN IN_CKANL_FECHA_ANULACION SII.CGG_KDX_ANULACION.CKANL_FECHA_ANULACION%TYPE,
IN IN_CKANL_CANTIDAD SII.CGG_KDX_ANULACION.CKANL_CANTIDAD%TYPE,
IN IN_CKANL_PRECIO_UNITARIO SII.CGG_KDX_ANULACION.CKANL_PRECIO_UNITARIO%TYPE,
IN IN_CKANL_PRECIO_TOTAL SII.CGG_KDX_ANULACION.CKANL_PRECIO_TOTAL%TYPE,
IN IN_CKANL_SERIE_INICIO SII.CGG_KDX_ANULACION.CKANL_SERIE_INICIO%TYPE,
IN IN_CKANL_SERIE_FIN SII.CGG_KDX_ANULACION.CKANL_SERIE_FIN%TYPE,
IN IN_CKANL_OBSERVACION SII.CGG_KDX_ANULACION.CKANL_OBSERVACION%TYPE,
IN IN_CKANL_JUSTIFICACION SII.CGG_KDX_ANULACION.CKANL_JUSTIFICACION%TYPE,
IN IN_CKANL_TIPO_ANULACION SII.CGG_KDX_ANULACION.CKANL_TIPO_ANULACION%TYPE,
IN IN_CKANL_ESTADO_ANULACION SII.CGG_KDX_ANULACION.CKANL_ESTADO_ANULACION%TYPE,
IN IN_CKANL_ESTADO SII.CGG_KDX_ANULACION.CKANL_ESTADO%TYPE,
IN IN_CKANL_USUARIO_INSERT SII.CGG_KDX_ANULACION.CKANL_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CKANL_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_KDX_ANULACION','CKANL_CODIGO','CKANL') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CKANL_CODIGO;
	END IF;
	INSERT INTO SII.CGG_KDX_ANULACION(
		CKANL_CODIGO, 
		CKASG_CODIGO, 
		CKUPV_CODIGO, 
		CKANL_NUMERO_ANULACION, 
		CKANL_FECHA_ANULACION, 
		CKANL_CANTIDAD, 
		CKANL_PRECIO_UNITARIO, 
		CKANL_PRECIO_TOTAL, 
		CKANL_SERIE_INICIO, 
		CKANL_SERIE_FIN, 
		CKANL_OBSERVACION, 
		CKANL_JUSTIFICACION, 
		CKANL_TIPO_ANULACION, 
		CKANL_ESTADO_ANULACION, 
		CKANL_ESTADO, 
		CKANL_FECHA_INSERT, 
		CKANL_USUARIO_INSERT, 
		CKANL_FECHA_UPDATE, 
		CKANL_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CKASG_CODIGO, 
		IN_CKUPV_CODIGO, 
		IN_CKANL_NUMERO_ANULACION, 
		IN_CKANL_FECHA_ANULACION, 
		IN_CKANL_CANTIDAD, 
		IN_CKANL_PRECIO_UNITARIO, 
		IN_CKANL_PRECIO_TOTAL, 
		IN_CKANL_SERIE_INICIO, 
		IN_CKANL_SERIE_FIN, 
		IN_CKANL_OBSERVACION, 
		IN_CKANL_JUSTIFICACION, 
		IN_CKANL_TIPO_ANULACION, 
		IN_CKANL_ESTADO_ANULACION, 
		IN_CKANL_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CKANL_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CKANL_USUARIO_INSERT
	);
	UPDATE CGG_KDX_ASIGNACION SET 
			CKASG_CANTIDAD_DISPONIBLE = CKASG_CANTIDAD_DISPONIBLE - IN_CKANL_CANTIDAD,
			CKASG_USUARIO_UPDATE =  IN_CKANL_USUARIO_INSERT 
	WHERE CKASG_CODIGO = IN_CKASG_CODIGO;
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION: SII.F_CGG_KDX_ANULACION_GENERA_NUMERO
* GENERA UNA SECUENCIA DE NUMEROS PARA LA ANULACION.
* @return VARYING
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_GENERA_NUMERO()
  RETURNS CHARACTER VARYING AS
$BODY$
DECLARE
	TMP_SECUENCIA CHARACTER VARYING;
	TMP_ANIO CHARACTER VARYING;
	TMP_ACRONIMO CHARACTER VARYING;	
BEGIN
	SELECT COUNT(CKANL_NUMERO_ANULACION)+1 INTO TMP_SECUENCIA  
	FROM SII.CGG_KDX_ANULACION
	WHERE EXTRACT(YEAR FROM CKANL_FECHA_INSERT) = EXTRACT(YEAR FROM CURRENT_TIMESTAMP);
	SELECT EXTRACT(YEAR FROM CURRENT_TIMESTAMP) INTO TMP_ANIO;
	RETURN  TMP_ANIO||'-'||LPAD(TMP_SECUENCIA,4,'0');
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;
