
/**
* FUNCION SII.F_CGG_KDX_CIERRE_DETALLE_S_CGG_KDX_CIERRE1
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_CIERRE_DETALLE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_CIERRE.
* @param IN_CKCRR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_CIERRE_DETALLE_S_CGG_KDX_CIERRE1(
IN IN_CKCRR_CODIGO SII.CGG_KDX_CIERRE_DETALLE.CKCRR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKCDT_CODIGO, 
		CDT.CKDNM_CODIGO,
		CKDNM_DENOMINACION,
		CKDNM_VALOR_MONETARIO, 
		CKCRR_CODIGO, 
		CKCDT_CANTIDAD, 
		CKCDT_VALOR, 
		CKCDT_TOTAL,
		CKCDT_OBSERVACION,  
		CKCDT_ESTADO, 
		CKCDT_FECHA_INSERT, 
		CKCDT_USUARIO_INSERT, 
		CKCDT_FECHA_UPDATE, 
		CKCDT_USUARIO_UPDATE
	FROM SII.CGG_KDX_CIERRE_DETALLE CDT
	INNER JOIN SII.CGG_KDX_DENOMINACION DN ON (CDT.CKDNM_CODIGO = DN.CKDNM_CODIGO)
	WHERE CKCDT_ESTADO = TRUE AND 
		CKCRR_CODIGO = IN_CKCRR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

