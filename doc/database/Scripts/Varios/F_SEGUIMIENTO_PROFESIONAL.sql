/**
* FUNCION f_cgg_dhu_seguimiento_profesional_select_page
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_DHU_SEGUIMIENTO_PROFESIONAL.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION f_cgg_dhu_seguimiento_profesional_select_page(in_user_name character varying, in_start_index integer, in_limit integer, in_sort_field_name character varying, in_direction character varying, in_find_text text)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		SP.CDSPR_CODIGO, 
		SP.CDBEC_CODIGO, 
		PER.CRPER_NOMBRES,
		PER.CRPER_APELLIDO_PATERNO,
		PER.CRPER_APELLIDO_MATERNO,
		PER.CRPER_NUM_DOC_IDENTIFIC,
		BEC.CDBEC_NUMERO_CONVENIO,
		TP.CDTBC_NOMBRE,
		BEC.CDBEC_BECA_DEVENGADA,
		BEC.CDBEC_FUNCIONARIO,
		ESP.CGESP_NOMBRE,
		SP.CDSPR_ANIO, 
		SP.CDSPR_FECHA_INGRESO, 
		SP.CDSPR_INSTITUCION, 
		SP.CDSPR_CARGO, 
		SP.CDSPR_FECHA_SALIDA, 
		SP.CDSPR_OBSERVACIONES, 
		SP.CDSPR_ESTADO, 
		SP.CDSPR_FECHA_INSERT, 
		SP.CDSPR_USUARIO_INSERT, 
		SP.CDSPR_FECHA_UPDATE, 
		SP.CDSPR_USUARIO_UPDATE
	FROM SII.CGG_DHU_SEGUIMIENTO_PROFESIONAL SP
	INNER JOIN SII.CGG_DHU_BECA BEC ON (BEC.CDBEC_CODIGO=SP.CDBEC_CODIGO)
	INNER JOIN SII.CGG_RES_PERSONA PER ON(PER.CRPER_CODIGO=BEC.CRPER_CODIGO)
	INNER JOIN SII.CGG_DHU_TIPO_BECA TP ON(TP.CDTBC_CODIGO=BEC.CDTBC_CODIGO)
	INNER JOIN SII.CGG_ESPECIALIDAD ESP ON(ESP.CGESP_CODIGO=BEC.CGESP_CODIGO)
	WHERE CDSPR_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	CASE WHEN SP.CDSPR_CODIGO IS NULL THEN '''' ELSE SP.CDSPR_CODIGO END ||'' ''||
	CASE WHEN SP.CDBEC_CODIGO IS NULL THEN '''' ELSE SP.CDBEC_CODIGO END ||'' ''||
	CASE WHEN PER.CRPER_NOMBRES IS NULL THEN ''''ELSE PER.CRPER_NOMBRES END ||'' ''||
	CASE WHEN PER.CRPER_APELLIDO_PATERNO IS NULL THEN ''''ELSE PER.CRPER_APELLIDO_PATERNO END ||'' ''||
	CASE WHEN PER.CRPER_APELLIDO_MATERNO IS NULL THEN ''''ELSE PER.CRPER_APELLIDO_MATERNO END ||'' ''||
	CASE WHEN PER.CRPER_NUM_DOC_IDENTIFIC IS NULL THEN ''''ELSE PER.CRPER_NUM_DOC_IDENTIFIC END ||'' ''||
	CASE WHEN BEC.CDBEC_NUMERO_CONVENIO IS NULL THEN ''''ELSE BEC.CDBEC_NUMERO_CONVENIO END ||'' ''||
	CASE WHEN TP.CDTBC_NOMBRE IS NULL THEN ''''ELSE TP.CDTBC_NOMBRE END ||'' ''||
	CASE WHEN BEC.CDBEC_BECA_DEVENGADA IS NULL THEN FALSE ELSE BEC.CDBEC_BECA_DEVENGADA END ||'' ''||
	CASE WHEN BEC.CDBEC_FUNCIONARIO IS NULL THEN ''''ELSE BEC.CDBEC_FUNCIONARIO END ||'' ''||
	CASE WHEN ESP.CGESP_NOMBRE IS NULL THEN ''''ELSE ESP.CGESP_NOMBRE END ||'' ''||
	CASE WHEN SP.CDSPR_ANIO IS NULL THEN 0 ELSE SP.CDSPR_ANIO END ||'' ''||
	CASE WHEN SP.CDSPR_FECHA_INGRESO IS NULL THEN CURRENT_TIMESTAMP ELSE SP.CDSPR_FECHA_INGRESO END ||'' ''||
	CASE WHEN SP.CDSPR_INSTITUCION IS NULL THEN '''' ELSE SP.CDSPR_INSTITUCION END ||'' ''||
	CASE WHEN SP.CDSPR_CARGO IS NULL THEN '''' ELSE SP.CDSPR_CARGO END ||'' ''||
	CASE WHEN SP.CDSPR_FECHA_SALIDA IS NULL THEN CURRENT_TIMESTAMP ELSE SP.CDSPR_FECHA_SALIDA END ||'' ''||
	CASE WHEN SP.CDSPR_OBSERVACIONES IS NULL THEN '''' ELSE SP.CDSPR_OBSERVACIONES END ||'' ''||
	CASE WHEN SP.CDSPR_ESTADO IS NULL THEN FALSE ELSE SP.CDSPR_ESTADO END ||'' ''||
	CASE WHEN SP.CDSPR_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE SP.CDSPR_FECHA_INSERT END ||'' ''||
	CASE WHEN SP.CDSPR_USUARIO_INSERT IS NULL THEN '''' ELSE SP.CDSPR_USUARIO_INSERT END ||'' ''||
	CASE WHEN SP.CDSPR_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE SP.CDSPR_FECHA_UPDATE END ||'' ''||
	CASE WHEN SP.CDSPR_USUARIO_UPDATE IS NULL THEN '''' ELSE SP.CDSPR_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100
  ROWS 1000;

 /**
* FUNCION F_CGG_DHU_BECA_SEG_PROFESIONAL
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_DHU_BECA.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION F_CGG_DHU_BECA_SEG_PROFESIONAL(
in_user_name character varying, 
in_start_index integer, 
in_limit integer, 
in_sort_field_name character varying, 
in_direction character varying, 
in_find_text text)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		
		(SELECT CRPER_NOMBRES FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO =BEC.CRPER_CODIGO) AS CRPER_NOMBRES,
		(SELECT CRPER_APELLIDO_PATERNO||'' ''||COALESCE(CRPER_APELLIDO_MATERNO,'' '')FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_APELLIDOS_PERSONA,
		(SELECT CRPER_NUM_DOC_IDENTIFIC FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_NUM_DOC_IDENTIFIC,
		(SELECT CRPER_NUMERO_RESIDENCIA FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_NUMERO_RESIDENCIA,
		(SELECT CRPER_LUGAR_NACIMIENTO FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_LUGAR_NACIMIENTO,
		(SELECT CRPER_FECHA_NACIMIENTO FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_FECHA_NACIMIENTO,
		BEC.CGG_CRPER_CODIGO, 
		BEC.CDBEC_CODIGO,
		TB.CDTBC_NOMBRE,
		BEC.CRPJR_CODIGO,
		(SELECT PJR.CRPJR_RAZON_SOCIAL FROM SII.CGG_RES_PERSONA_JURIDICA PJR WHERE PJR.CRPJR_CODIGO =BEC.CRPJR_CODIGO) AS CRPJR_NOMBRE, 
		(SELECT ESP.CGESP_NOMBRE FROM SII.CGG_ESPECIALIDAD ESP WHERE ESP.CGESP_CODIGO =BEC.CGESP_CODIGO) AS CGESP_NOMBRE,
		(SELECT INS.CGIED_NOMBRE FROM SII.CGG_INSTITUCION_EDUCATIVA INS WHERE INS.CGIED_CODIGO =BEC.CGIED_CODIGO) AS CGIED_NOMBRE,
		(SELECT TPF.CGTPR_DESCRIPCION FROM SII.CGG_TITULO_PROFESIONAL TPF WHERE TPF.CGTPR_CODIGO =BEC.CGTPR_CODIGO) AS CGTPR_NOMBRE,
		(SELECT NES.CGNES_DESCRIPCION FROM SII.CGG_NIVEL_ESTUDIO NES INNER JOIN SII.CGG_ESPECIALIDAD ESP ON(ESP.CGNES_CODIGO=NES.CGNES_CODIGO ) 
		INNER JOIN SII.CGG_TITULO_PROFESIONAL TPF ON (TPF.CGNES_CODIGO =NES.CGNES_CODIGO) 
		WHERE ESP.CGESP_CODIGO =BEC.CGESP_CODIGO AND TPF.CGTPR_CODIGO =BEC.CGTPR_CODIGO ) AS CGNES_DESCRIPCION,
		BEC.CDBEC_FUNCIONARIO,
		BEC.CDBEC_NUMERO_CONVENIO, 
		BEC.CDBEC_TIPO_CICLO, 
		BEC.CDBEC_TITULO_ENTREGADO, 
		BEC.CDBEC_BECA_DEVENGADA, 
		BEC.CDBEC_ESTADO_APROBACION, 
		BEC.CDBEC_ESTADO, 
		BEC.CDBEC_FECHA_INSERT, 
		BEC.CDBEC_USUARIO_INSERT, 
		BEC.CDBEC_FECHA_UPDATE, 
		BEC.CDBEC_USUARIO_UPDATE
	FROM SII.CGG_DHU_BECA BEC
	INNER JOIN SII.CGG_DHU_TIPO_BECA TB ON(TB.CDTBC_CODIGO=BEC.CDTBC_CODIGO)
	WHERE BEC.CDBEC_ESTADO = TRUE AND BEC.CDBEC_ESTADO_APROBACION=2 AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(CDBEC_NUMERO, '''')||'' ''||
	COALESCE(CDBEC_FUNCIONARIO, '''')||'' ''||
	COALESCE(CDBEC_NUMERO_CONVENIO, '''')||'' ''||
	COALESCE(CDBEC_TIPO_CICLO, 0)||'' ''||
	COALESCE(CDBEC_TITULO_ENTREGADO, FALSE)||'' ''||
	COALESCE(CDBEC_BECA_DEVENGADA, FALSE)||'' ''||
	COALESCE(CDBEC_ESTADO_APROBACION, 0)||'' ''||
	COALESCE(CDBEC_ESTADO, FALSE)||'' ''||
	COALESCE(CDBEC_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CDBEC_USUARIO_INSERT, '''')||'' ''||
	COALESCE(CDBEC_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CDBEC_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100
  ROWS 1000;
ALTER FUNCTION F_CGG_DHU_BECA_SEG_PROFESIONAL(character varying, integer, integer, character varying, character varying, text) OWNER TO sii;

/**
* FUNCION F_CGG_DHU_BECA_SEG_PROFESIONAL_COUNT
* CONTABILIZA LOS REGISTRO EN LA TABLA SII.CGG_DHU_BECA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return  TMP_ROWS 
*/
CREATE OR REPLACE FUNCTION F_CGG_DHU_BECA_SEG_PROFESIONAL_COUNT(in_find_text text)
  RETURNS integer AS
$BODY$
DECLARE
	TMP_ROWS INT2;
BEGIN
	
	SELECT COUNT(*)
	FROM SII.CGG_DHU_BECA BEC
	INNER JOIN SII.CGG_RES_PERSONA PER ON(PER.CRPER_CODIGO =BEC.CRPER_CODIGO)
	INNER JOIN SII.CGG_DHU_TIPO_BECA TB ON(TB.CDTBC_CODIGO=BEC.CDTBC_CODIGO)
	INNER JOIN SII.CGG_ESPECIALIDAD ESP ON( ESP.CGESP_CODIGO =BEC.CGESP_CODIGO)
	WHERE BEC.CDBEC_ESTADO = TRUE AND BEC.CDBEC_ESTADO_APROBACION=2 AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(PER.CRPER_NOMBRES,'''')||' '||
	COALESCE(PER.CRPER_APELLIDO_PATERNO,'''')||' '||
	COALESCE(PER.CRPER_APELLIDO_MATERNO,'''')||' '||
	COALESCE(PER.CRPER_NUM_DOC_IDENTIFIC,'''')||' '||
	COALESCE(PER.CRPER_NUMERO_RESIDENCIA,'''')||' '||
	COALESCE(BEC.CRETF_CODIGO,'''')||' '||
	COALESCE(TB.CDTBC_NOMBRE,'''')||' '||
	COALESCE(ESP.CGESP_NOMBRE,'''')||' '||
	COALESCE(CDBEC_NUMERO, '''')||' '||
	COALESCE(CDBEC_FUNCIONARIO, '''')||' '||
	COALESCE(CDBEC_NUMERO_CONVENIO, '''')||' '||
	COALESCE(CDBEC_TIPO_CICLO, 0)||' '||
	COALESCE(CDBEC_TITULO_ENTREGADO, FALSE)||' '||
	COALESCE(CDBEC_BECA_DEVENGADA, FALSE)||' '||
	COALESCE(CDBEC_ESTADO_APROBACION, 0)||' '||
	COALESCE(CDBEC_ESTADO, FALSE)||' '||
	COALESCE(CDBEC_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||
	COALESCE(CDBEC_USUARIO_INSERT, '''')||' '||
	COALESCE(CDBEC_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||
	COALESCE(CDBEC_USUARIO_UPDATE, '''')) = 1;
	
	RETURN TMP_ROWS;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;


/**
* FUNCION F_CGG_DHU_BECA_SEG_PROFESIONAL_SELECT
* SELECT UN REGISTRO EN LA TABLA SII.CGG_DHU_BECA. 
* @param IN_CRPER_NUM_DOC_IDENTIFIC CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION F_CGG_DHU_BECA_SEG_PROFESIONAL_SELECT(in_crper_num_doc_identific character varying)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR 
	SELECT
		BEC.CDBEC_CODIGO,
		PER.CRPER_NOMBRES,
		(SELECT CRPER_APELLIDO_PATERNO||' '||COALESCE(CRPER_APELLIDO_MATERNO,' ')FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_APELLIDOS_PERSONA,
		PER.CRPER_NUM_DOC_IDENTIFIC, 
		PER.CRPER_NUMERO_RESIDENCIA, 
		PER.CRPER_LUGAR_NACIMIENTO, 
		PER.CRPER_FECHA_NACIMIENTO, 
		BEC.CGG_CRPER_CODIGO, 
		BEC.CRPJR_CODIGO,
		(SELECT PJR.CRPJR_RAZON_SOCIAL FROM SII.CGG_RES_PERSONA_JURIDICA PJR WHERE PJR.CRPJR_CODIGO =BEC.CRPJR_CODIGO) AS CRPJR_NOMBRE, 
		(SELECT ESP.CGESP_NOMBRE FROM SII.CGG_ESPECIALIDAD ESP WHERE ESP.CGESP_CODIGO =BEC.CGESP_CODIGO) AS CGESP_NOMBRE,
		(SELECT INS.CGIED_NOMBRE FROM SII.CGG_INSTITUCION_EDUCATIVA INS WHERE INS.CGIED_CODIGO =BEC.CGIED_CODIGO) AS CGIED_NOMBRE,
		(SELECT TPF.CGTPR_DESCRIPCION FROM SII.CGG_TITULO_PROFESIONAL TPF WHERE TPF.CGTPR_CODIGO =BEC.CGTPR_CODIGO) AS CGTPR_NOMBRE,
		(SELECT NES.CGNES_DESCRIPCION FROM SII.CGG_NIVEL_ESTUDIO NES INNER JOIN SII.CGG_ESPECIALIDAD ESP ON(ESP.CGNES_CODIGO=NES.CGNES_CODIGO ) 
		INNER JOIN SII.CGG_TITULO_PROFESIONAL TPF ON (TPF.CGNES_CODIGO =NES.CGNES_CODIGO) 
		WHERE ESP.CGESP_CODIGO =BEC.CGESP_CODIGO AND TPF.CGTPR_CODIGO =BEC.CGTPR_CODIGO ) AS CGNES_DESCRIPCION,
		BEC.CDBEC_NUMERO,
		BEC.CDBEC_FUNCIONARIO,
		BEC.CDBEC_FECHA_INICIO, 
		BEC.CDBEC_FECHA_FIN, 
		BEC.CDBEC_NUMERO_CONVENIO,
		BEC.CDBEC_TITULO_ENTREGADO, 
		BEC.CDBEC_BECA_DEVENGADA, 
		BEC.CDBEC_ESTADO_APROBACION
	FROM SII.CGG_DHU_BECA BEC
	INNER JOIN SII.CGG_RES_PERSONA PER ON (PER.CRPER_CODIGO=BEC.CRPER_CODIGO)
	WHERE BEC.CDBEC_ESTADO = TRUE AND BEC.CDBEC_ESTADO_APROBACION=2 AND PER.CRPER_NUM_DOC_IDENTIFIC=IN_CRPER_NUM_DOC_IDENTIFIC;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION F_CGG_DHU_BECA_SEG_PROFESIONAL_SELECT(character varying) OWNER TO sii;