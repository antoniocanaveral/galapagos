/**
* FUNCION SII.F_CGG_DHU_SEGUIMIENTO_ACADEMICO__SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_DHU_SEGUIMIENTO_ACADEMICO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_SEGUIMIENTO_ACADEMICO_SELECT(
IN IN_USER_NAME varchar(50),
IN IN_START_INDEX int,
IN IN_LIMIT int,
IN IN_SORT_FIELD_NAME varchar,
IN IN_DIRECTION varchar,
IN IN_FIND_TEXT text
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT 
		SAC.CDBEC_CODIGO, 
		SAC.CDACD_CODIGO,
		PER.CRPER_NOMBRES, 
		TB.CDTBC_CODIGO, 
		TB.CDTBC_NOMBRE,
		(COALESCE(PER.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PER.CRPER_APELLIDO_MATERNO,'''')) AS CRPER_APELLIDOS_PERSONA,
		PER.CRPER_NUM_DOC_IDENTIFIC, 
		PER.CRPER_NUMERO_RESIDENCIA, 
		BEC.CDBEC_NUMERO_CONVENIO, 
		BEC.CDBEC_FUNCIONARIO,
		ESP.CGESP_NOMBRE,
		BEC.CDBEC_TIPO_CICLO,
		SAC.CDACD_NUMERO_CICLO, 
		SAC.CDACD_FECHA_INICIO, 
		SAC.CDACD_FECHA_FIN, 
		SAC.CDACD_OBSERVACION, 
		SAC.CDACD_ESTADO_APROBACION, 
		SAC.CDACD_ESTADO, 
		SAC.CDACD_FECHA_INSERT, 
		SAC.CDACD_USUARIO_INSERT, 
		SAC.CDACD_FECHA_UPDATE, 
		SAC.CDACD_USUARIO_UPDATE
	FROM SII.CGG_DHU_SEGUIMIENTO_ACADEMICO SAC
	INNER JOIN SII.CGG_DHU_BECA BEC ON(BEC.CDBEC_CODIGO=SAC.CDBEC_CODIGO)
	INNER JOIN SII.CGG_ESPECIALIDAD ESP ON(ESP.CGESP_CODIGO =BEC.CGESP_CODIGO)
	INNER JOIN SII.CGG_RES_PERSONA PER ON(PER.CRPER_CODIGO=BEC.CRPER_CODIGO)
	INNER JOIN SII.CGG_DHU_TIPO_BECA TB ON (BEC.CDTBC_CODIGO=TB.CDTBC_CODIGO)
	WHERE CDACD_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	CASE WHEN SAC.CDBEC_CODIGO IS NULL THEN '''' ELSE SAC.CDBEC_CODIGO END ||'' ''||
	CASE WHEN PER.CRPER_NOMBRES IS NULL THEN '''' ELSE PER.CRPER_NOMBRES END ||'' ''||
	CASE WHEN TB.CDTBC_NOMBRE IS NULL THEN '''' ELSE TB.CDTBC_NOMBRE END ||'' ''||
	CASE WHEN PER.CRPER_APELLIDO_PATERNO IS NULL THEN '''' ELSE PER.CRPER_APELLIDO_PATERNO END ||'' ''||
	CASE WHEN PER.CRPER_APELLIDO_MATERNO IS NULL THEN '''' ELSE PER.CRPER_APELLIDO_MATERNO END ||'' ''||
	CASE WHEN PER.CRPER_NUM_DOC_IDENTIFIC IS NULL THEN '''' ELSE PER.CRPER_NUM_DOC_IDENTIFIC END ||'' ''||
	CASE WHEN PER.CRPER_NUMERO_RESIDENCIA IS NULL THEN '''' ELSE PER.CRPER_NUMERO_RESIDENCIA END ||'' ''||
	CASE WHEN BEC.CDBEC_NUMERO_CONVENIO IS NULL THEN '''' ELSE BEC.CDBEC_NUMERO_CONVENIO END ||'' ''||
	CASE WHEN BEC.CDBEC_FUNCIONARIO IS NULL THEN '''' ELSE BEC.CDBEC_FUNCIONARIO END ||'' ''||
	CASE WHEN ESP.CGESP_NOMBRE IS NULL THEN '''' ELSE ESP.CGESP_NOMBRE END||'' ''||
	CASE WHEN CDACD_CODIGO IS NULL THEN '''' ELSE CDACD_CODIGO END ||'' ''||
	CASE WHEN CDACD_NUMERO_CICLO IS NULL THEN 0 ELSE CDACD_NUMERO_CICLO END ||'' ''||
	CASE WHEN CDACD_FECHA_INICIO IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_INICIO END ||'' ''||
	CASE WHEN CDACD_FECHA_FIN IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_FIN END ||'' ''||
	CASE WHEN CDACD_OBSERVACION IS NULL THEN '''' ELSE CDACD_OBSERVACION END ||'' ''||
	CASE WHEN CDACD_ESTADO_APROBACION IS NULL THEN 0 ELSE CDACD_ESTADO_APROBACION END ||'' ''||
	CASE WHEN CDACD_ESTADO IS NULL THEN FALSE ELSE CDACD_ESTADO END ||'' ''||
	CASE WHEN CDACD_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_INSERT END ||'' ''||
	CASE WHEN CDACD_USUARIO_INSERT IS NULL THEN '''' ELSE CDACD_USUARIO_INSERT END ||'' ''||
	CASE WHEN CDACD_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_UPDATE END ||'' ''||
	CASE WHEN CDACD_USUARIO_UPDATE IS NULL THEN '''' ELSE CDACD_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
/**
* FUNCION f_cgg_dhu_beca_seguimiento_academico_select
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_DHU_SEGUIMIENTO_ACADEMICO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION f_cgg_dhu_beca_seguimiento_academico_select(
in_user_name character varying, 
in_start_index integer, 
in_limit integer, 
in_sort_field_name character varying, 
in_direction character varying, 
in_find_text text)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		BEC.CDBEC_CODIGO,
		PER.CRPER_NOMBRES,
		(COALESCE(PER.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PER.CRPER_APELLIDO_MATERNO,'''')) AS CRPER_APELLIDOS_PERSONA,
		PER.CRPER_NUM_DOC_IDENTIFIC,
		BEC.CDTBC_CODIGO,
		TBC.CDTBC_NOMBRE,
		ESP.CGESP_NOMBRE,
		BEC.CDBEC_NUMERO,
		BEC.CDBEC_FUNCIONARIO,
		BEC.CDBEC_NUMERO_CONVENIO, 
		BEC.CDBEC_TIPO_CICLO,
		BEC.CDBEC_TOTAL_CICLOS
	FROM SII.CGG_DHU_BECA BEC
	INNER JOIN SII.CGG_RES_PERSONA PER ON (PER.CRPER_CODIGO=BEC.CRPER_CODIGO)
	INNER JOIN SII.CGG_DHU_TIPO_BECA TBC ON(TBC.CDTBC_CODIGO=BEC.CDTBC_CODIGO)
	LEFT JOIN SII.CGG_DHU_SEGUIMIENTO_ACADEMICO SAC ON(SAC.CDBEC_CODIGO=BEC.CDBEC_CODIGO)
	INNER JOIN SII.CGG_ESPECIALIDAD ESP ON(ESP.CGESP_CODIGO =BEC.CGESP_CODIGO)
	WHERE BEC.CDBEC_ESTADO = TRUE AND (CDBEC_ESTADO_APROBACION=1 OR CDBEC_ESTADO_APROBACION=2) AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(BEC.CDBEC_CODIGO,'''')||'' ''||
	COALESCE(PER.CRPER_NOMBRES,'''')||'' ''||
	COALESCE(PER.CRPER_APELLIDO_PATERNO,'''')||'' ''||
	COALESCE(CRPER_APELLIDO_MATERNO,'''')||'' ''||
	COALESCE(PER.CRPER_NUM_DOC_IDENTIFIC,'''')||'' ''||
	COALESCE(BEC.CDTBC_CODIGO,'''')||'' ''||
	COALESCE(TBC.CDTBC_NOMBRE,'''')||'' ''||
	COALESCE(ESP.CGESP_NOMBRE,'''')||'' ''||
	COALESCE(BEC.CDBEC_NUMERO,'''')||'' ''||
	COALESCE(BEC.CDBEC_FUNCIONARIO,'''')||'' ''||
	COALESCE(BEC.CDBEC_NUMERO_CONVENIO,'''')||'' ''||
	COALESCE(CDBEC_FUNCIONARIO, '''')||'' ''||
	COALESCE(CDBEC_TOTAL_CICLOS, 0)||'' ''||
	COALESCE(CDBEC_ESTADO_APROBACION, 0)||'' ''||
	COALESCE(CDBEC_ESTADO, FALSE)||'' ''||
	COALESCE(CDBEC_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CDBEC_USUARIO_INSERT, '''')||'' ''||
	COALESCE(CDBEC_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CDBEC_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100
  ROWS 1000;

/** FUNCTION: F_CGG_DHU_BECA_SEGUIMIENTO_ACADEMICO_SELECT_COUNT(TEXT)
* CONTABILIZA N REGISTROS DE LA TABLA SII.CGG_DHU_SEGUIMIENTO_ACADEMICO.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TMP_ROWS
*/
-- DROP FUNCTION F_CGG_DHU_BECA_SEGUIMIENTO_ACADEMICO_SELECT_COUNT(TEXT);

CREATE OR REPLACE FUNCTION F_CGG_DHU_BECA_SEGUIMIENTO_ACADEMICO_SELECT_COUNT(IN_FIND_TEXT TEXT)
  RETURNS INTEGER AS
$BODY$
DECLARE
	TMP_ROWS INT2;
BEGIN
	
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_BECA BEC
	INNER JOIN SII.CGG_RES_PERSONA PER ON (PER.CRPER_CODIGO=BEC.CRPER_CODIGO)
	INNER JOIN SII.CGG_DHU_TIPO_BECA TBC ON(TBC.CDTBC_CODIGO=BEC.CDTBC_CODIGO)
	LEFT JOIN SII.CGG_DHU_SEGUIMIENTO_ACADEMICO SAC ON(SAC.CDBEC_CODIGO=BEC.CDBEC_CODIGO)
	INNER JOIN SII.CGG_ESPECIALIDAD ESP ON(ESP.CGESP_CODIGO =BEC.CGESP_CODIGO)
	WHERE BEC.CDBEC_ESTADO = TRUE AND (CDBEC_ESTADO_APROBACION=1 OR CDBEC_ESTADO_APROBACION=2) AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(BEC.CDBEC_CODIGO,'''')||' '||
	COALESCE(PER.CRPER_NOMBRES,'''')||' '||
	COALESCE(PER.CRPER_APELLIDO_PATERNO,'''')||' '||
	COALESCE(CRPER_APELLIDO_MATERNO,'''')||' '||
	COALESCE(PER.CRPER_NUM_DOC_IDENTIFIC,'''')||' '||
	COALESCE(BEC.CDTBC_CODIGO,'''')||' '||
	COALESCE(TBC.CDTBC_NOMBRE,'''')||' '||
	COALESCE(ESP.CGESP_NOMBRE,'''')||' '||
	COALESCE(BEC.CDBEC_NUMERO,'''')||' '||
	COALESCE(BEC.CDBEC_FUNCIONARIO,'''')||' '||
	COALESCE(BEC.CDBEC_NUMERO_CONVENIO,'''')||' '||
	COALESCE(CDBEC_FUNCIONARIO, '''')||' '||
	COALESCE(CDBEC_TOTAL_CICLOS, 0)||' '||
	COALESCE(CDBEC_ESTADO_APROBACION, 0)||' '||
	COALESCE(CDBEC_ESTADO, FALSE)||' '||
	COALESCE(CDBEC_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||
	COALESCE(CDBEC_USUARIO_INSERT, '''')||' '||
	COALESCE(CDBEC_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||
	COALESCE(CDBEC_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;

---FUNCION QUE SELECCIONA LOSAREGISTROS DE UNA BECA DEACUERDO AL PARAMETRO DE BUSQUEDA
/**
* FUNCION FF_CGG_DHU_BECA_PERSONA_SEGUIMIENTO
* SELECCIONA UN REGISTROS DE LA TABLA SII.CGG_DHU_BECA.
* @param IN_CRPER_NUM_DOC_IDENTIFIC CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/

CREATE OR REPLACE FUNCTION F_CGG_DHU_BECA_PERSONA_SEGUIMIENTO(IN_CRPER_NUM_DOC_IDENTIFIC CHARACTER VARYING)
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR 
	SELECT 
		BEC.CDBEC_CODIGO,
		(SELECT CRPER_NOMBRES FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO =BEC.CRPER_CODIGO) AS CRPER_NOMBRE_PERSONA,
		(SELECT CRPER_APELLIDO_PATERNO||' '||CRPER_APELLIDO_MATERNO FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_APELLIDOS_PERSONA,
		(SELECT CRPER_NUM_DOC_IDENTIFIC FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_NUM_IDENTIFIC,
		(SELECT CRPER_NUMERO_RESIDENCIA FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_RESIDENCIA,
		(SELECT ESP.CGESP_NOMBRE FROM SII.CGG_ESPECIALIDAD ESP WHERE ESP.CGESP_CODIGO =BEC.CGESP_CODIGO) AS CGESP_NOMBRE,
		(SELECT CDTBC_CODIGO FROM SII.CGG_DHU_TIPO_BECA TBC WHERE TBC.CDTBC_CODIGO = BEC.CDTBC_CODIGO) AS CDTBC_CODIGO,
		(SELECT CDTBC_NOMBRE FROM SII.CGG_DHU_TIPO_BECA TBC WHERE TBC.CDTBC_CODIGO = BEC.CDTBC_CODIGO) AS CDBEC_TIPO_BECA,
		BEC.CDBEC_FUNCIONARIO,
		BEC.CDBEC_NUMERO_CONVENIO, 
		BEC.CDBEC_TIPO_CICLO,
		BEC.CDBEC_TOTAL_CICLOS
	FROM SII.CGG_DHU_BECA BEC
	INNER JOIN SII.CGG_RES_PERSONA PER ON (PER.CRPER_CODIGO=BEC.CRPER_CODIGO)
	WHERE BEC.CDBEC_ESTADO = TRUE AND (CDBEC_ESTADO_APROBACION=1 OR CDBEC_ESTADO_APROBACION=2)
	AND (PER.CRPER_NUM_DOC_IDENTIFIC=IN_CRPER_NUM_DOC_IDENTIFIC 
	OR PER.CRPER_NUMERO_RESIDENCIA=IN_CRPER_NUM_DOC_IDENTIFIC);
	RETURN NEXT TMP_REF;
	END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;




---FUNCION QUE SELECCIONA LOS ADJUNTOS DE UN SEGUIMIENTO ACADEMICO
/**
* FUNCION F_CGG_DHU_SADJUNTO_CERTIFICADO_BECA
* SELECCIONA UN REGISTROS DE LA TABLA SII.CGG_DHU_SADJUNTO. 
* @param IN_CDADC_CODIGO CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/

CREATE OR REPLACE FUNCTION f_cgg_dhu_sadjunto_certificado_beca(in_cdacd_codigo character varying)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
	    BC.CDTBC_CODIGO, 
		BC.CDTCA_CODIGO, 
		CMO.CDTCA_NOMBRE, 
		BC.CDBCR_CODIGO,
		BC.CDBCR_OBLIGATORIO,
               SAD.CDSAD_FECHA_REGISTRO, 
		SAD.CDSAD_NOMBRE_ADJUNTO,
		SAD.CDSAD_CODIGO, 
		SAD.CDSAD_ADJUNTO, 
		SAD.CDSAD_OBSERVACION, 		
		BC.CDBCR_ESTADO, 
		BC.CDBCR_FECHA_INSERT, 
		BC.CDBCR_USUARIO_INSERT, 
		BC.CDBCR_FECHA_UPDATE, 
		BC.CDBCR_USUARIO_UPDATE
	FROM SII.CGG_DHU_BECA_CERTIFICADO BC
	INNER JOIN SII.CGG_DHU_TIPO_BECA TB ON (BC.CDTBC_CODIGO=TB.CDTBC_CODIGO)
	LEFT JOIN SII.CGG_DHU_TIPO_CACADEMICO CMO ON (BC.CDTCA_CODIGO=CMO.CDTCA_CODIGO)
	LEFT JOIN SII.CGG_DHU_SADJUNTO SAD ON (SAD.CDBCR_CODIGO=BC.CDBCR_CODIGO)
	WHERE BC.CDBCR_ESTADO = TRUE AND 
		CDACD_CODIGO = IN_CDACD_CODIGO;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100
  ROWS 1000;


/**
* FUNCION f_cgg_dhu_numero_ciclo
* SELECCIONA UN REGISTROS DE LA TABLA SII.CGG_DHU_SEGUIMIENTO_ACADEMICO.
* @param IN_CDBEC_CODIGO CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION f_cgg_dhu_numero_ciclo(IN_CDBEC_CODIGO character varying)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR 
	SELECT (SELECT SAC.CDACD_NUMERO_CICLO		
		FROM SII.CGG_DHU_SEGUIMIENTO_ACADEMICO SAC
		INNER JOIN SII.CGG_DHU_BECA BEC ON(BEC.CDBEC_CODIGO=SAC.CDBEC_CODIGO)
		WHERE SAC.CDACD_ESTADO_APROBACION=4 AND BEC.CDBEC_ESTADO_APROBACION=2 AND BEC.CDBEC_CODIGO=IN_CDBEC_CODIGO) AS CDACD_NUMERO_CICLO,
		(SELECT COUNT(SAC.CDACD_CODIGO) FROM CGG_DHU_SEGUIMIENTO_ACADEMICO SAC WHERE SAC.CDBEC_CODIGO = IN_CDBEC_CODIGO AND SAC.CDACD_ESTADO=TRUE )AS NUM_SEGUIMIENTOS;	
	RETURN NEXT TMP_REF;
	END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100
  ROWS 1000;


