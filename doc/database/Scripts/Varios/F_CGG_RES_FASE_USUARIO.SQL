

/**
* FUNCION SII.F_CGG_RES_FASE_USUARIO_ALL_S_CGG_RES_FASE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_FASE_USUARIO QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_RES_FASEY CON LA TABLA.
* @param IN_CRFAS_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE FASES
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_FASE_USUARIO_ALL_S_CGG_RES_FASE(
IN IN_CRFAS_CODIGO SII.CGG_RES_FASE_USUARIO.CRFAS_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		FASU.CRFSU_CODIGO, 
		FASU.CUSU_CODIGO, 
		FASU.CRFAS_CODIGO,
		CUSU.CUSU_NOMBRE_USUARIO AS CRFSU_IDENTIFICACION,
		CRPER.CRPER_NOMBRES||' '||CRPER.CRPER_APELLIDO_PATERNO||' '||COALESCE(CRPER.CRPER_APELLIDO_MATERNO,'') AS CRFSU_NOMBRE,
		FASU.CRFSU_ACTIVO,
		ISLA.CISLA_CODIGO,
		ISLA.CISLA_NOMBRE
	FROM SII.CGG_RES_FASE_USUARIO FASU
	INNER JOIN SII.CGG_USUARIO CUSU ON
	(FASU.CUSU_CODIGO = CUSU.CUSU_CODIGO)
	INNER JOIN SII.CGG_RES_PERSONA CRPER ON
	(CRPER.CRPER_CODIGO = CUSU.CRPER_CODIGO)
	INNER JOIN SII.CGG_ISLA ISLA ON
	(ISLA.CISLA_CODIGO = CUSU.CISLA_CODIGO )
	WHERE FASU.CRFSU_ESTADO = TRUE AND 
		FASU.CRFAS_CODIGO = IN_CRFAS_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

