/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INGRESO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INGRESO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
TMP_REF REFCURSOR;
--DIAS AUTORIZADOS DE PERMANENCIA EN LA PROVINCIA COMO TURISTA O TRANSEUNTE
TMP_DIAS_AUTORIZADOS INT;
BEGIN
	SELECT CGCNF_VALOR_NUMERICO INTO TMP_DIAS_AUTORIZADOS FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = 'CONF18';
	OPEN TMP_REF FOR EXECUTE
	'SELECT		
		MV.CRMOV_CODIGO, 			
		RG.CTREG_CODIGO, 		
		PR.CRPER_CODIGO,
		RG.CTREG_CODIGO_BARRAS,
		RG.CRALN_CODIGO, 
		ARL.CRALN_NOMBRE AEROLINEA,		
		RG.CARPT_CODIGO, 
		ARO.CARPT_NOMBRE AEROPUER_ORIGEN,
		RG.CGG_CARPT_CODIGO, 
		ARD.CARPT_NOMBRE AEROPUER_DESTINO,
		RG.CTREG_FECHA_INGRESO, 		
		RG.CTREG_FECHA_SALIDA, 					
		PR.CRDID_CODIGO,
		(SELECT CRDID_DESCRIPCION FROM  CGG_RES_DOCUMENTO_IDENTIFICACIO DI WHERE DI.CRDID_CODIGO = PR.CRDID_CODIGO) DOCUMENTO,
		PR.CRPER_NUM_DOC_IDENTIFIC,
		PR.CRPER_NOMBRES,
		PR.CRPER_APELLIDO_PATERNO,
		PR.CRPER_GENERO,
		PR.CRPER_FECHA_NACIMIENTO,
		PR.CPAIS_CODIGO,
		(SELECT CPAIS_NOMBRE FROM  CGG_PAIS PS WHERE PS.CPAIS_CODIGO = PR.CGG_CPAIS_CODIGO) PAIS_RESIDENCIA,
		PR.CGNCN_CODIGO,
		(SELECT CGNCN_NACIONALIDAD FROM  CGG_NACIONALIDAD NC WHERE NC.CGNCN_CODIGO = PR.CGNCN_CODIGO) NACIONALIDAD,
		RG.CRTRA_CODIGO,
		(SELECT CRTRA_NUMERO FROM SII.CGG_RES_TRAMITE TR WHERE TR.CRTRA_CODIGO = RG.CRTRA_CODIGO) CRTRA_NUMERO,
		MV.CRMOV_FECHA_VIAJE, 
		MV.CRMOV_TIPO_OPERACION, 
		MV.CRMOV_NUMERO_VUELO, 
		MV.CRMOV_OBSERVACION, 	
		MV.CRMOV_TIPO_SALIDA,
		TST.CRTST_DESCRIPCION TIPO_RESIDENCIA,	
		RG.CTREG_ESTADO_REGISTRO,
		MV.CRMOV_FILTRO_INTERNO,
		EXTRACT(DAY FROM (CURRENT_TIMESTAMP - MV.CRMOV_FECHA_VIAJE)) ESTADIA,
		CASE WHEN ('||TMP_DIAS_AUTORIZADOS||' - EXTRACT(DAY FROM (CURRENT_TIMESTAMP - MV.CRMOV_FECHA_VIAJE))) < 0 THEN ABS('||TMP_DIAS_AUTORIZADOS||' - EXTRACT(DAY FROM (CURRENT_TIMESTAMP - MV.CRMOV_FECHA_VIAJE))) ELSE 0 END EXCESO
	FROM SII.CGG_RES_PERSONA PR
	INNER JOIN SII.CGG_RES_MOVILIDAD MV ON MV.CRPER_CODIGO = PR.CRPER_CODIGO AND MV.CRMOV_ESTADO AND MV.CRMOV_TIPO_OPERACION = 0
	INNER JOIN SII.CGG_TCT_REGISTRO RG ON RG.CTREG_CODIGO = MV.CTREG_CODIGO AND NOT RG.CTREG_COMPLETO
	LEFT JOIN SII.CGG_RES_AEROPUERTO ARO ON ARO.CARPT_CODIGO = RG.CARPT_CODIGO
	INNER JOIN SII.CGG_RES_AEROPUERTO ARD ON ARD.CARPT_CODIGO = MV.CGG_CARPT_CODIGO
	INNER JOIN SII.CGG_RES_AEROLINEA ARL ON ARL.CRALN_CODIGO = RG.CRALN_CODIGO
	INNER JOIN SII.CGG_RES_RESIDENCIA RS ON RS.CRPER_CODIGO = PR.CRPER_CODIGO AND RS.CRRSD_VIGENTE AND RS.CRRSD_ESTADO AND 
		RS.CRTST_CODIGO IN 
		(WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
			SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE (CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
			FROM CGG_CONFIGURACION
			WHERE CGCNF_CODIGO = ''05'') OR CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
			FROM CGG_CONFIGURACION
			WHERE CGCNF_CODIGO = ''06'')) 
			UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
			WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
		) SELECT CRTST_CODIGO  FROM TIPO)
	INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = RS.CRTST_CODIGO
	WHERE (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	CASE WHEN RG.CTREG_CODIGO_BARRAS IS NULL THEN '''' ELSE RG.CTREG_CODIGO_BARRAS END ||'' ''||
	CASE WHEN RG.CTREG_FECHA_INGRESO IS NULL THEN CURRENT_TIMESTAMP ELSE RG.CTREG_FECHA_INGRESO END ||'' ''||
	CASE WHEN RG.CTREG_FECHA_SALIDA IS NULL THEN CURRENT_TIMESTAMP ELSE RG.CTREG_FECHA_SALIDA END ||'' ''||	
	CASE WHEN PR.CRDID_CODIGO IS NULL THEN '''' ELSE PR.CRDID_CODIGO END ||'' ''||
	ARO.CARPT_NOMBRE||'' ''||
	ARD.CARPT_NOMBRE||'' ''||
	ARL.CRALN_NOMBRE||'' ''||
	CASE WHEN PR.CRPER_NUM_DOC_IDENTIFIC IS NULL THEN '''' ELSE PR.CRPER_NUM_DOC_IDENTIFIC END ||'' ''||
	CASE WHEN PR.CRPER_NOMBRES IS NULL THEN '''' ELSE PR.CRPER_NOMBRES END ||'' ''||
	CASE WHEN PR.CRPER_APELLIDO_PATERNO IS NULL THEN '''' ELSE PR.CRPER_APELLIDO_PATERNO END ||'' ''||
	CASE WHEN PR.CRPER_GENERO IS NULL THEN 0 ELSE PR.CRPER_GENERO END ||'' ''||
	CASE WHEN PR.CRPER_FECHA_NACIMIENTO IS NULL THEN CURRENT_TIMESTAMP ELSE PR.CRPER_FECHA_NACIMIENTO END ||'' ''||	
	CASE WHEN MV.CRMOV_FECHA_VIAJE IS NULL THEN CURRENT_TIMESTAMP ELSE MV.CRMOV_FECHA_VIAJE END ||'' ''||
	CASE WHEN MV.CRMOV_TIPO_OPERACION IS NULL THEN 0 ELSE MV.CRMOV_TIPO_OPERACION END ||'' ''||
	CASE WHEN MV.CRMOV_NUMERO_VUELO IS NULL THEN '''' ELSE MV.CRMOV_NUMERO_VUELO END ||'' ''||
	CASE WHEN MV.CRMOV_OBSERVACION IS NULL THEN '''' ELSE MV.CRMOV_OBSERVACION END ) = 1) 
	LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	--	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INGRESO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_PERSONA PR
	INNER JOIN SII.CGG_RES_MOVILIDAD MV ON MV.CRPER_CODIGO = PR.CRPER_CODIGO AND MV.CRMOV_TIPO_OPERACION = 0
	INNER JOIN SII.CGG_TCT_REGISTRO RG ON RG.CTREG_CODIGO = MV.CTREG_CODIGO AND NOT RG.CTREG_COMPLETO
	INNER JOIN SII.CGG_RES_AEROPUERTO ARO ON ARO.CARPT_CODIGO = RG.CARPT_CODIGO
	INNER JOIN SII.CGG_RES_AEROPUERTO ARD ON ARD.CARPT_CODIGO = MV.CGG_CARPT_CODIGO
	INNER JOIN SII.CGG_RES_AEROLINEA ARL ON ARL.CRALN_CODIGO = RG.CRALN_CODIGO
	LEFT JOIN SII.CGG_RES_RESIDENCIA RS ON RS.CRPER_CODIGO = PR.CRPER_CODIGO AND RS.CRRSD_ESTADO AND 
		RS.CRTST_CODIGO IN 
		(WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
			SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE (CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
			FROM CGG_CONFIGURACION
			WHERE CGCNF_CODIGO = '05') OR CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
			FROM CGG_CONFIGURACION
			WHERE CGCNF_CODIGO = '06'))
			UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
			WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
		) SELECT CRTST_CODIGO  FROM TIPO)
	WHERE MV.CRMOV_ESTADO AND (LENGTH(IN_FIND_TEXT) = 0 OR SII.F_STRING_IN(IN_FIND_TEXT,
		CASE WHEN RG.CTREG_CODIGO_BARRAS IS NULL THEN '''' ELSE RG.CTREG_CODIGO_BARRAS END ||' '||
		CASE WHEN RG.CTREG_FECHA_INGRESO IS NULL THEN CURRENT_TIMESTAMP ELSE RG.CTREG_FECHA_INGRESO END ||' '||
		CASE WHEN RG.CTREG_FECHA_SALIDA IS NULL THEN CURRENT_TIMESTAMP ELSE RG.CTREG_FECHA_SALIDA END ||' '||	
		CASE WHEN PR.CRPER_NUM_DOC_IDENTIFIC IS NULL THEN '' ELSE PR.CRPER_NUM_DOC_IDENTIFIC END ||' '||
		CASE WHEN PR.CRPER_NOMBRES IS NULL THEN '' ELSE PR.CRPER_NOMBRES END ||' '||
		ARO.CARPT_NOMBRE||' '||
		ARD.CARPT_NOMBRE||' '||
		ARL.CRALN_NOMBRE||' '||
		CASE WHEN PR.CRPER_APELLIDO_PATERNO IS NULL THEN '' ELSE PR.CRPER_APELLIDO_PATERNO END ||' '||
		CASE WHEN PR.CRPER_GENERO IS NULL THEN 0 ELSE PR.CRPER_GENERO END ||' '||
		CASE WHEN PR.CRPER_FECHA_NACIMIENTO IS NULL THEN CURRENT_TIMESTAMP ELSE PR.CRPER_FECHA_NACIMIENTO END ||' '||	
		CASE WHEN MV.CRMOV_FECHA_VIAJE IS NULL THEN CURRENT_TIMESTAMP ELSE MV.CRMOV_FECHA_VIAJE END ||' '||
		CASE WHEN MV.CRMOV_TIPO_OPERACION IS NULL THEN 0 ELSE MV.CRMOV_TIPO_OPERACION END ||' '||
		CASE WHEN MV.CRMOV_NUMERO_VUELO IS NULL THEN '' ELSE MV.CRMOV_NUMERO_VUELO END ||' '||
		CASE WHEN MV.CRMOV_OBSERVACION IS NULL THEN '' ELSE MV.CRMOV_OBSERVACION END ) = 1);
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;