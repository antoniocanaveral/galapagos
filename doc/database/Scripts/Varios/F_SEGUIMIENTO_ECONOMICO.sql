

/**
* FUNCION f_cgg_dhu_seguimiento_academico_consulta
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_DHU_SEGUIMIENTO_ACADEMICO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.f_cgg_dhu_seguimiento_academico_consulta(
in_user_name character varying, 
in_start_index integer, 
in_limit integer, 
in_sort_field_name character varying, 
in_direction character varying, 
in_find_text text)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT 
	 
		SAC.CDBEC_CODIGO, 
		SAC.CDACD_CODIGO,
		PER.CRPER_NOMBRES, 
		TB.CDTBC_CODIGO, 
		TB.CDTBC_NOMBRE,
		(PER.CRPER_APELLIDO_PATERNO||'' ''||PER.CRPER_APELLIDO_MATERNO) AS CRPER_APELLIDOS_PERSONA,
		PER.CRPER_NUM_DOC_IDENTIFIC, 
		PER.CRPER_NUMERO_RESIDENCIA, 
		BEC.CDBEC_NUMERO_CONVENIO, 
		BEC.CDBEC_FUNCIONARIO,
		ESP.CGESP_NOMBRE,
		BEC.CDBEC_TIPO_CICLO,
		SAC.CDACD_NUMERO_CICLO, 
		SAC.CDACD_FECHA_INICIO, 
		SAC.CDACD_FECHA_FIN, 
		SAC.CDACD_OBSERVACION, 
		SAC.CDACD_ESTADO_APROBACION, 
		SAC.CDACD_ESTADO, 
		SAC.CDACD_FECHA_INSERT, 
		SAC.CDACD_USUARIO_INSERT, 
		SAC.CDACD_FECHA_UPDATE, 
		SAC.CDACD_USUARIO_UPDATE
	FROM SII.CGG_DHU_SEGUIMIENTO_ACADEMICO SAC
	INNER JOIN SII.CGG_DHU_BECA BEC ON(BEC.CDBEC_CODIGO=SAC.CDBEC_CODIGO)
	INNER JOIN SII.CGG_RES_PERSONA PER ON(PER.CRPER_CODIGO=BEC.CRPER_CODIGO)
	INNER JOIN SII.CGG_DHU_TIPO_BECA TB ON (BEC.CDTBC_CODIGO=TB.CDTBC_CODIGO)
	INNER JOIN SII.CGG_ESPECIALIDAD ESP ON(ESP.CGESP_CODIGO =BEC.CGESP_CODIGO)
	WHERE CDACD_ESTADO = TRUE AND SAC.CDACD_ESTADO_APROBACION=3  AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	CASE WHEN SAC.CDBEC_CODIGO IS NULL THEN '''' ELSE SAC.CDBEC_CODIGO END ||'' ''||
	CASE WHEN CDACD_CODIGO IS NULL THEN '''' ELSE CDACD_CODIGO END ||'' ''||
	CASE WHEN PER.CRPER_NOMBRES IS NULL THEN '''' ELSE PER.CRPER_NOMBRES END ||'' ''||
	CASE WHEN TB.CDTBC_NOMBRE IS NULL THEN '''' ELSE TB.CDTBC_NOMBRE END||'' ''||
	CASE WHEN PER.CRPER_APELLIDO_PATERNO IS NULL THEN '''' ELSE PER.CRPER_APELLIDO_PATERNO END ||'' ''||
	CASE WHEN PER.CRPER_APELLIDO_MATERNO IS NULL THEN '''' ELSE PER.CRPER_APELLIDO_MATERNO END ||'' ''||
	CASE WHEN PER.CRPER_NUM_DOC_IDENTIFIC IS NULL THEN '''' ELSE PER.CRPER_NUM_DOC_IDENTIFIC END ||'' ''||
	CASE WHEN PER.CRPER_NUMERO_RESIDENCIA IS NULL THEN '''' ELSE PER.CRPER_NUMERO_RESIDENCIA END ||'' ''||
	CASE WHEN BEC.CDBEC_NUMERO_CONVENIO IS NULL THEN '''' ELSE BEC.CDBEC_NUMERO_CONVENIO END ||'' ''||
	CASE WHEN BEC.CDBEC_FUNCIONARIO IS NULL THEN '''' ELSE BEC.CDBEC_FUNCIONARIO END ||'' ''||
	CASE WHEN ESP.CGESP_NOMBRE IS NULL THEN '''' ELSE ESP.CGESP_NOMBRE END ||'' ''||
	CASE WHEN CDACD_NUMERO_CICLO IS NULL THEN 0 ELSE CDACD_NUMERO_CICLO END ||'' ''||
	CASE WHEN CDACD_FECHA_INICIO IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_INICIO END ||'' ''||
	CASE WHEN CDACD_FECHA_FIN IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_FIN END ||'' ''||
	CASE WHEN CDACD_OBSERVACION IS NULL THEN '''' ELSE CDACD_OBSERVACION END ||'' ''||
	CASE WHEN CDACD_ESTADO_APROBACION IS NULL THEN 0 ELSE CDACD_ESTADO_APROBACION END ||'' ''||
	CASE WHEN CDACD_ESTADO IS NULL THEN FALSE ELSE CDACD_ESTADO END ||'' ''||
	CASE WHEN CDACD_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_INSERT END ||'' ''||
	CASE WHEN CDACD_USUARIO_INSERT IS NULL THEN '''' ELSE CDACD_USUARIO_INSERT END ||'' ''||
	CASE WHEN CDACD_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_UPDATE END ||'' ''||
	CASE WHEN CDACD_USUARIO_UPDATE IS NULL THEN '''' ELSE CDACD_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100
  ROWS 1000;


/**FUNCTION: f_cgg_dhu_seguimiento_academico_consulta_count
* CONTABILIZA N REGISTROS DE LA TABLA SII.CGG_DHU_SEGUIMIENTO_ACADEMICO.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TMP_ROWS
*/
CREATE OR REPLACE FUNCTION SII.f_cgg_dhu_seguimiento_academico_consulta_count(in_find_text text)
RETURNS integer AS
$BODY$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_SEGUIMIENTO_ACADEMICO SAC
	INNER JOIN SII.CGG_DHU_BECA BEC ON(BEC.CDBEC_CODIGO=SAC.CDBEC_CODIGO)
	INNER JOIN SII.CGG_RES_PERSONA PER ON(PER.CRPER_CODIGO=BEC.CRPER_CODIGO)
	INNER JOIN SII.CGG_DHU_TIPO_BECA TB ON (BEC.CDTBC_CODIGO=TB.CDTBC_CODIGO)
	INNER JOIN SII.CGG_ESPECIALIDAD ESP ON(ESP.CGESP_CODIGO =BEC.CGESP_CODIGO)
	WHERE CDACD_ESTADO = TRUE AND SAC.CDACD_ESTADO_APROBACION=3  AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	CASE WHEN SAC.CDBEC_CODIGO IS NULL THEN '''' ELSE SAC.CDBEC_CODIGO END ||' '||
	CASE WHEN CDACD_CODIGO IS NULL THEN '''' ELSE CDACD_CODIGO END ||' '||
	CASE WHEN PER.CRPER_NOMBRES IS NULL THEN '''' ELSE PER.CRPER_NOMBRES END ||' '||
	CASE WHEN TB.CDTBC_NOMBRE IS NULL THEN '''' ELSE TB.CDTBC_NOMBRE END||' '||
	CASE WHEN PER.CRPER_APELLIDO_PATERNO IS NULL THEN '''' ELSE PER.CRPER_APELLIDO_PATERNO END ||' '||
	CASE WHEN PER.CRPER_APELLIDO_MATERNO IS NULL THEN '''' ELSE PER.CRPER_APELLIDO_MATERNO END ||' '||
	CASE WHEN PER.CRPER_NUM_DOC_IDENTIFIC IS NULL THEN '''' ELSE PER.CRPER_NUM_DOC_IDENTIFIC END ||' '||
	CASE WHEN PER.CRPER_NUMERO_RESIDENCIA IS NULL THEN '''' ELSE PER.CRPER_NUMERO_RESIDENCIA END ||' '||
	CASE WHEN BEC.CDBEC_NUMERO_CONVENIO IS NULL THEN '''' ELSE BEC.CDBEC_NUMERO_CONVENIO END ||' '||
	CASE WHEN BEC.CDBEC_FUNCIONARIO IS NULL THEN '''' ELSE BEC.CDBEC_FUNCIONARIO END ||' '||
	CASE WHEN ESP.CGESP_NOMBRE IS NULL THEN '''' ELSE ESP.CGESP_NOMBRE END ||' '||
	CASE WHEN CDACD_NUMERO_CICLO IS NULL THEN 0 ELSE CDACD_NUMERO_CICLO END ||' '||
	CASE WHEN CDACD_FECHA_INICIO IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_INICIO END ||' '||
	CASE WHEN CDACD_FECHA_FIN IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_FIN END ||' '||
	CASE WHEN CDACD_OBSERVACION IS NULL THEN '''' ELSE CDACD_OBSERVACION END ||' '||
	CASE WHEN CDACD_ESTADO_APROBACION IS NULL THEN 0 ELSE CDACD_ESTADO_APROBACION END ||' '||
	CASE WHEN CDACD_ESTADO IS NULL THEN FALSE ELSE CDACD_ESTADO END ||' '||
	CASE WHEN CDACD_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_INSERT END ||' '||
	CASE WHEN CDACD_USUARIO_INSERT IS NULL THEN '''' ELSE CDACD_USUARIO_INSERT END ||' '||
	CASE WHEN CDACD_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CDACD_FECHA_UPDATE END ||' '||
	CASE WHEN CDACD_USUARIO_UPDATE IS NULL THEN '''' ELSE CDACD_USUARIO_UPDATE END ) = 1;
	RETURN TMP_ROWS;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;


---FUNCION QUE SELECCIONA LOSA REGISTROS DE UN SEGUIMIENTO ACADEMICO
/**
* FUNCION F_CGG_DHU_SEGUIMIENTO_ACADEMICO_BECA
* SELECCIONA UN REGISTROS DE LA TABLA SII.CGG_DHU_SEGUIMIENTO_ACADEMICO.
* @param IN_CRPER_NUM_DOC_IDENTIFIC CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_SEGUIMIENTO_ACADEMICO_BECA(IN_CRPER_NUM_DOC_IDENTIFIC CHARACTER VARYING)
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT 
	 
		SAC.CDBEC_CODIGO, 
		SAC.CDACD_CODIGO,
		PER.CRPER_NOMBRES, 
		TB.CDTBC_CODIGO, 
		TB.CDTBC_NOMBRE,
		(SELECT PR.CRPER_APELLIDO_PATERNO||' '||PR.CRPER_APELLIDO_MATERNO FROM SII.CGG_RES_PERSONA PR WHERE PR.CRPER_CODIGO = BEC.CRPER_CODIGO) AS CRPER_APELLIDOS_PERSONA,
		PER.CRPER_NUM_DOC_IDENTIFIC, 
		PER.CRPER_NUMERO_RESIDENCIA, 
		BEC.CDBEC_NUMERO_CONVENIO, 
		BEC.CDBEC_FUNCIONARIO,
		(SELECT ESP.CGESP_NOMBRE FROM SII.CGG_ESPECIALIDAD ESP WHERE ESP.CGESP_CODIGO =BEC.CGESP_CODIGO) AS CGESP_NOMBRE,
		BEC.CDBEC_TIPO_CICLO,
		SAC.CDACD_NUMERO_CICLO, 
		SAC.CDACD_FECHA_INICIO, 
		SAC.CDACD_FECHA_FIN, 
		SAC.CDACD_OBSERVACION, 
		SAC.CDACD_ESTADO_APROBACION, 
		SAC.CDACD_ESTADO, 
		SAC.CDACD_FECHA_INSERT, 
		SAC.CDACD_USUARIO_INSERT, 
		SAC.CDACD_FECHA_UPDATE, 
		SAC.CDACD_USUARIO_UPDATE
	FROM SII.CGG_DHU_SEGUIMIENTO_ACADEMICO SAC
	INNER JOIN SII.CGG_DHU_BECA BEC ON(BEC.CDBEC_CODIGO=SAC.CDBEC_CODIGO)
	INNER JOIN SII.CGG_RES_PERSONA PER ON(PER.CRPER_CODIGO=BEC.CRPER_CODIGO)
	INNER JOIN SII.CGG_DHU_TIPO_BECA TB ON (BEC.CDTBC_CODIGO=TB.CDTBC_CODIGO)
	WHERE CDACD_ESTADO = TRUE and PER.CRPER_NUM_DOC_IDENTIFIC=IN_CRPER_NUM_DOC_IDENTIFIC AND SAC.CDACD_ESTADO_APROBACION=3 AND BEC.CDBEC_ESTADO_APROBACION=1;

	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;

/**
* FUNCION f_cgg_dhu_seguimiento_academico_estado_update
* ACTUALIZA UN REGISTRO EN LA TABLA SII.CGG_DHU_SEGUIMIENTO_ACADEMICO.
* @param IN_CAACD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO SEGUIMIENTO ACADEMICO
* @param IN_CDACD_ESTADO_APROBACION IDENTIFICATIVO UNICO DE REGISTRO 
0 - REGISTRADO
1 - REPROBADO
2 - POR APROBAR
3 - APROBADO
4 - CERTIFICADO
5 - OTROS
* @param IN_CDACD_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.f_cgg_dhu_seguimiento_academico_estado_update(
in_cdacd_codigo character varying, 
in_cdacd_estado_aprobacion smallint, 
in_cdacd_usuario_update character varying)
  RETURNS void AS
$BODY$
BEGIN
	UPDATE SII.CGG_DHU_SEGUIMIENTO_ACADEMICO SET		
		CDACD_ESTADO_APROBACION= IN_CDACD_ESTADO_APROBACION, 		
		CDACD_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CDACD_USUARIO_UPDATE = IN_CDACD_USUARIO_UPDATE
	WHERE
		CDACD_CODIGO = IN_CDACD_CODIGO;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;


