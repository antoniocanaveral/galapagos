/**
* FUNCION F_CGG_RES_PERSONA_EXPEDIENTE_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_PRESTAMO_EXPEDIENTE.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/

CREATE OR REPLACE FUNCTION F_CGG_RES_PERSONA_EXPEDIENTE_SELECT(IN_USER_NAME CHARACTER VARYING, IN_START_INDEX INTEGER, IN_LIMIT INTEGER, IN_SORT_FIELD_NAME CHARACTER VARYING, IN_DIRECTION CHARACTER VARYING, IN_FIND_TEXT TEXT)
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT DISTINCT PER.CRPER_CODIGO,(PER.CRPER_NOMBRES||'' ''||PER.CRPER_APELLIDO_PATERNO||''''||PER.CRPER_APELLIDO_MATERNO)AS CRPER_NOMBRE_PERSONA,
		PER.CRPER_NUM_DOC_IDENTIFIC,
		PER.CRPER_NUMERO_EXPEDIENTE,
		PER.CRPER_FECHA_ARCHIVO,
		PEX.CRPEX_CODIGO,
	        PEX.CGG_CRPER_CODIGO,
		(SELECT PEN.CRPER_NOMBRES||'' ''||PEN.CRPER_APELLIDO_PATERNO||'' ''||PEN.CRPER_APELLIDO_MATERNO FROM SII.CGG_RES_PERSONA PEN WHERE PEN.CRPER_CODIGO=PEX.CGG_CRPER_CODIGO)AS CRPER_NOMBRE_REALIZA,
		(SELECT DISTINCT PRES.CRPEX_MOVIMIENTO FROM CGG_RES_PRESTAMO_EXPEDIENTE PRES
		WHERE PRES.CRPER_CODIGO = PER.CRPER_CODIGO LIMIT 1) AS CRPEX_MOVIMIENTO,
		(SELECT  MAX(PRES.CRPEX_FECHA_OPERACION) FROM CGG_RES_PRESTAMO_EXPEDIENTE PRES
		WHERE PRES.CRPER_CODIGO = PER.CRPER_CODIGO) AS CRPEX_FECHA_OPERACION,
		CRPER_ESTADO, 
		CRPER_FECHA_INSERT, 
		CRPER_USUARIO_INSERT, 
		CRPER_FECHA_UPDATE, 
		CRPER_USUARIO_UPDATE
		FROM SII.CGG_RES_PERSONA PER
		LEFT JOIN SII.CGG_RES_PRESTAMO_EXPEDIENTE PEX
		ON (PER.CRPER_CODIGO = PEX.CRPER_CODIGO)
		WHERE PER.CRPER_NUMERO_EXPEDIENTE IS NOT NULL AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
		CASE WHEN CRPER_ESTADO IS NULL THEN FALSE ELSE CRPER_ESTADO END ||'' ''||
		CASE WHEN CRPER_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CRPER_FECHA_INSERT END ||'' ''||CASE WHEN CRPER_USUARIO_INSERT IS NULL THEN '''' ELSE CRPER_USUARIO_INSERT END ||'' ''||CASE WHEN CRPER_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CRPER_FECHA_UPDATE END ||'' ''||CASE WHEN CRPER_USUARIO_UPDATE IS NULL THEN '''' ELSE CRPER_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;
