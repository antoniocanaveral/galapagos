/**
* FUNCION SII.F_CGG_RES_COMUNICADO_SELECT_REMITENTE
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_COMUNICADO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_COMUNICADO_SELECT_REMITENTE(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
	TMP_COUNT INT;
BEGIN
	SELECT COUNT(U.CUSU_CODIGO) INTO TMP_COUNT FROM SII.CGG_USUARIO U
	INNER JOIN SII.CGG_SEC_USUARIO_ROL SRL ON SRL.CUSU_CODIGO = U.CUSU_CODIGO AND SRL.CSPER_ESTADO AND SRL.CSROL_CODIGO = '1'
	WHERE U.CUSU_NOMBRE_USUARIO = IN_USER_NAME;
	OPEN TMP_REF FOR EXECUTE
	'SELECT * FROM 
		(SELECT
			CRCOM_CODIGO, 
			RES.CRRES_CODIGO, 
			RES.CRRES_NUMERO_RESOLUCION, 
			COM.CRPER_CODIGO, 
			COM.CGG_CRPER_CODIGO,
			COM.CRPJR_CODIGO, 
			CASE 
				WHEN COM.CRPER_CODIGO IS NOT NULL THEN
					(COALESCE(PER1.CRPER_NOMBRES,'''')||'' ''||COALESCE(PER1.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PER1.CRPER_APELLIDO_MATERNO,'''')) 
				ELSE 
					PJ.CRPJR_RAZON_SOCIAL
			END
			AS CRCOM_REMITENTE,
			COM.CRCOM_DESTINATARIO, 
			COM.CRCOM_ASUNTO, 
			COM.CRCOM_FECHA_RECEPCION, 
			COM.CRCOM_FECHA_REVISION, 
			COM.CRCOM_NUMERO_DOCUMENTO, 
			COM.CRCOM_DESCRIPCION, 
			COM.CRCOM_OBSERVACION, 
			COM.CRCOM_DESCRIPCION_ADJUNTO, 
			COM.CRCOM_NOMBRE_ADJUNTO,
			COM.CRCOM_ESTADO_COMUNICADO, 
			COM.CRCOM_ESTADO, 
			COM.CRCOM_FECHA_INSERT, 
			COM.CRCOM_USUARIO_INSERT, 
			COM.CRCOM_FECHA_UPDATE, 
			COM.CRCOM_USUARIO_UPDATE
		FROM SII.CGG_RES_COMUNICADO COM
		LEFT JOIN SII.CGG_RES_RESOLUCION RES ON (RES.CRRES_CODIGO = COM.CRRES_CODIGO)
		LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJ ON PJ.CRPJR_CODIGO = COM.CRPJR_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA PER1 ON PER1.CRPER_CODIGO = COM.CRPER_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA PER ON PER.CRPER_CODIGO = COM.CGG_CRPER_CODIGO
		LEFT JOIN SII.CGG_USUARIO USU ON USU.CRPER_CODIGO = PER.CRPER_CODIGO
		WHERE ('||TMP_COUNT||' > 0 OR COM.CRCOM_USUARIO_INSERT = '||QUOTE_LITERAL(IN_USER_NAME)||' OR USU.CUSU_NOMBRE_USUARIO = '||QUOTE_LITERAL(IN_USER_NAME)||')
	) AS CGG_RES_COMUNICADO
	WHERE CRCOM_ESTADO AND (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('''||IN_FIND_TEXT||''',
		COALESCE(CRCOM_DESTINATARIO, '''')||'' ''||
		COALESCE(CRCOM_REMITENTE, '''')||'' ''||
		COALESCE(CRCOM_ASUNTO, '''')||'' ''||
		COALESCE(CRCOM_FECHA_RECEPCION, CURRENT_TIMESTAMP)||'' ''||
		COALESCE(CRCOM_FECHA_REVISION, CURRENT_TIMESTAMP)||'' ''||
		COALESCE(CRCOM_NUMERO_DOCUMENTO, '''')||'' ''||
		COALESCE(CRCOM_DESCRIPCION, '''')||'' ''||
		COALESCE(CRCOM_OBSERVACION, '''')||'' ''||
		COALESCE(CRCOM_DESCRIPCION_ADJUNTO, '''')||'' ''||
		COALESCE(CRCOM_ESTADO_COMUNICADO, 0)) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_RES_COMUNICADO_REMITENTE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_COMUNICADO.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_COMUNICADO_REMITENTE_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM (SELECT
		CRCOM_CODIGO, 
		CRRES_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPER_CODIGO,
		COM.CRPJR_CODIGO, 
		CASE 
			WHEN CRPER_CODIGO IS NOT NULL THEN
				(SELECT CRPER_NOMBRES ||' '|| CRPER_APELLIDO_PATERNO||' '||CRPER_APELLIDO_MATERNO FROM SII.CGG_RES_PERSONA PER WHERE PER.CRPER_CODIGO = COM.CRPER_CODIGO) 
			ELSE 
				(SELECT CRPJR_RAZON_SOCIAL FROM CGG_RES_PERSONA_JURIDICA PJ WHERE PJ.CRPJR_CODIGO = COM.CRPJR_CODIGO)
		END
		AS CRCOM_REMITENTE,
		CRCOM_DESTINATARIO, 
		CRCOM_ASUNTO, 
		CRCOM_FECHA_RECEPCION, 
		CRCOM_FECHA_REVISION, 
		CRCOM_NUMERO_DOCUMENTO, 
		CRCOM_DESCRIPCION, 
		CRCOM_OBSERVACION, 
		CRCOM_DESCRIPCION_ADJUNTO, 
		CRCOM_NOMBRE_ADJUNTO, 
		NULL AS CRCOM_ADJUNTO, 
		CRCOM_ESTADO_COMUNICADO, 
		CRCOM_ESTADO, 
		CRCOM_FECHA_INSERT, 
		CRCOM_USUARIO_INSERT, 
		CRCOM_FECHA_UPDATE, 
		CRCOM_USUARIO_UPDATE
	FROM SII.CGG_RES_COMUNICADO COM) AS CGG_RES_COMUNICADO 
	WHERE CRCOM_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRCOM_DESTINATARIO, '''')||' '||COALESCE(CRCOM_REMITENTE, '''')||' '||COALESCE(CRCOM_ASUNTO, '''')||' '||COALESCE(CRCOM_FECHA_RECEPCION, CURRENT_TIMESTAMP)||' '||COALESCE(CRCOM_FECHA_REVISION, CURRENT_TIMESTAMP)||' '||COALESCE(CRCOM_NUMERO_DOCUMENTO, '''')||' '||COALESCE(CRCOM_DESCRIPCION, '''')||' '||COALESCE(CRCOM_OBSERVACION, '''')||' '||COALESCE(CRCOM_DESCRIPCION_ADJUNTO, '''')||' '||COALESCE(CRCOM_NOMBRE_ADJUNTO, '''')||' '||COALESCE(CRCOM_REMITENTE, '''')||' '||COALESCE(CRCOM_ESTADO_COMUNICADO, 0)||' '||COALESCE(CRCOM_ESTADO, FALSE)||' '||COALESCE(CRCOM_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRCOM_USUARIO_INSERT, '''')||' '||COALESCE(CRCOM_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRCOM_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

