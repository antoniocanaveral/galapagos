/**
* FUNCION SII.F_CGG_KDX_CIERRE_GENERA_NUMERO
* SELECCIONA EL NUMERO SECUENCIAL CORRESPONDIENTE A UN CIERRE DE CAJA
* BAJO EL CONTROL DE REALIZARLO POR PUNTO DE VENTA.
* @param IN_CUSU_NOMBRE_USUARIO REGISTRO DE USUARIO 
* @return CHARACTER VARYING
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_CIERRE_GENERA_NUMERO(
IN IN_CUSU_NOMBRE_USUARIO CHARACTER VARYING)
  RETURNS CHARACTER VARYING AS
$BODY$
DECLARE
	TMP_SECUENCIA CHARACTER VARYING;
	TMP_ANIO CHARACTER VARYING;
	TMP_ACRONIMO CHARACTER VARYING;	
BEGIN
	/*SELECT COUNT(CKASG_NUMERO_ASIGNACION)+1 INTO TMP_SECUENCIA 
	FROM SII.CGG_KDX_ASIGNACION CKASG
	INNER JOIN SII.CGG_KDX_TRANSFERENCIA CKTRN
	ON (CKASG.CKTRN_CODIGO = CKTRN.CKTRN_CODIGO) 
	WHERE EXTRACT(YEAR FROM CKASG_FECHA_INSERT) = EXTRACT(YEAR FROM CURRENT_TIMESTAMP)
	AND CKTRN.CKPVT_CODIGO = (SELECT CKPVT_CODIGO 
				FROM CGG_KDX_USUARIO_PV UPV1
				INNER JOIN CGG_USUARIO CUSU ON
				(UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
				WHERE CUSU_NOMBRE_USUARIO = IN_CUSU_NOMBRE_USUARIO
				AND UPV1.CKUPV_ESTADO = TRUE
				AND UPV1.CKPVT_ACTIVO = TRUE);*/

SELECT count(CKCRR_CODIGO)+1 INTO TMP_SECUENCIA FROM CGG_KDX_CIERRE
WHERE EXTRACT(YEAR FROM CKCRR_FECHA_INSERT) = EXTRACT(YEAR FROM CURRENT_TIMESTAMP)
	AND CKPVT_CODIGO = (SELECT CKPVT_CODIGO 
				FROM CGG_KDX_USUARIO_PV UPV1
				INNER JOIN CGG_USUARIO CUSU ON
				(UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
				WHERE CUSU_NOMBRE_USUARIO = IN_CUSU_NOMBRE_USUARIO
				AND UPV1.CKUPV_ESTADO = TRUE
				AND UPV1.CKPVT_ACTIVO = TRUE);
	/*SELECT COUNT(CKCRR_CODIGO) + 1 INTO TMP_SECUENCIA FROM CGG_KDX_CIERRE
	WHERE CKCRR_ESTADO = TRUE;*/
	
	--SELECT CGCNF_VALOR_CADENA INTO TMP_ACRONIMO
	--FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = 'CONF11';
	
	SELECT EXTRACT(YEAR FROM CURRENT_TIMESTAMP) INTO TMP_ANIO;
	
	--RETURN  TMP_ACRONIMO||'-'||TMP_ANIO||'-'||LPAD(TMP_SECUENCIA,4,'0');
	RETURN  TMP_ANIO||'-'||LPAD(TMP_SECUENCIA,4,'0');
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;


/**
* FUNCION SII.F_CGG_KDX_CIERRE_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_CIERRE.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_CIERRE_SELECT1(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		DISTINCT
		CKCRR.CKCRR_CODIGO, 
		CKPVT.CKPVT_CODIGO, 
		CKPVT.CKPVT_NOMBRE,
		NULL CKVNT_NUMERO_VENTA,
		CKUPV_CODIGO,
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(CKUPV_CODIGO) CRPER_NOMBRES, 
		CKCRR_FECHA_CIERRE, 
		CKCRR_NUMERO_CIERRE, 
		CKCRR_TOTAL_VENTA, 
		CKCRR_TOTAL, 
		CKCRR_OBSERVACION, 
		CKCRR_DIFERENCIA, 
		CKCRR_ESTADO_CIERRE, 
		CKCRR_ESTADO, 
		CKCRR_FECHA_INSERT, 
		CKCRR_USUARIO_INSERT, 
		CKCRR_FECHA_UPDATE, 
		CKCRR_USUARIO_UPDATE
	FROM SII.CGG_KDX_CIERRE CKCRR
	INNER JOIN CGG_KDX_VENTA_CIERRE CKVCRR ON
	(CKCRR.CKCRR_CODIGO = CKVCRR.CKCRR_CODIGO)
	INNER JOIN CGG_KDX_VENTA CKVNT ON 
	(CKVNT.CKVNT_CODIGO = CKVCRR.CKVNT_CODIGO)
	INNER JOIN CGG_KDX_PUNTO_VENTA CKPVT ON
	(CKCRR.CKPVT_CODIGO = CKPVT.CKPVT_CODIGO)
	WHERE CKCRR_ESTADO = TRUE AND CKCRR.CKPVT_CODIGO = (SELECT CKPVT_CODIGO 
				FROM CGG_KDX_USUARIO_PV UPV1
				INNER JOIN CGG_USUARIO CUSU ON
				(UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
				WHERE CUSU_NOMBRE_USUARIO = '''||IN_USER_NAME||'''
				AND UPV1.CKUPV_ESTADO = TRUE
				AND UPV1.CKPVT_ACTIVO = TRUE) AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(CKPVT.CKPVT_NOMBRE,'''')||'' ''||
	COALESCE(CKVNT.CKVNT_NUMERO_VENTA,'''')||'' ''||
	COALESCE(CKCRR_FECHA_CIERRE, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CKCRR_NUMERO_CIERRE, '''')||'' ''||
	COALESCE(CKCRR_TOTAL_VENTA, 0)||'' ''||
	COALESCE(CKCRR_TOTAL, 0)||'' ''||
	COALESCE(CKCRR_OBSERVACION, '''')||'' ''||
	COALESCE(CKCRR_DIFERENCIA, 0)||'' ''||
	COALESCE(CKCRR_ESTADO_CIERRE, 0)||'' ''||
	COALESCE(CKCRR_ESTADO, FALSE)||'' ''||
	COALESCE(CKCRR_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CKCRR_USUARIO_INSERT, '''')||'' ''||COALESCE(CKCRR_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKCRR_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
