/**
* FUNCION SII.TRG_KG_CGG_GEM_PERSONAJ_AREAF. REGISTRA LA BITACORA DE LAS ACTIVIDADES REALIZADAS SOBRE LA INFORMACION ALMACENADA EN LA TABLA SII.CGG_GEM_PERSONAJ_AREAF
*/
CREATE OR REPLACE FUNCTION SII.TRG_AUD_CGG_GEM_PERSONAJ_AREAF() RETURNS TRIGGER AS
$$
DECLARE
TMP_CUSU_CODIGO VARCHAR;
TMP_IP VARCHAR;
TMP_SESSION_ID VARCHAR;
TMP_DATO_NUEVO VARCHAR;
TMP_DATO_ANTIGUO VARCHAR;
TMP_USUARIO VARCHAR;
TMP_CODIGO VARCHAR;
BEGIN
	TMP_DATO_ANTIGUO = '';
	TMP_DATO_NUEVO = '';
	IF (TG_OP = 'INSERT') THEN
		TMP_USUARIO = NEW.CGPJA_USUARIO_INSERT;
		SELECT CUSU_CODIGO INTO TMP_CUSU_CODIGO FROM SII.CGG_USUARIO WHERE CUSU_NOMBRE_USUARIO = NEW.CGPJA_USUARIO_INSERT;
		SELECT CSSSN_IP, CSSSN_ID INTO TMP_IP, TMP_SESSION_ID FROM SII.CGG_SEC_SESION WHERE CUSU_CODIGO = TMP_CUSU_CODIGO AND CSSSN_ACTIVO = TRUE;
	ELSIF (TG_OP = 'UPDATE') THEN
		TMP_USUARIO = NEW.CGPJA_USUARIO_UPDATE;
		SELECT CUSU_CODIGO INTO TMP_CUSU_CODIGO FROM SII.CGG_USUARIO WHERE CUSU_NOMBRE_USUARIO = NEW.CGPJA_USUARIO_UPDATE;
		SELECT CSSSN_IP, CSSSN_ID INTO TMP_IP, TMP_SESSION_ID FROM SII.CGG_SEC_SESION WHERE CUSU_CODIGO = TMP_CUSU_CODIGO AND CSSSN_ACTIVO = TRUE;
		TMP_DATO_ANTIGUO = '<'||TG_TABLE_NAME||'>'||
			'<CGPJA_CODIGO>'||COALESCE(OLD.CGPJA_CODIGO, '')||'</CGPJA_CODIGO>'||
			'<CGARE_CODIGO>'||COALESCE(OLD.CGARE_CODIGO, '')||'</CGARE_CODIGO>'||
			'<CRPJR_CODIGO>'||COALESCE(OLD.CRPJR_CODIGO, '')||'</CRPJR_CODIGO>'||
			'<CGPJA_ESTADO>'||COALESCE(OLD.CGPJA_ESTADO, FALSE)||'</CGPJA_ESTADO>'||
			'<CGPJA_FECHA_INSERT>'||COALESCE(OLD.CGPJA_FECHA_INSERT, CURRENT_TIMESTAMP)||'</CGPJA_FECHA_INSERT>'||
			'<CGPJA_USUARIO_INSERT>'||COALESCE(OLD.CGPJA_USUARIO_INSERT, '')||'</CGPJA_USUARIO_INSERT>'||
			'<CGPJA_FECHA_UPDATE>'||COALESCE(OLD.CGPJA_FECHA_UPDATE, CURRENT_TIMESTAMP)||'</CGPJA_FECHA_UPDATE>'||
			'<CGPJA_USUARIO_UPDATE>'||COALESCE(OLD.CGPJA_USUARIO_UPDATE, '')||'</CGPJA_USUARIO_UPDATE>'||
		'</'||TG_TABLE_NAME||'>';
	ELSIF (TG_OP = 'DELETE') THEN
		SELECT INET_CLIENT_ADDR() INTO TMP_IP;
		SELECT SESSION_USER INTO TMP_SESSION_ID;
	END IF;

	IF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE') THEN
		TMP_DATO_NUEVO = '<'||TG_TABLE_NAME||'>'||
			'<CGPJA_CODIGO>'||COALESCE(NEW.CGPJA_CODIGO, '')||'</CGPJA_CODIGO>'||
			'<CGARE_CODIGO>'||COALESCE(NEW.CGARE_CODIGO, '')||'</CGARE_CODIGO>'||
			'<CRPJR_CODIGO>'||COALESCE(NEW.CRPJR_CODIGO, '')||'</CRPJR_CODIGO>'||
			'<CGPJA_ESTADO>'||COALESCE(NEW.CGPJA_ESTADO, FALSE)||'</CGPJA_ESTADO>'||
			'<CGPJA_FECHA_INSERT>'||COALESCE(NEW.CGPJA_FECHA_INSERT, CURRENT_TIMESTAMP)||'</CGPJA_FECHA_INSERT>'||
			'<CGPJA_USUARIO_INSERT>'||COALESCE(NEW.CGPJA_USUARIO_INSERT, '')||'</CGPJA_USUARIO_INSERT>'||
			'<CGPJA_FECHA_UPDATE>'||COALESCE(NEW.CGPJA_FECHA_UPDATE, CURRENT_TIMESTAMP)||'</CGPJA_FECHA_UPDATE>'||
			'<CGPJA_USUARIO_UPDATE>'||COALESCE(NEW.CGPJA_USUARIO_UPDATE, '')||'</CGPJA_USUARIO_UPDATE>'||
		'</'||TG_TABLE_NAME||'>';
	END IF;

	SELECT SII.F_CGG_SEC_AUDITORIA_INSERT(
		'KEYGEN'::VARCHAR,
		CURRENT_TIMESTAMP::TIMESTAMP WITH TIME ZONE,
		TMP_USUARIO::VARCHAR,
		TMP_IP::TEXT,
		TMP_SESSION_ID::TEXT,
		TG_TABLE_NAME::VARCHAR,
		TG_OP::TEXT,
		TMP_DATO_ANTIGUO::TEXT,
		TMP_DATO_NUEVO::TEXT
	)INTO TMP_CODIGO;
	RETURN NULL;
END;
$$
LANGUAGE plpgsql;

/**
* DISPARADOR TRG_KG_CGG_GEM_PERSONAJ_AREAF. REGISTRA UNA BITACORA DE LAS ACTIVIDADES REALIZADAS SOBRE LA INFORMACION ALMACENADA EN LA TABLA SII.CGG_GEM_PERSONAJ_AREAF
*/
CREATE TRIGGER TRG_AUD_CGG_GEM_PERSONAJ_AREAF AFTER INSERT OR UPDATE OR DELETE ON SII.CGG_GEM_PERSONAJ_AREAF FOR EACH ROW EXECUTE PROCEDURE SII.TRG_AUD_CGG_GEM_PERSONAJ_AREAF();
COMMENT ON TRIGGER TRG_AUD_CGG_GEM_PERSONAJ_AREAF ON SII.CGG_GEM_PERSONAJ_AREAF IS 'DISPARADOR DE AUDITORIA DE LOS DATOS';
ALTER TABLE SII.CGG_GEM_PERSONAJ_AREAF DISABLE TRIGGER TRG_AUD_CGG_GEM_PERSONAJ_AREAF;

