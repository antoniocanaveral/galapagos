/**
* FUNCION SII.F_CGG_RES_MIEMBRO_COMITE_DESCRIPCION_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_MIEMBRO_COMITE.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MIEMBRO_COMITE_DESCRIPCION_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_CRCOM_CODIGO CHARACTER VARYING,
IN IN_SHOW_ALL BOOLEAN
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
	TMP_AUTORIZADO VARCHAR;
BEGIN
	IF (IN_SHOW_ALL) THEN
		TMP_AUTORIZADO = '';
	ELSE
		TMP_AUTORIZADO = ' MC.CRMBC_AUTORIZADO AND ';
	END IF;
	OPEN TMP_REF FOR EXECUTE
	'SELECT	
		MC.CRMBC_CODIGO, 
		MC.CRCRG_CODIGO, 
		(SELECT CRCRG_NOMBRE FROM CGG_RES_CARGO_COMITE CC WHERE CC.CRCRG_CODIGO= MC.CRCRG_CODIGO) CARGO, 				
		MC.CUSU_CODIGO, 
		US.CUSU_NOMBRE_USUARIO,
		PR.CRPER_CODIGO, 		 
		PR.CRDID_CODIGO, 
		(SELECT CRDID_DESCRIPCION FROM CGG_RES_DOCUMENTO_IDENTIFICACIO DI WHERE DI.CRDID_CODIGO= PR.CRDID_CODIGO) DOCUMENTO, 		
		PR.CPRR_CODIGO, 
		(SELECT CPRR_NOMBRE FROM CGG_PARROQUIA PA WHERE PA.CPRR_CODIGO= PR.CPRR_CODIGO) PARROQUIA, 
		PR.CCTN_CODIGO, 		
		(SELECT CCTN_NOMBRE FROM CGG_CANTON CT WHERE CT.CCTN_CODIGO= PR.CCTN_CODIGO) CANTON, 
		PR.CRPER_NOMBRES, 
		(SELECT COALESCE(PS.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PS.CRPER_APELLIDO_MATERNO,'''') FROM SII.CGG_RES_PERSONA PS WHERE PS.CRPER_CODIGO = PR.CRPER_CODIGO) APELLIDO,
		PR.CRPER_NUM_DOC_IDENTIFIC, 
		PR.CRPER_FECHA_NACIMIENTO, 		
		PR.CRPER_GENERO,		
		MC.CRMBC_FECHA_INICIO_FUNCIONES, 
		MC.CRMBC_FECHA_FIN_FUNCIONES, 
		MC.CRMBC_TITULAR, 
		MC.CRMBC_AUTORIZADO, 
		MC.CRMBC_ESTADO, 
		MC.CRMBC_FECHA_INSERT, 
		MC.CRMBC_USUARIO_INSERT, 
		MC.CRMBC_FECHA_UPDATE, 
		MC.CRMBC_USUARIO_UPDATE
	FROM SII.CGG_RES_MIEMBRO_COMITE MC
	INNER JOIN SII.CGG_RES_CARGO_COMITE CC ON (CC.CRCRG_CODIGO = MC.CRCRG_CODIGO)
	INNER JOIN SII.CGG_RES_COMITE MT ON (MT.CRCOM_CODIGO = CC.CRCOM_CODIGO)
	INNER JOIN SII.CGG_USUARIO US ON (US.CUSU_CODIGO = MC.CUSU_CODIGO)
	INNER JOIN SII.CGG_RES_PERSONA PR ON (PR.CRPER_CODIGO = US.CRPER_CODIGO)
	WHERE CRMBC_ESTADO AND (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(CRPER_NOMBRES, '''')||'' ''||	
	COALESCE((SELECT CCTN_NOMBRE FROM CGG_CANTON CT WHERE CT.CCTN_CODIGO= PR.CCTN_CODIGO), '''')||'' ''||	
	COALESCE((SELECT CRCRG_NOMBRE FROM CGG_RES_CARGO_COMITE CC WHERE CC.CRCRG_CODIGO= MC.CRCRG_CODIGO), '''')||'' ''||	
	COALESCE(CRPER_APELLIDO_PATERNO, '''')||'' ''||	
	COALESCE(CRPER_APELLIDO_MATERNO, '''')||'' ''||	
	COALESCE(CRPER_NUM_DOC_IDENTIFIC, '''')||'' ''||
	COALESCE(CUSU_NOMBRE_USUARIO, '''')||'' ''||
	COALESCE(CRMBC_FECHA_INICIO_FUNCIONES, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRMBC_FECHA_FIN_FUNCIONES, CURRENT_TIMESTAMP)||'' ''||		
	COALESCE(CRMBC_TITULAR, FALSE)||'' ''||COALESCE(CRMBC_AUTORIZADO, FALSE)) = 1) AND 
	'||TMP_AUTORIZADO||'
	MT.CRCOM_CODIGO ='''||IN_CRCOM_CODIGO||'''
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MIEMBRO_COMITE_DESCRIPCION_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_MIEMBRO_COMITE.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MIEMBRO_COMITE_DESCRIPCION_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_CRCOM_CODIGO CHARACTER VARYING,
IN IN_SHOW_ALL BOOLEAN
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS	
	FROM SII.CGG_RES_MIEMBRO_COMITE MC
	INNER JOIN SII.CGG_RES_CARGO_COMITE CC ON (CC.CRCRG_CODIGO = MC.CRCRG_CODIGO)
	INNER JOIN SII.CGG_RES_COMITE MT ON (MT.CRCOM_CODIGO = CC.CRCOM_CODIGO)
	INNER JOIN SII.CGG_USUARIO US ON (US.CUSU_CODIGO = MC.CUSU_CODIGO)
	INNER JOIN SII.CGG_RES_PERSONA PR ON (PR.CRPER_CODIGO = US.CRPER_CODIGO)
	WHERE CRMBC_ESTADO AND (LENGTH(IN_FIND_TEXT) = 0 OR SII.F_STRING_IN(IN_FIND_TEXT,
	COALESCE(CRPER_NOMBRES, '')||''||	
	COALESCE((SELECT CCTN_NOMBRE FROM CGG_CANTON CT WHERE CT.CCTN_CODIGO= PR.CCTN_CODIGO), '')||' '||	
	COALESCE((SELECT CRCRG_NOMBRE FROM CGG_RES_CARGO_COMITE CC WHERE CC.CRCRG_CODIGO= MC.CRCRG_CODIGO), '')||' '||	
	COALESCE(CRPER_APELLIDO_PATERNO, '')||' '||	
	COALESCE(CRPER_APELLIDO_MATERNO, '')||' '||	
	COALESCE(CRPER_NUM_DOC_IDENTIFIC, '')||' '||
	COALESCE(CUSU_NOMBRE_USUARIO, '')||' '||
	COALESCE(CRMBC_FECHA_INICIO_FUNCIONES, CURRENT_TIMESTAMP)||' '||
	COALESCE(CRMBC_FECHA_FIN_FUNCIONES, CURRENT_TIMESTAMP)||' '||		
	COALESCE(CRMBC_TITULAR, FALSE)||' '||COALESCE(CRMBC_AUTORIZADO, FALSE)) = 1) AND 
	(IN_SHOW_ALL OR MC.CRMBC_AUTORIZADO) AND
	MT.CRCOM_CODIGO =IN_CRCOM_CODIGO ;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;




/**
* FUNCION SII.F_CGG_RES_MIEMBRO_USUARIO_PERSONA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_MIEMBRO_COMITE.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MIEMBRO_USUARIO_PERSONA_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
   	    PR.CRPER_CODIGO,
		US.CUSU_CODIGO ,
		US.CUSU_NOMBRE_USUARIO,
		PR.CRDID_CODIGO, 
		(SELECT CRDID_DESCRIPCION FROM CGG_RES_DOCUMENTO_IDENTIFICACIO DI WHERE DI.CRDID_CODIGO= PR.CRDID_CODIGO) DOCUMENTO, 		
		PR.CPRR_CODIGO, 
		(SELECT CPRR_NOMBRE FROM CGG_PARROQUIA PA WHERE PA.CPRR_CODIGO= PR.CPRR_CODIGO) PARROQUIA, 
		PR.CCTN_CODIGO, 		
		(SELECT CCTN_NOMBRE FROM CGG_CANTON CT WHERE CT.CCTN_CODIGO= PR.CCTN_CODIGO) CANTON, 
		PR.CRPER_NOMBRES, 
		(SELECT PS.CRPER_APELLIDO_PATERNO||'' ''|| PS.CRPER_APELLIDO_MATERNO FROM SII.CGG_RES_PERSONA PS WHERE PS.CRPER_CODIGO = PR.CRPER_CODIGO) APELLIDO,
		PR.CRPER_NUM_DOC_IDENTIFIC, 
		PR.CRPER_FECHA_NACIMIENTO, 		
		PR.CRPER_GENERO		
	FROM SII.CGG_RES_PERSONA PR
	INNER JOIN SII.CGG_USUARIO US ON (US.CRPER_CODIGO = PR.CRPER_CODIGO)	
	WHERE CRPER_ESTADO AND CUSU_ESTADO AND (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('''||IN_FIND_TEXT||''',	
	COALESCE(CRPER_NOMBRES, '''')||'' ''||
	COALESCE(US.CUSU_NOMBRE_USUARIO, '''')||'' ''||
	COALESCE(CRPER_NUM_DOC_IDENTIFIC, '''')||'' ''||		
	COALESCE(CRPER_FECHA_NACIMIENTO, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRPER_GENERO, 0)) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MIEMBRO_USUARIO_PERSONA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_MIEMBRO_COMITE.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MIEMBRO_USUARIO_PERSONA_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS	
	FROM SII.CGG_RES_PERSONA PR
	INNER JOIN SII.CGG_USUARIO US ON (US.CRPER_CODIGO = PR.CRPER_CODIGO)
	WHERE CRPER_ESTADO AND CUSU_ESTADO AND (LENGTH(IN_FIND_TEXT) = 0 OR SII.F_STRING_IN(IN_FIND_TEXT,	
	COALESCE(CRPER_NOMBRES, '')||''||	
	COALESCE(US.CUSU_NOMBRE_USUARIO, '')||' '||
	COALESCE(CRPER_NUM_DOC_IDENTIFIC, '')||''||
	COALESCE(CRPER_FECHA_NACIMIENTO, CURRENT_TIMESTAMP)||''||
	COALESCE(CRPER_GENERO, 0)) = 1);
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;









