

/**
* FUNCION SII.F_CGG_KDX_DENOMINACION_SELECT1
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_DENOMINACION
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_DENOMINACION_SELECT1(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CKDNM_CODIGO, 
		CKTPG.CKTPG_CODIGO, 
		CKTPG.CKTPG_DESCRIPCION,
		CKDNM_DENOMINACION, 
		CKDNM_OBSERVACION, 
		CKDNM_VALOR_MONETARIO, 
		CKDNM_ESTADO	
	FROM SII.CGG_KDX_DENOMINACION CKDNM
	INNER JOIN SII.CGG_KDX_TIPO_PAGO CKTPG
	ON (CKDNM.CKTPG_CODIGO= CKTPG.CKTPG_CODIGO)
	WHERE CKDNM_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CKDNM_DENOMINACION, '''')||'' ''||COALESCE(CKDNM_OBSERVACION, '''')||'' ''||COALESCE(CKDNM_VALOR_MONETARIO, 0)||'' ''||COALESCE(CKDNM_ESTADO, FALSE)||'' ''||COALESCE(CKDNM_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKDNM_USUARIO_INSERT, '''')||'' ''||COALESCE(CKDNM_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKDNM_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_DENOMINACION_COUNT1
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_KDX_DENOMINACION.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_DENOMINACION_COUNT1(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_KDX_DENOMINACION CKDNM
	INNER JOIN SII.CGG_KDX_TIPO_PAGO CKTPG
	ON (CKDNM.CKTPG_CODIGO= CKTPG.CKTPG_CODIGO)
	WHERE CKDNM_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CKDNM_DENOMINACION, '''')||' '||COALESCE(CKDNM_OBSERVACION, '''')||' '||COALESCE(CKDNM_VALOR_MONETARIO, 0)||' '||COALESCE(CKDNM_ESTADO, FALSE)||' '||COALESCE(CKDNM_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CKDNM_USUARIO_INSERT, '''')||' '||COALESCE(CKDNM_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CKDNM_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;



/**
* FUNCION SII.F_CGG_KDX_DENOMINACION_SELECT_ALL
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_DENOMINACION.
* @param IN_USER_NAME NOMBRE DE USUARIO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_DENOMINACION_SELECT_ALL(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKDNM_CODIGO, 
		CKTPG.CKTPG_CODIGO, 
		CKTPG.CKTPG_DESCRIPCION,
		CKDNM_DENOMINACION, 
		CKDNM_OBSERVACION, 
		CKDNM_VALOR_MONETARIO, 
		CKDNM_ESTADO	
	FROM SII.CGG_KDX_DENOMINACION CKDNM
	INNER JOIN SII.CGG_KDX_TIPO_PAGO CKTPG
	ON (CKDNM.CKTPG_CODIGO= CKTPG.CKTPG_CODIGO)
	WHERE CKDNM_ESTADO = TRUE;

	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
