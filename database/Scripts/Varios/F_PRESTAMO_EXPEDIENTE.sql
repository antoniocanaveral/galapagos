
/**
* FUNCION F_CGG_RES_PERSONA_PRESTAMO
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_PRESTAMO_EXPEDIENTE Y VIZUALIZAR EL ULTIMO MOVIMIENTO
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_PRESTAMO(
IN_USER_NAME CHARACTER VARYING, 
IN_START_INDEX INTEGER, 
IN_LIMIT INTEGER, 
IN_SORT_FIELD_NAME CHARACTER VARYING, 
IN_DIRECTION CHARACTER VARYING, 
IN_FIND_TEXT TEXT)
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT  PER.CRPER_CODIGO,(PER.CRPER_NOMBRES||'' ''||PER.CRPER_APELLIDO_PATERNO||'' ''||PER.CRPER_APELLIDO_MATERNO)AS CRPEX_NOMBRE,
		PER.CRPER_NUM_DOC_IDENTIFIC,
		PER.CRPER_NUMERO_EXPEDIENTE,
		PER.CRPER_NUMERO_RESIDENCIA,
		PER.CRPER_FECHA_ARCHIVO,
		PEX.CGG_CRPER_CODIGO,
		(SELECT PEN.CRPER_NOMBRES||'' ''||COALESCE(PEN.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PEN.CRPER_APELLIDO_MATERNO,'''') FROM SII.CGG_RES_PERSONA PEN WHERE PEN.CRPER_CODIGO=PEX.CGG_CRPER_CODIGO)AS CRPER_NOMBRE_REALIZA,
		(SELECT DISTINCT PRES.CRPEX_MOVIMIENTO FROM CGG_RES_PRESTAMO_EXPEDIENTE PRES
		WHERE PRES.CRPER_CODIGO = PER.CRPER_CODIGO
		AND PRES.CRPEX_FECHA_OPERACION = (SELECT  MAX(PRES.CRPEX_FECHA_OPERACION) FROM CGG_RES_PRESTAMO_EXPEDIENTE PRES
		WHERE PRES.CRPER_CODIGO = PER.CRPER_CODIGO) ) AS CRPEX_MOVIMIENTO,
		(SELECT  MAX(PRES.CRPEX_FECHA_OPERACION) FROM CGG_RES_PRESTAMO_EXPEDIENTE PRES
		WHERE PRES.CRPER_CODIGO = PER.CRPER_CODIGO) AS CRPEX_FECHA_OPERACION
		FROM SII.CGG_RES_PERSONA PER
		LEFT JOIN SII.CGG_RES_PRESTAMO_EXPEDIENTE PEX
		ON (PER.CRPER_CODIGO = PEX.CRPER_CODIGO)
		WHERE PER.CRPER_NUMERO_EXPEDIENTE IS NOT NULL AND PER.CRPER_ESTADO=TRUE  AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
        COALESCE(PER.CRPER_NOMBRES,'''')||'' ''||
        COALESCE(PER.CRPER_APELLIDO_PATERNO,'''')||'' ''||
        COALESCE(PER.CRPER_APELLIDO_MATERNO,'''')||'' ''||
        COALESCE(PER.CRPER_NUM_DOC_IDENTIFIC,'''')||'' ''||
        COALESCE(PER.CRPER_NUMERO_EXPEDIENTE,'''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;


/**
* FUNCION SII.F_CGG_RES_PRESTAMO_EXPEDIENTE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_PRESTAMO_EXPEDIENTE.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PRESTAMO_EXPEDIENTE_COUNT_PERSONA(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_PERSONA PER
		LEFT JOIN SII.CGG_RES_PRESTAMO_EXPEDIENTE PEX
		ON (PER.CRPER_CODIGO = PEX.CRPER_CODIGO)
		WHERE PER.CRPER_NUMERO_EXPEDIENTE IS NOT NULL AND PER.CRPER_ESTADO=TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,
        COALESCE(PER.CRPER_NOMBRES,'''')||' '||
        COALESCE(PER.CRPER_APELLIDO_PATERNO,'''')||' '||
        COALESCE(PER.CRPER_APELLIDO_MATERNO,'''')||' '||
        COALESCE(PER.CRPER_NUM_DOC_IDENTIFIC,'''')||' '||
        COALESCE(PER.CRPER_NUMERO_EXPEDIENTE,'''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**FUNCTION: f_cgg_res_prestamo_expe_persona
* SELECCIONA UN REGISTROS DE LA TABLA SII.CGG_RES_PRESTAMO_EXPEDIENTE .
* @param IN_CRPER_CODIGO CRITERIO DE BUSQUEDA
* @return TMP_ROWS
*/


CREATE OR REPLACE FUNCTION SII.f_cgg_res_prestamo_expe_persona(in_crper_codigo character varying)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT 
        PEX.CRPEX_CODIGO,
		PEX.CGG_CRPER_CODIGO,
		(SELECT CRPER_NOMBRES||'' ''||CRPER_APELLIDO_PATERNO||'' ''||CRPER_APELLIDO_MATERNO FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO=PEX.CGG_CRPER_CODIGO)AS CRPER_NOMBRE_RECIBE,
		PEX.CRPEX_MOVIMIENTO,
		PEX.CRPEX_FECHA_OPERACION,
		PEX.CRPEX_OBSERVACION
		FROM SII.CGG_RES_PERSONA PER
		INNER JOIN SII.CGG_RES_PRESTAMO_EXPEDIENTE PEX
		ON (PER.CRPER_CODIGO = PEX.CRPER_CODIGO)
		WHERE PEX.CRPEX_ESTADO=TRUE AND PEX.CRPER_CODIGO='''||IN_CRPER_CODIGO||'''';
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100
  ROWS 1000;

/**
* FUNCION F_CGG_RES_PRESTAMO_EXPEDIENTE_SELECT_PERSONA
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_PRESTAMO_EXPEDIENTE PARA EL HISTORIAL DE LOS EXPEDIENTES.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PRESTAMO_EXPEDIENTE_SELECT_PERSONA(IN_USER_NAME CHARACTER VARYING, IN_START_INDEX INTEGER, IN_LIMIT INTEGER, IN_SORT_FIELD_NAME CHARACTER VARYING, IN_DIRECTION CHARACTER VARYING, IN_FIND_TEXT TEXT) 
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;

BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT PER.CRPER_CODIGO,(PER.CRPER_NOMBRES||'' ''||PER.CRPER_APELLIDO_PATERNO||'' ''||PER.CRPER_APELLIDO_MATERNO)AS CRPER_NOMBRE_PERSONA,
		PER.CRPER_NUM_DOC_IDENTIFIC,
		PER.CRPER_NUMERO_EXPEDIENTE,
		PER.CRPER_FECHA_ARCHIVO,
		PEX.CRPEX_CODIGO,
		PER.CRPER_ESTADO, 
		PER.CRPER_FECHA_INSERT, 
		PER.CRPER_USUARIO_INSERT, 
		PER.CRPER_FECHA_UPDATE, 
		PER.CRPER_USUARIO_UPDATE
		FROM SII.CGG_RES_PERSONA PER
		INNER JOIN SII.CGG_RES_PRESTAMO_EXPEDIENTE PEX
		ON (PER.CRPER_CODIGO = PEX.CRPER_CODIGO)
		WHERE PER.CRPER_NUMERO_EXPEDIENTE IS NOT NULL AND PER.CRPER_ESTADO=TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
		CASE WHEN PER.CRPER_NOMBRES IS NULL THEN '''' ELSE PER.CRPER_NOMBRES END||'' ''||
		CASE WHEN PER.CRPER_APELLIDO_PATERNO IS NULL THEN '''' ELSE PER.CRPER_APELLIDO_PATERNO END ||'' ''||
		CASE WHEN PER.CRPER_APELLIDO_MATERNO IS NULL THEN '''' ELSE PER.CRPER_APELLIDO_MATERNO END ||'' ''||
		CASE WHEN PER.CRPER_NUM_DOC_IDENTIFIC IS NULL THEN '''' ELSE PER.CRPER_NUM_DOC_IDENTIFIC END ||'' ''||
		CASE WHEN PER.CRPER_NUMERO_EXPEDIENTE IS NULL THEN '''' ELSE PER.CRPER_NUMERO_EXPEDIENTE END ||'' ''||
		CASE WHEN PER.CRPER_ESTADO IS NULL THEN FALSE ELSE PER.CRPER_ESTADO END ||'' ''||
		CASE WHEN PER.CRPER_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE PER.CRPER_FECHA_INSERT END ||'' ''||
		CASE WHEN PER.CRPER_USUARIO_INSERT IS NULL THEN '''' ELSE PER.CRPER_USUARIO_INSERT END ||'' ''||
		CASE WHEN PER.CRPER_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE PER.CRPER_FECHA_UPDATE END ||'' ''||
		CASE WHEN PER.CRPER_USUARIO_UPDATE IS NULL THEN '''' ELSE PER.CRPER_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;

