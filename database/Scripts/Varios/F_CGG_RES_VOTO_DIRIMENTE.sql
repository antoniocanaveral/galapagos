/** 
* FUNCION SII.F_CGG_RES_VOTO_DIRIMENTE
* DETERMINA SI LA PERSONA TIENE PERMITIDO EL VOTO DIRIMENTE.
* @param IN_CRRES_CODIGO IDENTIFICATIVO UNICO DE RESOLUCION
* @return INTEGER
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_VOTO_DIRIMENTE(
IN IN_CRRES_CODIGO VARCHAR
)RETURNS INTEGER AS
$BODY$
DECLARE
	TMP_DIRIMENTE INTEGER;	
	TMP_MIEMBRO_DIR VARCHAR;
BEGIN
	SELECT SM.CRSMB_CODIGO INTO TMP_MIEMBRO_DIR
	FROM SII.CGG_RES_CARGO_COMITE  CC
	INNER JOIN SII.CGG_RES_MIEMBRO_COMITE  MC ON CC.CRCRG_CODIGO = MC.CRCRG_CODIGO AND MC.CRMBC_ESTADO
	INNER JOIN SII.CGG_RES_SESION_MIEMBRO  SM ON SM.CRMBC_CODIGO = MC.CRMBC_CODIGO AND SM.CRSMB_ESTADO
	INNER JOIN SII.CGG_RES_RESOLUCION RS ON RS.CRRES_CODIGO = IN_CRRES_CODIGO
	WHERE CRSMB_ESTADO 	
	AND CC.CRCRG_VOTO_DIRIMENTE;
	
	IF(TMP_MIEMBRO_DIR IS NOT NULL) THEN
		SELECT VT.CRVTO_VOTACION INTO TMP_DIRIMENTE
		FROM SII.CGG_RES_CARGO_COMITE  CC
		INNER JOIN SII.CGG_RES_MIEMBRO_COMITE  MC ON CC.CRCRG_CODIGO = MC.CRCRG_CODIGO AND MC.CRMBC_ESTADO
		INNER JOIN SII.CGG_RES_SESION_MIEMBRO  SM ON SM.CRMBC_CODIGO = MC.CRMBC_CODIGO AND SM.CRSMB_ESTADO
		INNER JOIN SII.CGG_RES_VOTO  VT ON VT.CRSMB_CODIGO = SM.CRSMB_CODIGO AND VT.CRVTO_ESTADO
		INNER JOIN SII.CGG_RES_RESOLUCION RS ON RS.CRRES_CODIGO = VT.CRRES_CODIGO AND RS.CRRES_CODIGO = IN_CRRES_CODIGO
		WHERE CRSMB_ESTADO 	
		AND CRCRG_VOTO_DIRIMENTE;
	ELSE
		RETURN -1;
	END IF;
	RETURN  TMP_DIRIMENTE;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;
 