/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_UPDATE_ADJUNTO
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_SESION_COMITE
* @param IN_CRSSC_CODIGO IDENTIFICATIVO UNICO DE REGIsTRO DE SESION
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @param IN_CRCOM_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRSSC_FECHA_REUNION FECHA DE REALIZACION DE LA SESION
* @param IN_CRSSC_FECHA_FINALIZACION FECHA DE FINALIZACION DE SESION  
* @param IN_CRSSC_NUMERO_SESION NUMERO IDENTIFICATIVO DE LA SESION
* @param IN_CRSSC_EXTRACTO RESUMEN DEL CONTENIDO DE LA SESION
* @param IN_CRSSC_OBSERVACION OBSERVACIONES DE LA SESION
* @param IN_CRSSC_FECHA_CONVOCATORIA FECHA DE REALIZACION DE LA CONVOCATORIA PARA LA SESION
* @param IN_CRSSC_MOTIVO_CONVOCATORIA RESUMEN DE LOS TEMAS A TRATARSE EN LA SESION
* @param IN_CRSSC_DESCRIPCION_ADJUNTO DESCRIPCION DE LOS DOCUMENTOS ADJUNTOS A LA SESION
* @param IN_CRSSC_NOMBRE_ADJUNTO NOMBRE DEL DOCUMENTO ADJUNTO
* @param IN_CRSSC_ADJUNTO ARCHIVO DIGITAL ANEXO A LA SESION
* @param IN_CRSSC_ESTADO_CONVOCATORIA ESTADO DE LA CONVOCATORIA
0 - REGISTRADA
1 - APROBADA
2 - ANULADA
3 - EN PROCESO
4- SUSPENDIDA
* @param IN_CRSSC_ESTADO ESTADO DEL REGISTRO
* @param IN_CRSSC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_UPDATE_ADJUNTO(
IN IN_CRSSC_CODIGO SII.CGG_RES_SESION_COMITE.CRSSC_CODIGO%TYPE, 
IN IN_CISLA_CODIGO SII.CGG_RES_SESION_COMITE.CISLA_CODIGO%TYPE, 
IN IN_CRCOM_CODIGO SII.CGG_RES_SESION_COMITE.CRCOM_CODIGO%TYPE, 
IN IN_CRSSC_FECHA_REUNION SII.CGG_RES_SESION_COMITE.CRSSC_FECHA_REUNION%TYPE, 
IN IN_CRSSC_FECHA_FINALIZACION SII.CGG_RES_SESION_COMITE.CRSSC_FECHA_FINALIZACION%TYPE, 
IN IN_CRSSC_NUMERO_SESION SII.CGG_RES_SESION_COMITE.CRSSC_NUMERO_SESION%TYPE, 
IN IN_CRSSC_EXTRACTO SII.CGG_RES_SESION_COMITE.CRSSC_EXTRACTO%TYPE, 
IN IN_CRSSC_OBSERVACION SII.CGG_RES_SESION_COMITE.CRSSC_OBSERVACION%TYPE, 
IN IN_CRSSC_FECHA_CONVOCATORIA SII.CGG_RES_SESION_COMITE.CRSSC_FECHA_CONVOCATORIA%TYPE, 
IN IN_CRSSC_MOTIVO_CONVOCATORIA SII.CGG_RES_SESION_COMITE.CRSSC_MOTIVO_CONVOCATORIA%TYPE, 
IN IN_CRSSC_DESCRIPCION_ADJUNTO SII.CGG_RES_SESION_COMITE.CRSSC_DESCRIPCION_ADJUNTO%TYPE, 
IN IN_CRSSC_NOMBRE_ADJUNTO SII.CGG_RES_SESION_COMITE.CRSSC_NOMBRE_ADJUNTO%TYPE, 
IN IN_CRSSC_ADJUNTO SII.CGG_RES_SESION_COMITE.CRSSC_ADJUNTO%TYPE, 
IN IN_CRSSC_ESTADO_CONVOCATORIA SII.CGG_RES_SESION_COMITE.CRSSC_ESTADO_CONVOCATORIA%TYPE, 
IN IN_CRSSC_ESTADO SII.CGG_RES_SESION_COMITE.CRSSC_ESTADO%TYPE, 
IN IN_CRSSC_USUARIO_UPDATE SII.CGG_RES_SESION_COMITE.CRSSC_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
DECLARE
TMP_CODIGO VARCHAR;
TMP_RECORD RECORD;
TMP_RECORD_TRM RECORD;
TMP_APROBADO BOOLEAN;
--CORREOS ELECTRONICOS DE LA PERSONA
TMP_CORREOS VARCHAR[];
TMP_CORREOS_COUNT INT;
BEGIN
	UPDATE SII.CGG_RES_SESION_COMITE SET
		CISLA_CODIGO = IN_CISLA_CODIGO, 
		CRCOM_CODIGO = IN_CRCOM_CODIGO, 
		CRSSC_FECHA_REUNION = IN_CRSSC_FECHA_REUNION, 
		CRSSC_FECHA_FINALIZACION = IN_CRSSC_FECHA_FINALIZACION, 
		CRSSC_NUMERO_SESION = IN_CRSSC_NUMERO_SESION, 
		CRSSC_EXTRACTO = IN_CRSSC_EXTRACTO, 
		CRSSC_OBSERVACION = IN_CRSSC_OBSERVACION, 
		CRSSC_FECHA_CONVOCATORIA = IN_CRSSC_FECHA_CONVOCATORIA, 
		CRSSC_MOTIVO_CONVOCATORIA = IN_CRSSC_MOTIVO_CONVOCATORIA, 
		CRSSC_DESCRIPCION_ADJUNTO = IN_CRSSC_DESCRIPCION_ADJUNTO, 		
		CRSSC_ESTADO_CONVOCATORIA = IN_CRSSC_ESTADO_CONVOCATORIA, 
		CRSSC_ESTADO = IN_CRSSC_ESTADO, 
		CRSSC_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRSSC_USUARIO_UPDATE = IN_CRSSC_USUARIO_UPDATE
	WHERE
		CRSSC_CODIGO = IN_CRSSC_CODIGO;
		
	IF (LENGTH (IN_CRSSC_ADJUNTO) >0) THEN	
	UPDATE SII.CGG_RES_SESION_COMITE SET
		CRSSC_NOMBRE_ADJUNTO = IN_CRSSC_NOMBRE_ADJUNTO, 
		CRSSC_ADJUNTO = IN_CRSSC_ADJUNTO
	WHERE
		CRSSC_CODIGO = IN_CRSSC_CODIGO;
	END IF;	
	
	--GENERACION DE NUMEROS DE RESOLUCIONES QUE SE TRATARON EN LA SESION
	IF (IN_CRSSC_ESTADO_CONVOCATORIA = 5) THEN
		--GENERA LOS NUMEROS DE RESOLUCIONES QUE HAN SIDO TRATADAS EN LA SESION
		--RESOLUCIONES DE TRAMITES
		FOR TMP_RECORD IN (SELECT RSL.CRRES_CODIGO, SSC.CISLA_CODIGO, TPT.CRTPT_ABREVIATURA, TRM.CRTRA_CODIGO,
				TRM.CRTRA_ANIO,
				TRM.CRTRA_NUMERO,
				RSL.CRRES_ESTADO_RESOLUCION,
				TRM.CRPER_CODIGO,
				TRM.CGG_CRPER_CODIGO
			FROM SII.CGG_RES_RESOLUCION RSL
			INNER JOIN SII.CGG_RES_SESION_COMITE SSC ON SSC.CRSSC_CODIGO = RSL.CRSSC_CODIGO AND SSC.CRSSC_ESTADO
			INNER JOIN SII.CGG_RES_RESOL_TRAMITE RST ON RST.CRRES_CODIGO = RSL.CRRES_CODIGO AND RST.CRRST_ESTADO
			INNER JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = RST.CRTRA_CODIGO AND TRM.CRTRA_ESTADO
			INNER JOIN SII.CGG_ISLA CSL ON CSL.CISLA_CODIGO = TRM.CISLA_CODIGO AND CSL.CISLA_ESTADO
			INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = TRM.CRTST_CODIGO AND TST.CRTST_ESTADO
			INNER JOIN SII.CGG_RES_TIPO_TRAMITE TPT ON TPT.CRTPT_CODIGO = TST.CRTPT_CODIGO AND TPT.CRTPT_ESTADO
			WHERE RSL.CRRES_ESTADO AND RSL.CRRES_ESTADO_RESOLUCION > 0 AND RSL.CRSSC_CODIGO IS NOT NULL AND
				CRRES_NUMERO_RESOLUCION IS NULL AND
				RSL.CRSSC_CODIGO = IN_CRSSC_CODIGO 
			ORDER BY CSL.CISLA_INDICE, TPT.CRTPT_INDICE, TST.CRTST_INDICE) LOOP
			
			SELECT SII.F_CGG_GENERA_NUM_RESOLUCION(TMP_RECORD.CISLA_CODIGO, IN_CRSSC_CODIGO) INTO TMP_CODIGO;
			UPDATE SII.CGG_RES_RESOLUCION SET 
				CRRES_NUMERO_RESOLUCION = TMP_CODIGO,
				CRRES_USUARIO_UPDATE = IN_CRSSC_USUARIO_UPDATE
			WHERE CRRES_CODIGO = TMP_RECORD.CRRES_CODIGO;
			
			IF (TMP_RECORD.CRPER_CODIGO IS NOT NULL) THEN
				--OBTIENE LOS EMAILS DEL AUSPICIANTE
				SELECT SII.F_CGG_RES_PERSONA_EMAILS(TMP_RECORD.CRPER_CODIGO,0) INTO TMP_CORREOS;
			ELSE
				SELECT SII.F_CGG_RES_PERSONA_EMAILS(TMP_RECORD.CGG_CRPER_CODIGO,0) INTO TMP_CORREOS;
			END IF;
			
			TMP_CORREOS_COUNT = ARRAY_NDIMS(TMP_CORREOS);
			IF (TMP_CORREOS_COUNT IS NOT NULL)THEN
				FOR C IN 1..TMP_CORREOS_COUNT LOOP
					SELECT SII.F_CGG_BUZON_CORREO_INSERT(
						'KEYGEN'::VARCHAR,
						TMP_CORREOS[C],
						'Notificacion de resoluciones del SII'::VARCHAR,
						('El tramite No. '||TMP_RECORD.CRTRA_ANIO::VARCHAR||'-'||TMP_RECORD.CRTRA_NUMERO::VARCHAR||' con resoluci&oacute;n No. '||TMP_CODIGO||
						' fue '||CASE WHEN TMP_RECORD.CRRES_ESTADO_RESOLUCION = 1 THEN '<b>APROBADA</b>.' ELSE '<b>NEGADA</b>.' END)::VARCHAR,
						'text/html'::VARCHAR,
						0::INT,
						FALSE,
						TRUE,
						IN_CRSSC_USUARIO_UPDATE
					) INTO TMP_CODIGO;
				END LOOP;
			END IF;
			
		END LOOP;
		
		--RESOLUCIONES VARIAS
		FOR TMP_RECORD IN (SELECT RSL.CRRES_CODIGO, SSC.CISLA_CODIGO 
			FROM SII.CGG_RES_RESOLUCION RSL
			INNER JOIN SII.CGG_RES_SESION_COMITE SSC ON SSC.CRSSC_CODIGO = RSL.CRSSC_CODIGO 
			WHERE RSL.CRRES_ESTADO AND 
				RSL.CRRES_ESTADO_RESOLUCION > 0 AND 
				RSL.CRSSC_CODIGO IS NOT NULL AND
				RSL.CRSSC_CODIGO = IN_CRSSC_CODIGO AND
				CRRES_NUMERO_RESOLUCION IS NULL) LOOP
			
			SELECT SII.F_CGG_GENERA_NUM_RESOLUCION(TMP_RECORD.CISLA_CODIGO, IN_CRSSC_CODIGO) INTO TMP_CODIGO;
			UPDATE SII.CGG_RES_RESOLUCION SET 
				CRRES_NUMERO_RESOLUCION = TMP_CODIGO,
				CRRES_USUARIO_UPDATE = IN_CRSSC_USUARIO_UPDATE
			WHERE CRRES_CODIGO = TMP_RECORD.CRRES_CODIGO;
		END LOOP;
		
	END IF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;