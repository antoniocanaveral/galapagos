/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_GENERA_NUMERO
* SELECCIONA EL NUMERO SECUENCIAL SIGUIENTE CORRESPONDIENTE A UNA ASIGNACION.
* BAJO EL CONTROL DE REALIZARLO POR PUNTO DE VENTA.
* @param IN_CUSU_NOMBRE_USUARIO REGISTRO DE USUARIO 
* @return REFCURSOR
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_GENERA_NUMERO(
IN IN_CUSU_NOMBRE_USUARIO CHARACTER VARYING)
  RETURNS CHARACTER VARYING AS
$BODY$
DECLARE
	TMP_SECUENCIA CHARACTER VARYING;
	TMP_ANIO CHARACTER VARYING;
	TMP_ACRONIMO CHARACTER VARYING;	
BEGIN
	SELECT COUNT(CKASG_NUMERO_ASIGNACION)+1 INTO TMP_SECUENCIA 
	FROM SII.CGG_KDX_ASIGNACION CKASG
	INNER JOIN SII.CGG_KDX_TRANSFERENCIA CKTRN
	ON (CKASG.CKTRN_CODIGO = CKTRN.CKTRN_CODIGO) 
	WHERE EXTRACT(YEAR FROM CKASG_FECHA_INSERT) = EXTRACT(YEAR FROM CURRENT_TIMESTAMP)
		AND CKTRN.CKPVT_CODIGO = (SELECT CKPVT_CODIGO 
					FROM CGG_KDX_USUARIO_PV UPV1
					INNER JOIN CGG_USUARIO CUSU ON
					(UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
					WHERE CUSU_NOMBRE_USUARIO = IN_CUSU_NOMBRE_USUARIO
					AND UPV1.CKUPV_ESTADO = TRUE
					AND UPV1.CKPVT_ACTIVO = TRUE);
	
	--SELECT CGCNF_VALOR_CADENA INTO TMP_ACRONIMO
	--FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = 'CONF11';
	
	SELECT EXTRACT(YEAR FROM CURRENT_TIMESTAMP) INTO TMP_ANIO;
	
	--RETURN  TMP_ACRONIMO||'-'||TMP_ANIO||'-'||LPAD(TMP_SECUENCIA,4,'0');
	RETURN  TMP_ANIO||'-'||LPAD(TMP_SECUENCIA,4,'0');
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;

/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_SELECT_PUNTO_VENTA_DATOS_USUARIO
* SELECCIONA INFORMACION DEL PUNTO DE VENTA, EN FUNCION DEL NOMBRE DE USUARIO.
* @param IN_CUSU_NOMBRE_USUARIO REGISTRO DE USUARIO PUNTO DE VENTA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_SELECT_PUNTO_VENTA_DATOS_USUARIO(
IN IN_CUSU_NOMBRE_USUARIO CHARACTER VARYING)
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR	
	SELECT  CKPVT.CKPVT_NOMBRE,
		CRPER.CRPER_NOMBRES||' '||CRPER.CRPER_APELLIDO_PATERNO CRPER_NOMBRES, 
		CKUPV.CKUPV_CODIGO,
		CKPVT.CKPVT_CODIGO FROM CGG_KDX_USUARIO_PV CKUPV
	INNER JOIN  CGG_USUARIO CUSU ON CUSU.CUSU_CODIGO = CKUPV.CUSU_CODIGO
	INNER JOIN  CGG_RES_PERSONA CRPER ON CUSU.CRPER_CODIGO = CRPER.CRPER_CODIGO
	INNER JOIN  CGG_KDX_PUNTO_VENTA CKPVT ON CKPVT.CKPVT_CODIGO = CKUPV.CKPVT_CODIGO
	WHERE CKUPV.CKUPV_ESTADO = TRUE AND 
	CKUPV.CKPVT_ACTIVO = TRUE AND 
	CUSU_NOMBRE_USUARIO = IN_CUSU_NOMBRE_USUARIO;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;


/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_S_CGG_KDX_USUARIO_RECIBE_PV
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_ASIGNACION.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_S_CGG_KDX_USUARIO_RECIBE_PV(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_CGG_CKUPV_CODIGO SII.CGG_KDX_ASIGNACION.CGG_CKUPV_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CKASG_CODIGO, 
		CKTRN_CODIGO, 	
		(SELECT ESP.CKESP_NOMBRE FROM CGG_KDX_TRANSFERENCIA TRANS
		INNER JOIN CGG_KDX_ESPECIE ESP ON TRANS.CKESP_CODIGO = ESP.CKESP_CODIGO
		WHERE TRANS.CKTRN_CODIGO = CKASG.CKTRN_CODIGO) CKESP_NOMBRE,
		CKUPV_CODIGO,
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(CKUPV_CODIGO) CRPER_NOMBRES_USUARIO_ENTREGA, 
		CGG_CKUPV_CODIGO,
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(CGG_CKUPV_CODIGO) CRPER_NOMBRES_USUARIO_RECIBE,
		CGG_CKASG_CODIGO, 
		CKASG_NUMERO_ASIGNACION, 
		CKASG_FECHA_RECEPCION, 
		CKASG_CANTIDAD, 
		CKASG_PRECIO_UNITARIO, 
		CKASG_SERIE_INICIO, 
		CKASG_SERIE_FIN, 
		CKASG_CANTIDAD_DISPONIBLE,
		CKASG_ESTADO_ASIGNACION 
	FROM SII.CGG_KDX_ASIGNACION CKASG
	WHERE CGG_CKUPV_CODIGO = '||quote_literal(IN_CGG_CKUPV_CODIGO)||'
	AND CKASG_CANTIDAD > 0
	AND CKASG_ESTADO = TRUE
	AND CKASG_CODIGO NOT IN(SELECT CGG_CKASG_CODIGO 
				FROM CGG_KDX_ASIGNACION 
				WHERE CKUPV_CODIGO = '||quote_literal(IN_CGG_CKUPV_CODIGO)||'
				AND CKASG_CANTIDAD > 0
				AND CKASG_ESTADO = TRUE AND CGG_CKASG_CODIGO IS NOT NULL) AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CKASG_NUMERO_ASIGNACION, '''')||'' ''||COALESCE(CKASG_FECHA_RECEPCION, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKASG_CANTIDAD, 0)||'' ''||COALESCE(CKASG_PRECIO_UNITARIO, 0)||'' ''||COALESCE(CKASG_SERIE_INICIO, 0)||'' ''||COALESCE(CKASG_SERIE_FIN, 0)||'' ''||COALESCE(CKASG_CANTIDAD_DISPONIBLE, 0)||'' ''||COALESCE(CKASG_ESTADO_ASIGNACION, 0)) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_COUNT_USUARIO_RECIBE_PV
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_KDX_ASIGNACION
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param IN_CGG_CKUPV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO DE PUNTO DE VENTA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_COUNT_USUARIO_RECIBE_PV(
IN IN_FIND_TEXT TEXT,
IN IN_CGG_CKUPV_CODIGO SII.CGG_KDX_ASIGNACION.CGG_CKUPV_CODIGO%TYPE
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_KDX_ASIGNACION
	WHERE CGG_CKUPV_CODIGO = IN_CGG_CKUPV_CODIGO
	AND CKASG_CANTIDAD > 0
	AND CKASG_ESTADO = TRUE
	AND CKASG_CODIGO NOT IN(SELECT CGG_CKASG_CODIGO 
				FROM CGG_KDX_ASIGNACION 
				WHERE CKUPV_CODIGO = IN_CGG_CKUPV_CODIGO
				AND CKASG_CANTIDAD > 0
				AND CKASG_ESTADO = TRUE AND CGG_CKASG_CODIGO IS NOT NULL) AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CKASG_NUMERO_ASIGNACION, '''')||' '||COALESCE(CKASG_FECHA_RECEPCION, CURRENT_TIMESTAMP)||' '||COALESCE(CKASG_CANTIDAD, 0)||' '||COALESCE(CKASG_PRECIO_UNITARIO, 0)||' '||COALESCE(CKASG_SERIE_INICIO, 0)||' '||COALESCE(CKASG_SERIE_FIN, 0)||' '||COALESCE(CKASG_CANTIDAD_DISPONIBLE, 0)||' '||COALESCE(CKASG_ESTADO_ASIGNACION, 0)||' '||COALESCE(CKASG_ESTADO, FALSE)||' '||COALESCE(CKASG_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CKASG_USUARIO_INSERT, '''')||' '||COALESCE(CKASG_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CKASG_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_SELECT1
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_ASIGNACION.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_SELECT1(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CKASG_CODIGO, 
		CKASG.CKTRN_CODIGO,
		CKTRN.CKTRN_NUMERO_TRANSFERENCIA,
		ESP.CKESP_NOMBRE, 
		CKUPV_CODIGO, 
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(CKUPV_CODIGO) CRPER_NOMBRES_USUARIO_ENTREGA, 
		CGG_CKUPV_CODIGO,
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(CGG_CKUPV_CODIGO) CRPER_NOMBRES_USUARIO_RECIBE,
		CGG_CKASG_CODIGO, 
		(SELECT CKASG_NUMERO_ASIGNACION FROM CGG_KDX_ASIGNACION CKASG1 WHERE CKASG_CODIGO = CKASG.CGG_CKASG_CODIGO) CKASG_NUMERO_ASIGNACION ,
		CKASG_NUMERO_ASIGNACION,  
		CKASG_FECHA_RECEPCION, 
		CKASG_CANTIDAD, 
		CKASG_PRECIO_UNITARIO, 
		CKASG_SERIE_INICIO, 
		CKASG_SERIE_FIN, 
		CKASG_CANTIDAD_DISPONIBLE,
		CKASG_ESTADO_ASIGNACION
	FROM SII.CGG_KDX_ASIGNACION CKASG
	INNER JOIN SII.CGG_KDX_TRANSFERENCIA CKTRN ON(CKTRN.CKTRN_CODIGO = CKASG.CKTRN_CODIGO)
	INNER JOIN SII.CGG_KDX_ESPECIE ESP ON(CKTRN.CKESP_CODIGO = ESP.CKESP_CODIGO)
	WHERE CKASG_ESTADO = TRUE AND CKTRN.CKTRN_CODIGO = CKASG.CKTRN_CODIGO AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(CKTRN.CKTRN_NUMERO_TRANSFERENCIA,'''')||'' ''||
	COALESCE(ESP.CKESP_NOMBRE,'''')||'' ''||
	COALESCE(CKASG_NUMERO_ASIGNACION, '''')||'' ''||
	COALESCE(CKASG_FECHA_RECEPCION, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CKASG_CANTIDAD, 0)||'' ''||
	COALESCE(CKASG_PRECIO_UNITARIO, 0)||'' ''||
	COALESCE(CKASG_SERIE_INICIO, 0)||'' ''||
	COALESCE(CKASG_SERIE_FIN, 0)||'' ''||
	COALESCE(CKASG_CANTIDAD_DISPONIBLE, 0)||'' ''||
	COALESCE(CKASG_ESTADO_ASIGNACION, 0)||'' ''||
	COALESCE(CKASG_ESTADO, FALSE)||'' ''||
	COALESCE(CKASG_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CKASG_USUARIO_INSERT, '''')||'' ''||
	COALESCE(CKASG_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKASG_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;




/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_UPDATE_ESTADO
* ACTUALIZA UN REGISTRO EN LA TABLA SII.CGG_KDX_ASIGNACION
* @param IN_CKASG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ASIGNACION
* @param IN_CKASG_ESTADO_ASIGNACION ESTADO DEL REGISTRO DE VENTA UTILIZADO PARA OPERACIONES
0.-  REGISTRADA
1.-  REASIGNADA
2.-  FINALIZADA
* @param IN_CKASG_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_UPDATE_ESTADO(
IN IN_CKASG_CODIGO SII.CGG_KDX_ASIGNACION.CKASG_CODIGO%TYPE,
IN IN_CKASG_ESTADO_ASIGNACION SII.CGG_KDX_ASIGNACION.CKASG_ESTADO_ASIGNACION%TYPE,
IN IN_CKASG_USUARIO_UPDATE SII.CGG_KDX_ASIGNACION.CKASG_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
DECLARE
BEGIN
	
	UPDATE CGG_KDX_ASIGNACION
	SET 
		CKASG_ESTADO_ASIGNACION = IN_CKASG_ESTADO_ASIGNACION,
		CKASG_USUARIO_UPDATE = IN_CKASG_USUARIO_UPDATE
	WHERE CKASG_CODIGO = IN_CKASG_CODIGO; 
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;



/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_SELECT_PV
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_ASIGNACION.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_SELECT_PV(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CKASG_CODIGO, 
		CKASG.CKTRN_CODIGO,
		CKTRN.CKTRN_NUMERO_TRANSFERENCIA,
		ESP.CKESP_NOMBRE, 
		CKUPV_CODIGO, 
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(CKUPV_CODIGO) CRPER_NOMBRES_USUARIO_ENTREGA, 
		CGG_CKUPV_CODIGO,
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(CGG_CKUPV_CODIGO) CRPER_NOMBRES_USUARIO_RECIBE,
		CGG_CKASG_CODIGO, 
		(SELECT CKASG_NUMERO_ASIGNACION FROM CGG_KDX_ASIGNACION CKASG1 WHERE CKASG_CODIGO = CKASG.CGG_CKASG_CODIGO) CKASG_NUMERO_ASIGNACION1 ,
		CKASG_NUMERO_ASIGNACION,  
		CKASG_FECHA_RECEPCION, 
		CKASG_CANTIDAD, 
		CKASG_PRECIO_UNITARIO, 
		CKASG_SERIE_INICIO, 
		CKASG_SERIE_FIN, 
		CKASG_CANTIDAD_DISPONIBLE,
		CKASG_OBSERVACION,
		CKASG_ESTADO_ASIGNACION
	FROM SII.CGG_KDX_ASIGNACION CKASG
	INNER JOIN SII.CGG_KDX_TRANSFERENCIA CKTRN ON(CKTRN.CKTRN_CODIGO = CKASG.CKTRN_CODIGO)
	INNER JOIN SII.CGG_KDX_ESPECIE ESP ON(CKTRN.CKESP_CODIGO = ESP.CKESP_CODIGO)
	WHERE CKASG_ESTADO = TRUE  AND  CKTRN.CKPVT_CODIGO = (SELECT CKPVT_CODIGO FROM SII.CGG_KDX_USUARIO_PV UPV1
			INNER JOIN CGG_USUARIO CUSU ON (UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
			WHERE CUSU_NOMBRE_USUARIO = '''||IN_USER_NAME||''' AND CKUPV_ESTADO)
	AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(CKTRN.CKTRN_NUMERO_TRANSFERENCIA,'''')||'' ''||
	COALESCE(ESP.CKESP_NOMBRE,'''')||'' ''||
	COALESCE(CKASG_NUMERO_ASIGNACION, '''')||'' ''||
	COALESCE(CKASG_FECHA_RECEPCION, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CKASG_CANTIDAD, 0)||'' ''||
	COALESCE(CKASG_PRECIO_UNITARIO, 0)||'' ''||
	COALESCE(CKASG_SERIE_INICIO, 0)||'' ''||
	COALESCE(CKASG_SERIE_FIN, 0)||'' ''||
	COALESCE(CKASG_CANTIDAD_DISPONIBLE, 0)||'' ''||
	COALESCE(CKASG_ESTADO_ASIGNACION, 0)||'' ''||
	COALESCE(CKASG_ESTADO, FALSE)||'' ''||
	COALESCE(CKASG_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CKASG_USUARIO_INSERT, '''')||'' ''||
	COALESCE(CKASG_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKASG_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_COUNT_PV
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_KDX_ASIGNACION
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param IN_USER_NAME NOMBRE DE USUARIO
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_COUNT_PV(
IN IN_FIND_TEXT TEXT,
IN IN_USER_NAME VARCHAR
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_KDX_ASIGNACION CKASG
	INNER JOIN SII.CGG_KDX_TRANSFERENCIA CKTRN ON(CKTRN.CKTRN_CODIGO = CKASG.CKTRN_CODIGO)
	INNER JOIN SII.CGG_KDX_ESPECIE ESP ON(CKTRN.CKESP_CODIGO = ESP.CKESP_CODIGO)
	WHERE CKASG_ESTADO = TRUE  AND  CKTRN.CKPVT_CODIGO = (SELECT CKPVT_CODIGO FROM SII.CGG_KDX_USUARIO_PV UPV1
			INNER JOIN CGG_USUARIO CUSU ON (UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
			WHERE CUSU_NOMBRE_USUARIO = IN_USER_NAME AND CKUPV_ESTADO )
	AND CKASG.CKASG_ESTADO = TRUE
	AND SII.F_STRING_IN(IN_FIND_TEXT,
	COALESCE(CKTRN.CKTRN_NUMERO_TRANSFERENCIA,'')||' '||
	COALESCE(ESP.CKESP_NOMBRE,'')||' '||
	COALESCE(CKASG_NUMERO_ASIGNACION, '')||' '||
	COALESCE(CKASG_FECHA_RECEPCION, CURRENT_TIMESTAMP)||' '||
	COALESCE(CKASG_CANTIDAD, 0)||' '||
	COALESCE(CKASG_PRECIO_UNITARIO, 0)||' '||
	COALESCE(CKASG_SERIE_INICIO, 0)||' '||
	COALESCE(CKASG_SERIE_FIN, 0)||' '||
	COALESCE(CKASG_CANTIDAD_DISPONIBLE, 0)||' '||
	COALESCE(CKASG_ESTADO_ASIGNACION, 0)||' '||
	COALESCE(CKASG_ESTADO, FALSE)||' '||
	COALESCE(CKASG_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||
	COALESCE(CKASG_USUARIO_INSERT, '')||' '||
	COALESCE(CKASG_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CKASG_USUARIO_UPDATE, '')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;



/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_SELECT_STOCK_PV
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_ASIGNACION.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_SELECT_STOCK_PV(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CKASG_CODIGO, 
		CKASG.CKTRN_CODIGO,
		CKTRN.CKTRN_NUMERO_TRANSFERENCIA,
		ESP.CKESP_NOMBRE, 
		CKUPV_CODIGO, 
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(CKUPV_CODIGO) CRPER_NOMBRES_USUARIO_ENTREGA, 
		CGG_CKUPV_CODIGO,
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(CGG_CKUPV_CODIGO) CRPER_NOMBRES_USUARIO_RECIBE,
		CGG_CKASG_CODIGO, 
		(SELECT CKASG_NUMERO_ASIGNACION FROM CGG_KDX_ASIGNACION CKASG1 WHERE CKASG_CODIGO = CKASG.CGG_CKASG_CODIGO) CKASG_NUMERO_ASIGNACION1 ,
		CKASG_NUMERO_ASIGNACION,  
		CKASG_FECHA_RECEPCION, 
		CKASG_CANTIDAD, 
		CKASG_PRECIO_UNITARIO, 
		CKASG_SERIE_INICIO, 
		CKASG_SERIE_FIN, 
		CKASG_CANTIDAD_DISPONIBLE,
		CKASG_OBSERVACION,
		CKASG_ESTADO_ASIGNACION
	FROM SII.CGG_KDX_ASIGNACION CKASG
	INNER JOIN SII.CGG_KDX_TRANSFERENCIA CKTRN ON(CKTRN.CKTRN_CODIGO = CKASG.CKTRN_CODIGO)
	INNER JOIN SII.CGG_KDX_ESPECIE ESP ON(CKTRN.CKESP_CODIGO = ESP.CKESP_CODIGO)
	WHERE CKASG_ESTADO = TRUE  AND  CKTRN.CKPVT_CODIGO = (SELECT CKPVT_CODIGO FROM SII.CGG_KDX_USUARIO_PV UPV1
			INNER JOIN CGG_USUARIO CUSU ON (UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
			WHERE CUSU_NOMBRE_USUARIO = '''||IN_USER_NAME||''' AND CKPVT_ACTIVO AND CKUPV_ESTADO)
	AND CKASG.CKASG_ESTADO_ASIGNACION = 0 AND CKASG.CKASG_CANTIDAD_DISPONIBLE >0
	AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(CKTRN.CKTRN_NUMERO_TRANSFERENCIA,'''')||'' ''||
	COALESCE(ESP.CKESP_NOMBRE,'''')||'' ''||
	COALESCE(CKASG_NUMERO_ASIGNACION, '''')||'' ''||
	COALESCE(CKASG_FECHA_RECEPCION, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CKASG_CANTIDAD, 0)||'' ''||
	COALESCE(CKASG_PRECIO_UNITARIO, 0)||'' ''||
	COALESCE(CKASG_SERIE_INICIO, 0)||'' ''||
	COALESCE(CKASG_SERIE_FIN, 0)||'' ''||
	COALESCE(CKASG_CANTIDAD_DISPONIBLE, 0)||'' ''||
	COALESCE(CKASG_ESTADO_ASIGNACION, 0)||'' ''||
	COALESCE(CKASG_ESTADO, FALSE)||'' ''||
	COALESCE(CKASG_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CKASG_USUARIO_INSERT, '''')||'' ''||
	COALESCE(CKASG_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKASG_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ASIGNACION_COUNT_PV
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_KDX_ASIGNACION.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param IN_USER_NAME NOMBRE DE USUARIO
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ASIGNACION_COUNT_STOCK_PV(
IN IN_FIND_TEXT TEXT,
IN IN_USER_NAME VARCHAR
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_KDX_ASIGNACION CKASG
	INNER JOIN SII.CGG_KDX_TRANSFERENCIA CKTRN ON(CKTRN.CKTRN_CODIGO = CKASG.CKTRN_CODIGO)
	INNER JOIN SII.CGG_KDX_ESPECIE ESP ON(CKTRN.CKESP_CODIGO = ESP.CKESP_CODIGO)
	WHERE CKASG_ESTADO = TRUE  AND  CKTRN.CKPVT_CODIGO = (SELECT CKPVT_CODIGO FROM SII.CGG_KDX_USUARIO_PV UPV1
			INNER JOIN CGG_USUARIO CUSU ON (UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
			WHERE CUSU_NOMBRE_USUARIO = IN_USER_NAME AND CKPVT_ACTIVO AND CKUPV_ESTADO)
	AND CKASG.CKASG_ESTADO_ASIGNACION = 0 AND CKASG.CKASG_CANTIDAD_DISPONIBLE >0
	AND CKASG.CKASG_ESTADO = TRUE
	AND SII.F_STRING_IN(IN_FIND_TEXT,
	COALESCE(CKTRN.CKTRN_NUMERO_TRANSFERENCIA,'')||' '||
	COALESCE(ESP.CKESP_NOMBRE,'')||' '||
	COALESCE(CKASG_NUMERO_ASIGNACION, '')||' '||
	COALESCE(CKASG_FECHA_RECEPCION, CURRENT_TIMESTAMP)||' '||
	COALESCE(CKASG_CANTIDAD, 0)||' '||
	COALESCE(CKASG_PRECIO_UNITARIO, 0)||' '||
	COALESCE(CKASG_SERIE_INICIO, 0)||' '||
	COALESCE(CKASG_SERIE_FIN, 0)||' '||
	COALESCE(CKASG_CANTIDAD_DISPONIBLE, 0)||' '||
	COALESCE(CKASG_ESTADO_ASIGNACION, 0)||' '||
	COALESCE(CKASG_ESTADO, FALSE)||' '||
	COALESCE(CKASG_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||
	COALESCE(CKASG_USUARIO_INSERT, '')||' '||
	COALESCE(CKASG_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CKASG_USUARIO_UPDATE, '')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


