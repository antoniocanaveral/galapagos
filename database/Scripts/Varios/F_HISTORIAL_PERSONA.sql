/**
* FUNCION F_CGG_RES_PERSONA_SELECT_CONSULTA_GENERAL
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_PERSONA RELACIONADA CON LAS TABLAS SII.CGG_RES_ESTADO_CIVIL,SII.CGG_RES_DOCUMENTO_IDENTIFICACIO,ETC.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
 CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_SELECT_CONSULTA_GENERAL(
IN_USER_NAME VARCHAR, 
IN_START_INDEX INTEGER, 
IN_LIMIT INTEGER, 
IN_SORT_FIELD_NAME VARCHAR, 
IN_DIRECTION VARCHAR, 
IN_FIND_TEXT TEXT, 
IN_IDENTIFICACION VARCHAR
)RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
	TMP_ID VARCHAR;
	TMP_SQL TEXT;
BEGIN
	TMP_ID = '';
	TMP_SQL =' ';
	IF(LENGTH(IN_IDENTIFICACION) > 0) THEN
		TMP_ID = '(PER.CRPER_NUM_DOC_IDENTIFIC LIKE '||QUOTE_LITERAL(IN_IDENTIFICACION)||' OR PER.CRPER_NUMERO_RESIDENCIA LIKE '||QUOTE_LITERAL(IN_IDENTIFICACION)||') AND';
	END IF;
		
	TMP_SQL = 'SELECT PER.CRPER_CODIGO,
		ECV.CRECV_DESCRPCION CRECV_ESTADO_CIVIL,
		TDI.CRDID_DESCRIPCION CRDID_TIPO,
		NAC.CGNCN_NACIONALIDAD CGNCN_NOMBRE,
		PRV.CGPRV_NOMBRE CRPER_LUGAR_NACIMIENTO,
		PRVR.CGPRV_NOMBRE CCNT_NOMBRE,
        CAN.CCTN_NOMBRE CCNT_NOMBRE_ORIGEN,
       PER.CRPER_NOMBRES,
       PER.CRPER_APELLIDO_PATERNO,
       PER.CRPER_APELLIDO_MATERNO,
       PER.CRPER_NUM_DOC_IDENTIFIC,
       PER.CRPER_FECHA_NACIMIENTO,
       PER.CRPER_GENERO,
       PER.CRPER_NUMERO_RESIDENCIA,
       PER.CRPER_FOTO,
       PER.CRPER_AUTORIZADO,
       PER.CRPER_TIPO_PERSONA,
		 NOT PER.CRPER_CUPO_VEHICULAR CRPER_CUPO_VEHICULAR,
       PER.CRPER_TIPO,
       OB.CROBS_CODIGO,
       N.CRNOT_CODIGO,
       PER.CRPER_ESTADO
	FROM SII.CGG_RES_PERSONA PER 
	LEFT JOIN SII.CGG_RES_DOCUMENTO_IDENTIFICACIO TDI ON TDI.CRDID_CODIGO = PER.CRDID_CODIGO
	LEFT JOIN SII.CGG_RES_ESTADO_CIVIL ECV ON ECV.CRECV_CODIGO =PER.CRECV_CODIGO
	LEFT JOIN SII.CGG_NACIONALIDAD NAC ON NAC.CGNCN_CODIGO = PER.CGNCN_CODIGO
	LEFT JOIN SII.CGG_CANTON CAN ON CAN.CCTN_CODIGO = PER.CGG_CCTN_CODIGO
	LEFT JOIN SII.CGG_CANTON CTN ON CTN.CCTN_CODIGO = PER.CRPER_LUGAR_NACIMIENTO
	LEFT JOIN SII.CGG_PROVINCIA PRV ON PRV.CGPRV_CODIGO = CTN.CGPRV_CODIGO
	LEFT JOIN SII.CGG_CANTON CTNR ON CTNR.CCTN_CODIGO = PER.CCTN_CODIGO
	LEFT JOIN SII.CGG_PROVINCIA PRVR ON PRVR.CGPRV_CODIGO = CTNR.CGPRV_CODIGO
	LEFT JOIN SII.CGG_RES_OBSERVADO OB ON (PER.CRPER_CODIGO = OB.CRPER_CODIGO)
	LEFT JOIN SII.CGG_RES_NOTIFICACION N ON (PER.CRPER_CODIGO = N.CRPER_CODIGO)
	WHERE PER.CRPER_ESTADO AND '
		||TMP_ID||'
		(LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR crper_index @@ plainto_tsquery('||QUOTE_LITERAL(IN_FIND_TEXT)||'))
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	
	OPEN TMP_REF FOR EXECUTE TMP_SQL;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;
  
  CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_SELECT_CONSULTA_GENERAL_COUNT(
IN_FIND_TEXT TEXT, 
IN_IDENTIFICACION VARCHAR
)RETURNS INT4 AS
$BODY$
DECLARE	
	TMP_ID VARCHAR;
	TMP_SQL TEXT;
	TMP_ROWS INT4;
BEGIN
	TMP_ROWS=0;
	TMP_ID = '';
	TMP_SQL =' ';
	IF(LENGTH(IN_IDENTIFICACION) > 0) THEN
		TMP_ID = '(PER.CRPER_NUM_DOC_IDENTIFIC LIKE '||QUOTE_LITERAL(IN_IDENTIFICACION)||' OR PER.CRPER_NUMERO_RESIDENCIA LIKE '||QUOTE_LITERAL(IN_IDENTIFICACION)||') AND';
	END IF;
		
	TMP_SQL = 'SELECT COUNT(PER.CRPER_CODIGO) INTO TMP_ROWS
	FROM SII.CGG_RES_PERSONA PER 
	LEFT JOIN SII.CGG_RES_DOCUMENTO_IDENTIFICACIO TDI ON TDI.CRDID_CODIGO = PER.CRDID_CODIGO
	LEFT JOIN SII.CGG_RES_ESTADO_CIVIL ECV ON ECV.CRECV_CODIGO =PER.CRECV_CODIGO
	LEFT JOIN SII.CGG_NACIONALIDAD NAC ON NAC.CGNCN_CODIGO = PER.CGNCN_CODIGO
	LEFT JOIN SII.CGG_CANTON CAN ON CAN.CCTN_CODIGO = PER.CGG_CCTN_CODIGO
	LEFT JOIN SII.CGG_CANTON CTN ON CTN.CCTN_CODIGO = PER.CRPER_LUGAR_NACIMIENTO
	LEFT JOIN SII.CGG_PROVINCIA PRV ON PRV.CGPRV_CODIGO = CTN.CGPRV_CODIGO
	LEFT JOIN SII.CGG_CANTON CTNR ON CTNR.CCTN_CODIGO = PER.CCTN_CODIGO
	LEFT JOIN SII.CGG_PROVINCIA PRVR ON PRVR.CGPRV_CODIGO = CTNR.CGPRV_CODIGO
	LEFT JOIN SII.CGG_RES_OBSERVADO OB ON (PER.CRPER_CODIGO = OB.CRPER_CODIGO)
	LEFT JOIN SII.CGG_RES_NOTIFICACION N ON (PER.CRPER_CODIGO = N.CRPER_CODIGO)
	WHERE PER.CRPER_ESTADO AND '
		||TMP_ID||'
		(LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR crper_index @@ plainto_tsquery('||QUOTE_LITERAL(IN_FIND_TEXT)||'))';
	
	EXECUTE IMMEDIATE TMP_SQL;
	RETURN TMP_ROWS;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE;

/**
* FUNCTION: F_CGG_RES_PERSONA_CONSULTA_OBSERVADO
* SELECCIONA N REGISTROS DE VARIAS TABLAS CGG_RES_PERSONA,CGG_RES_RESIDENCIA.
* @param IN_CRPER_CODIGO CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_CONSULTA_OBSERVADO(IN_CRPER_CODIGO CHARACTER VARYING)
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		OB.CROBS_CODIGO, 
		PER.CRPER_CODIGO, 
		OB.CROBS_FECHA_OBSERVACION, 
		OB.CROBS_DESCRIPCION, 
		OB.CROBS_RESUELTO, 
		OB.CROBS_FECHA_RESUELTO
	        FROM SII.CGG_RES_PERSONA PER
		INNER JOIN SII.CGG_RES_OBSERVADO OB
		ON (PER.CRPER_CODIGO = OB.CRPER_CODIGO)
		WHERE OB.CROBS_ESTADO=TRUE AND OB.CRPER_CODIGO='''||IN_CRPER_CODIGO||'''';
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;

/**
* FUNCTION: F_CGG_RES_PERSONA_CONSULTA_NOTIFICADO
* SELECCIONA LOS REGISTROS DE NOTIFICACIONES DE UNA PERSONA
* @param IN_CRPER_CODIGO CRITERIO DE BUSQUEDA
* @return TMP_ROWS
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_CONSULTA_NOTIFICADO(
IN IN_CRPER_CODIGO CHARACTER VARYING
)RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT 
	        N.CRNOT_CODIGO, 
	        PRS.CRPER_CODIGO,
		N.CRNOT_NUMERO_NOTIFICACION, 
		N.CRNOT_FECHA_NOTIFICACION, 
		N.CROSG_CODIGO, 
		(SELECT PER.CRPER_NOMBRES||'' ''||PER.CRPER_APELLIDO_PATERNO||'' ''||PER.CRPER_APELLIDO_MATERNO FROM SII.CGG_RES_PERSONA PER
                 INNER JOIN SII.CGG_RES_OFICIAL_SEGUIMIENTO OS ON (OS.CROSG_CODIGO=N.CROSG_CODIGO)
                 INNER JOIN SII.CGG_USUARIO U ON (OS.CUSU_CODIGO=U.CUSU_CODIGO)
                 WHERE U.CRPER_CODIGO=PER.CRPER_CODIGO)AS CROSG_NOMBRE_NOTIFICACION,
		N.CRNOT_ESTADO_NOTIFICACION, 
		N.CRNOT_FECHA_SALIDA_VOLUNT, 
		N.CRNOT_FECHA_EXPULSION,
		N.CRNOT_REGULARIZACION
	FROM SII.CGG_RES_NOTIFICACION N INNER JOIN SII.CGG_RES_PERSONA PRS ON(PRS.CRPER_CODIGO=N.CRPER_CODIGO)
    WHERE N.CRNOT_ESTADO=TRUE AND N.CRPER_CODIGO='''||IN_CRPER_CODIGO||'''';
	RETURN NEXT TMP_REF;
END
$BODY$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_PERSONA_SELECT_MOVILIDAD_GENERAL
* FUNCION QUE SELECCIONA LOS INGRESOS Y SALIDAS DE LA PROVINCIA CON SU RESPECTIVA RESIDENCIA.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param INCRPER_CODIGO IDENTIFICATIVO UNICO DE PERSONA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_SELECT_MOVILIDAD_GENERAL(
IN IN_USER_NAME CHARACTER VARYING, 
IN IN_START_INDEX INTEGER, 
IN IN_LIMIT INTEGER, 
IN IN_SORT_FIELD_NAME CHARACTER VARYING, 
IN IN_DIRECTION CHARACTER VARYING, 
IN IN_FIND_TEXT TEXT,
IN INCRPER_CODIGO CHARACTER VARYING
)RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT CASE MOV.CRMOV_TIPO_OPERACION WHEN 0 THEN MOV.CRMOV_FECHA_VIAJE ELSE NULL END FECHA_VIAJE_INGRESO,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 0 THEN MOV.CRMOV_TIPO_OPERACION ELSE NULL END CRMOV_TIPO_OPERACION,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 0 THEN MOV.CRMOV_CODIGO ELSE NULL END CRMOV_CODIGO,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 0 THEN AER.CRALN_NOMBRE ELSE NULL END CRALN_NOMBRE_INGRESO,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 0 THEN ART.CARPT_NOMBRE ELSE NULL END CARPT_NOMBRE_INGRESO,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 0 THEN ARP.CARPT_NOMBRE ELSE NULL END CGG_CARPT_NOMBRE_INGRESO, 
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 0 THEN MOV.CRMOV_NUMERO_VUELO ELSE NULL END CRMOV_NUMERO_VUELO,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 0 THEN TSTI.CRTST_DESCRIPCION ELSE NULL END TIPO_RESIDENCIA,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 1 THEN MOV.CRMOV_FECHA_VIAJE ELSE NULL END CRMOV_FECHA_VIAJE_SALIDA,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 1 THEN MOV.CRMOV_TIPO_OPERACION ELSE NULL END CRMOV_TIPO_OPERACION_SALIDA,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 1 THEN MOV.CRMOV_CODIGO ELSE NULL END CRMOV_CODIGO_SALIDA,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 1 THEN AER.CRALN_NOMBRE ELSE NULL END CRALN_NOMBRE_SALIDA,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 1 THEN ART.CARPT_NOMBRE ELSE NULL END CARPT_NOMBRE_SALIDA,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 1 THEN ARP.CARPT_NOMBRE ELSE NULL END CGG_CARPT_NOMBRE_SALIDA, 
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 1 THEN MOV.CRMOV_NUMERO_VUELO ELSE NULL END CRMOV_NUMERO_VUELO_SALIDA,
		CASE MOV.CRMOV_TIPO_OPERACION WHEN 1 THEN TSTI.CRTST_DESCRIPCION ELSE NULL END TIPO_RESIDENCIA_SALIDA
	FROM SII.CGG_RES_PERSONA PER
	INNER JOIN SII.CGG_RES_MOVILIDAD MOV ON MOV.CRPER_CODIGO = PER.CRPER_CODIGO AND MOV.CRMOV_ESTADO
	INNER JOIN SII.CGG_RES_RESIDENCIA RSI ON RSI.CRRSD_CODIGO=MOV.CRRSD_CODIGO
	INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TSTI ON TSTI.CRTST_CODIGO = RSI.CRTST_CODIGO
	LEFT JOIN SII.CGG_RES_AEROLINEA AER ON AER.CRALN_CODIGO=MOV.CRALN_CODIGO
	LEFT JOIN SII.CGG_RES_AEROPUERTO ART ON ART.CARPT_CODIGO=MOV.CARPT_CODIGO
	LEFT JOIN SII.CGG_RES_AEROPUERTO ARP ON ARP.CARPT_CODIGO=MOV.CGG_CARPT_CODIGO
	WHERE PER.CRPER_CODIGO = '||QUOTE_LITERAL(INCRPER_CODIGO)||'
	ORDER BY MOV.CRMOV_FECHA_VIAJE DESC, MOV.CRMOV_TIPO_OPERACION DESC
	LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE COST 100 ROWS 1000;

/** 
* FUNCTION: F_CGG_RES_PERSONA_SELECT_MOVILIDAD_GENERAL_COUNT
* CONTABILIZA N REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD RELACIONADA CON SII.CGG_RES_RESIDENCIA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param IN_CRPER_CODIGO IDENTIFICATIVO UNICO DE PERSONA
* @return TMP_ROWS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_SELECT_MOVILIDAD_GENERAL_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_CRPER_CODIGO CHARACTER VARYING
)RETURNS INTEGER AS
$BODY$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_MOVILIDAD MOV
	INNER JOIN SII.CGG_RES_PERSONA PER ON(MOV.CRPER_CODIGO = PER.CRPER_CODIGO)
	WHERE MOV.CRMOV_ESTADO
	AND PER.CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN TMP_ROWS;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;

/**
* FUNCION F_CGG_RES_PERSONA_SELECT_MOVILIDAD_INTERNA
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA. 
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_SELECT_MOVILIDAD_INTERNA(
IN_USER_NAME CHARACTER VARYING, 
IN_START_INDEX INTEGER, 
IN_LIMIT INTEGER, 
IN_SORT_FIELD_NAME CHARACTER VARYING, 
IN_DIRECTION CHARACTER VARYING, 
IN_FIND_TEXT TEXT,INCRPER_CODIGO CHARACTER VARYING
)RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT DISTINCT  MVI.CRMVI_CODIGO,
	       MVI.CRMVI_TIPO_OPERACION,
	       MVI.CRMVI_FECHA_VIAJE,
	       (SELECT EMB.CREMB_NOMBRE FROM SII.CGG_RES_EMBARCACION EMB WHERE EMB.CREMB_CODIGO=MVI.CREMB_CODIGO)AS CREMB_NOMBRE_INGRESO,
	       (SELECT MLE.CRMLE_NOMBRE FROM SII.CGG_RES_MUELLE MLE WHERE MLE.CRMLE_CODIGO=MVI.CRMLE_CODIGO)AS CRMLE_NOMBRE_INGRESO,
	       (SELECT MLE.CRMLE_NOMBRE FROM SII.CGG_RES_MUELLE MLE WHERE MLE.CRMLE_CODIGO=MVI.CGG_CRMLE_CODIGO)AS CGG_CRMLE_NOMBRE_INGRESO,
	       MVD.CRMVI_CODIGO AS CRMVI_CODIGO_SALIDA,
	       MVD.CRMVI_TIPO_OPERACION AS CRMIV_TIPO_OPERACION_SALIDA,
	       MVD.CRMVI_FECHA_VIAJE AS CRMIV_FECHA_VIAJE_SALIDA,
	       (SELECT EMB.CREMB_NOMBRE FROM SII.CGG_RES_EMBARCACION EMB WHERE EMB.CREMB_CODIGO=MVD.CREMB_CODIGO)AS CREMB_NOMBRE_SALIDA,
	       (SELECT MLE.CRMLE_NOMBRE FROM SII.CGG_RES_MUELLE MLE WHERE MLE.CRMLE_CODIGO=MVD.CRMLE_CODIGO)AS CRMLE_NOMBRE_SALIDA,
	       (SELECT MLE.CRMLE_NOMBRE FROM SII.CGG_RES_MUELLE MLE WHERE MLE.CRMLE_CODIGO=MVD.CGG_CRMLE_CODIGO)AS CGG_CRMLE_NOMBRE_SALIDA
	FROM SII.CGG_RES_MOVILIDAD_INTERNA MVI
	INNER JOIN SII.CGG_RES_PERSONA PER ON(MVI.CRPER_CODIGO = PER.CRPER_CODIGO)
	LEFT JOIN SII.CGG_RES_MOVILIDAD_INTERNA MVD ON (MVI.CRPER_CODIGO = MVD.CRPER_CODIGO AND MVD.CRMVI_TIPO_OPERACION = 1
	AND DATE(MVD.CRMVI_FECHA_VIAJE) = (SELECT DATE(MVI2.CRMVI_FECHA_VIAJE)
				      FROM CGG_RES_MOVILIDAD_INTERNA MVI2
				      WHERE DATE(MVI2.CRMVI_FECHA_VIAJE) >= DATE(MVI.CRMVI_FECHA_VIAJE)
				      AND  MVI2.CRPER_CODIGO = PER.CRPER_CODIGO 
				      AND  MVI2.CRMVI_TIPO_OPERACION = 1
				      ORDER BY MVI2.CRMVI_FECHA_VIAJE ASC LIMIT 1 )) --SALIDA
	WHERE  MVI.CRMVI_TIPO_OPERACION = 0 AND (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
	COALESCE(MVI.CRALN_DESCRIPCION_VUELO, '''')||'' ''||
	COALESCE(MVI.CRMVI_FECHA_VIAJE, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(MVI.CRMVI_TIPO_OPERACION, 0)||'' ''||
	COALESCE(MVI.CRMVI_OBSERVACION, '''')||'' ''||
	COALESCE(MVI.CRMVI_ESTADO, FALSE)||'' ''||
	COALESCE(MVI.CRMVI_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(MVI.CRMVI_USUARIO_INSERT, '''')||'' ''||
	COALESCE(MVI.CRMVI_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(MVI.CRMVI_USUARIO_UPDATE, '''') )= 1)AND (LENGTH('||QUOTE_LITERAL(INCRPER_CODIGO)||') = 0 OR PER.CRPER_CODIGO = '||QUOTE_LITERAL(INCRPER_CODIGO)||')
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;

/** FUNCTION: F_CGG_RES_PERSONA_SELECT_MOVILIDAD_INTERNA_COUNT
* CONTABILIZA N REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD_INTERNA RELACIONADA CON SII.CGG_RES_RESIDENCIA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TMP_ROWS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_SELECT_MOVILIDAD_INTERNA_COUNT(IN_FIND_TEXT TEXT)
  RETURNS INTEGER AS
$BODY$
DECLARE
TMP_ROWS INT2;
BEGIN
SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_MOVILIDAD_INTERNA MVI
	INNER JOIN SII.CGG_RES_PERSONA PER ON(MVI.CRPER_CODIGO = PER.CRPER_CODIGO)
	LEFT JOIN SII.CGG_RES_MOVILIDAD_INTERNA MVD ON (MVI.CRPER_CODIGO = MVD.CRPER_CODIGO AND MVD.CRMVI_TIPO_OPERACION = 1
	AND DATE(MVD.CRMVI_FECHA_VIAJE) = (SELECT DATE(MVI2.CRMVI_FECHA_VIAJE)
				      FROM CGG_RES_MOVILIDAD_INTERNA MVI2
				      WHERE DATE(MVI2.CRMVI_FECHA_VIAJE) >= DATE(MVI.CRMVI_FECHA_VIAJE)
				      AND  MVI2.CRPER_CODIGO = PER.CRPER_CODIGO
				      AND  MVI2.CRMVI_TIPO_OPERACION = 1
				      ORDER BY MVI2.CRMVI_FECHA_VIAJE ASC LIMIT 1 )) --SALIDA
	WHERE  MVI.CRMVI_TIPO_OPERACION = 0 AND (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
	COALESCE(MVI.CRALN_DESCRIPCION_VUELO, '''')||' '||
	COALESCE(MVI.CRMVI_FECHA_VIAJE, CURRENT_TIMESTAMP)||' '||
	COALESCE(MVI.CRMVI_TIPO_OPERACION, 0)||' '||
	COALESCE(MVI.CRMVI_OBSERVACION, '''')||' '||
	COALESCE(MVI.CRMVI_ESTADO, FALSE)||' '||
	COALESCE(MVI.CRMVI_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||
	COALESCE(MVI.CRMVI_USUARIO_INSERT, '''')||' '||
	COALESCE(MVI.CRMVI_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||
	COALESCE(MVI.CRMVI_USUARIO_UPDATE, '''') )= 1)AND (LENGTH('||QUOTE_LITERAL(INCRPER_CODIGO)||') = 0 OR PER.CRPER_CODIGO = '||QUOTE_LITERAL(INCRPER_CODIGO)||');
	RETURN TMP_ROWS;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;

/** 
* FUNCION F_CGG_RES_PERSONA_CONSULTA_ESTADIA
* PERMITE CONSULTAR LA RESIDENCIA ACTUAL Y EL TIEMPO DE ESTADIA EN LA PROVINCIA.
* @param IN_CRPER_CODIGO CODIGO DE LA PERSONA.
* @return REFCURSOR
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_CONSULTA_ESTADIA(
IN_CRPER_CODIGO CHARACTER VARYING
)RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR 
	SELECT TST.CRTST_NUMERO_DIAS AS DIAS_AUTORIZADOS,
		SII.F_TRAMITE_TIPO(RES.CRTST_CODIGO) TIPO_RESIDENCIA,
		RES.CRRSD_VIGENTE,
		COALESCE((SELECT MOV.CRMOV_TIPO_OPERACION 
			FROM SII.CGG_RES_MOVILIDAD MOV 
			WHERE MOV.CRMOV_FECHA_VIAJE = (SELECT MAX(MVD.CRMOV_FECHA_VIAJE) FROM SII.CGG_RES_MOVILIDAD MVD WHERE MVD.CRPER_CODIGO=PER.CRPER_CODIGO AND MVD.CRMOV_ESTADO) AND MOV.CRPER_CODIGO=PER.CRPER_CODIGO AND MOV.CRMOV_ESTADO),3)AS TIPO_OPERACION,
		(SELECT MAX(RS.CRRSD_FECHA_INICIO)FROM SII.CGG_RES_RESIDENCIA RS WHERE RS.CRPER_CODIGO=PER.CRPER_CODIGO AND RS.CRRSD_ESTADO)AS FECHA_INICIO,
		(SELECT MAX(RS.CRRSD_FECHA_CADUCIDAD)FROM SII.CGG_RES_RESIDENCIA RS WHERE RS.CRPER_CODIGO=PER.CRPER_CODIGO AND RS.CRRSD_ESTADO)AS FECHA_CADUCIDAD,
		COALESCE((SELECT MAX(DATE(RS.CRRSD_FECHA_CADUCIDAD))-DATE(CURRENT_DATE)
		FROM SII.CGG_RES_RESIDENCIA RS WHERE RS.CRPER_CODIGO=PER.CRPER_CODIGO AND RS.CRRSD_VIGENTE=TRUE AND RS.CRRSD_ESTADO),-1)AS DIAS_VIGENTE,
		(SELECT CASE WHEN DATE(CRRSD_FECHA_CADUCIDAD)>=CURRENT_DATE THEN TRUE
		ELSE FALSE
		END )AS CADUCIDAD,
		SII.F_CALCULO_DIAS_ESTADIA(CURRENT_TIMESTAMP::TIMESTAMP WITH TIME ZONE, RES.CRPER_CODIGO) ESTADIA,
		SII.F_CALCULO_DIAS_ESTADIA_ACTUAL(RES.CRPER_CODIGO)ESTADIA_ACTUAL
	FROM SII.CGG_RES_PERSONA PER
	LEFT JOIN SII.CGG_RES_RESIDENCIA RES ON RES.CRPER_CODIGO = PER.CRPER_CODIGO AND RES.CRRSD_ESTADO 
	LEFT JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = RES.CRTST_CODIGO AND TST.CRTST_ESTADO 
	LEFT JOIN SII.CGG_RES_MOVILIDAD MOV ON MOV.CRMOV_CODIGO = PER.CRPER_CODIGO AND MOV.CRMOV_ESTADO
	WHERE PER.CRPER_ESTADO AND RES.CRRSD_FECHA_INICIO=(SELECT MAX(RS.CRRSD_FECHA_INICIO)FROM SII.CGG_RES_RESIDENCIA RS WHERE RS.CRPER_CODIGO=PER.CRPER_CODIGO ) AND RES.CRPER_CODIGO = IN_CRPER_CODIGO 
	GROUP BY TST.CRTST_NUMERO_DIAS,PER.CRPER_CODIGO,RES.CRTST_CODIGO,MOV.CRMOV_FECHA_VIAJE,MOV.CRMOV_TIPO_OPERACION,RES.CRRSD_VIGENTE,RES.CRRSD_FECHA_INICIO,RES.CRRSD_FECHA_CADUCIDAD,RES.CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$BODY$
LANGUAGE 'PLPGSQL' VOLATILE COST 100 ROWS 1000;


/**
* FUNCTION: F_CGG_RES_PERSONA_CONSULTA_EXPULSION
* SELECCIONA UN REGISTROS DE LA TABLA SII.CGG_RES_PERSONA,CGG_RES_EXPULSION.
* @param IN_CRPER_CODIGO CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION F_CGG_RES_PERSONA_CONSULTA_EXPULSION(IN_CRPER_CODIGO CHARACTER VARYING)
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT 
       EXP.CREXP_CODIGO,
       EXP.CRPER_CODIGO,
       EXP.CREXP_FECHA_EXPULSION,
       EXP.CROSG_CODIGO, 
	(SELECT (U.CUSU_NOMBRES||'' ''||U.CUSU_APELLIDOS )
	 FROM SII.CGG_RES_OFICIAL_SEGUIMIENTO OS
	 INNER JOIN SII.CGG_USUARIO U ON (OS.CUSU_CODIGO=U.CUSU_CODIGO)
	WHERE (OS.CROSG_CODIGO=EXP.CROSG_CODIGO))AS CREXP_NOMBRE_EXPULSION,
	(SELECT N.CRNOT_NUMERO_NOTIFICACION FROM SII.CGG_RES_NOTIFICACION N
	 INNER JOIN SII.CGG_RES_EXPULSION EXP ON (N.CRNOT_CODIGO=EXP.CRNOT_CODIGO))AS CREXP_NUMERO_NOTIFICACION
	
	FROM SII.CGG_RES_PERSONA PER  INNER JOIN SII.CGG_RES_EXPULSION EXP ON(PER.CRPER_CODIGO=EXP.CRPER_CODIGO)
		WHERE EXP.CREXP_ESTADO=TRUE AND EXP.CRPER_CODIGO='''||IN_CRPER_CODIGO||'''';
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;

--FUNCION QUE PERMITE CONSULTAR LAS RESIDENCIAS DE UNA PERSONA
/**-- FUNCTION: F_CGG_RES_PERSONA_HISTORIAL_RESIDENCIA
* SELECCIONA N REGISTROS DE VARIAS TABLAS CGG_RES_PERSONA,CGG_RES_RESIDENCIA.
* @param IN_CRPER_CODIGO CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_RES_PERSONA_HISTORIAL_RESIDENCIA(
IN IN_CRPER_CODIGO CHARACTER VARYING
)RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR 
	SELECT
		DISTINCT SII.F_TRAMITE_TIPO(RES.CRTST_CODIGO) TIPO_RESIDENCIA,
		RES.CRRSD_VIGENTE,
		COALESCE(SL.CISLA_INDICE::VARCHAR,'')||(CASE WHEN RES.CRTST_CODIGO IN (WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
					SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = '03')
					UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
					WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
				) SELECT CRTST_CODIGO  FROM TIPO) THEN
					(SELECT CRTST_INDICE FROM SII.CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = '03') )
			WHEN RES.CRTST_CODIGO IN (WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
					SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = '04')
					UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
					WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
				) SELECT CRTST_CODIGO  FROM TIPO) THEN
					(SELECT CRTST_INDICE FROM SII.CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = '04'))
			ELSE 0 END)||LPAD(RES.CRRSD_NUMERO::VARCHAR,5,'0') NUMERO_RESIDENCIA,
		RES.CRRSD_FECHA_INICIO,
		RES.CRRSD_FECHA_CADUCIDAD,
		RSL.CRRES_NUMERO_RESOLUCION,
		RSL.CRRES_FECHA_EMISION
	FROM SII.CGG_RES_RESIDENCIA RES
	LEFT JOIN SII.CGG_RES_PERSONA PER ON PER.CRPER_CODIGO=RES.CRPER_CODIGO AND PER.CRPER_ESTADO
	LEFT JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = RES.CRTST_CODIGO AND TST.CRTST_ESTADO
	LEFT JOIN SII.CGG_RES_TRAMITE TRM ON (TRM.CRTRA_CODIGO = RES.CRTRA_CODIGO AND TRM.CRTST_CODIGO = RES.CRTST_CODIGO AND TRM.CRTRA_ESTADO)
	LEFT JOIN SII.CGG_RES_RESOL_TRAMITE RST ON RST.CRTRA_CODIGO = TRM.CRTRA_CODIGO AND RST.CRRST_ESTADO
	LEFT JOIN SII.CGG_RES_RESOLUCION RSL ON RSL.CRRES_CODIGO = RST.CRRES_CODIGO AND RSL.CRRES_ESTADO
	LEFT JOIN SII.CGG_ISLA SL ON SL.CISLA_CODIGO = RES.CISLA_CODIGO AND SL.CISLA_ESTADO
	WHERE RES.CRRSD_USUARIO_INSERT NOT LIKE 'monitor' AND 
		RES.CRRSD_ESTADO AND
		PER.CRPER_ESTADO AND 
		RES.CRPER_CODIGO = IN_CRPER_CODIGO 
	ORDER BY CRRSD_FECHA_INICIO DESC;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100
  ROWS 1000;

/**
* FUNCION SII.F_CALCULO_DIAS_ESTADIA_ACTUAL
* CALCULA LOS DIAS DE ESTADIA DE UNA PERSONA DENTRO DE LA PROVINCIA COMO TURISTA O TRANSEUNTE.
* @param IN_CRPER_CODIGO CODIGO DE LA PERSONA
* @return INT DIAS DE ESTADIA DENTRO DE LA PROVINCIA
*/
CREATE OR REPLACE FUNCTION SII.F_CALCULO_DIAS_ESTADIA_ACTUAL(IN_CRPER_CODIGO CHARACTER VARYING)
  RETURNS INTEGER AS
$BODY$
DECLARE
TMP_RECORD RECORD;
TMP_VALOR_DIAS_TRANSCURRIDO INT;
TMP_CRTST_CODIGO VARCHAR;
FECHA_INGRESO DATE;
FECHA_SALIDA DATE;
BEGIN
	SELECT MAX(MOV.CRMOV_FECHA_VIAJE)INTO FECHA_INGRESO FROM SII.CGG_RES_MOVILIDAD MOV WHERE MOV.CRPER_CODIGO= IN_CRPER_CODIGO AND MOV.CRMOV_TIPO_OPERACION=0;
        SELECT MAX(MVD.CRMOV_FECHA_VIAJE) INTO FECHA_SALIDA FROM SII.CGG_RES_MOVILIDAD MVD WHERE MVD.CRPER_CODIGO=IN_CRPER_CODIGO AND MVD.CRMOV_TIPO_OPERACION=1; 
        IF(FECHA_INGRESO>FECHA_SALIDA) OR (TRIM(FECHA_SALIDA::VARCHAR) IS NULL)THEN
        TMP_VALOR_DIAS_TRANSCURRIDO :=CURRENT_DATE - FECHA_INGRESO;
        END IF;
	RETURN TMP_VALOR_DIAS_TRANSCURRIDO;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;


