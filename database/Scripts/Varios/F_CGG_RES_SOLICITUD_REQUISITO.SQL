/**
* FUNCION SII.F_CGG_RES_SOLICITUD_REQUISITO_S_TIPO_SOLICITUD_S_REQUISITO_ALL
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_RES_TIPO_SOLICITUD_TRAMITE Y TAMBIEN CON LA TABLA REQUISITO.
* @param IN_CRTST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO TIPO SOLICITUD
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SOLICITUD_REQUISITO_S_TIPO_SOLICITUD_S_REQUISITO_ALL(
IN IN_CRTST_CODIGO SII.CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT 
		TST.CRTST_DESCRIPCION,
		CRR.CRREQ_DESCRIPCION,
		CRR.CRREQ_OBSERVACION,
		SRQ. CRSRQ_DESCRIPCION,
		CASE SRQ. CRSRQ_REQUERIDO
		WHEN TRUE THEN 'SI'
		ELSE 'NO' END AS CRSRQ_REQUERIDO,
		CASE SRQ. CRSRQ_PARTICIPANTE
		WHEN 0 THEN 'AUSPICIANTE'
		WHEN 1 THEN 'BENEFICIARIO'
		ELSE 'GENERAL' END AS CRSRQ_PARTICIPANTE
	FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST
	INNER JOIN CGG_RES_SOLICITUD_REQUISITO SRQ ON (TST.CRTST_CODIGO = SRQ.CRTST_CODIGO)
	INNER JOIN CGG_RES_REQUISITO CRR ON (CRR.CRREQ_CODIGO = SRQ.CRREQ_CODIGO)
	WHERE TST.CRTST_CODIGO = IN_CRTST_CODIGO
		AND CRR.CRREQ_ESTADO
		AND SRQ.CRSRQ_ESTADO
		ORDER BY SRQ.CRSRQ_PARTICIPANTE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

