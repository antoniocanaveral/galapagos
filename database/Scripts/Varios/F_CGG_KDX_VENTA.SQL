/**
* FUNCION SII.F_CGG_KDX_VENTA_GENERA_NUMERO
* SELECCIONA EL NUMERO SECUENCIAL SIGUIENTE CORRESPONDIENTE A UNA VENTA.
* BAJO EL CONTROL DE REALIZARLO POR PUNTO DE VENTA.
* @param IN_CUSU_NOMBRE_USUARIO REGISTRO DE USUARIO 
* @return CHARACTER VARYING
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_VENTA_GENERA_NUMERO(
IN IN_CUSU_NOMBRE_USUARIO CHARACTER VARYING)
  RETURNS CHARACTER VARYING AS
$BODY$
DECLARE
	TMP_SECUENCIA CHARACTER VARYING;
	TMP_ANIO CHARACTER VARYING;
	TMP_ACRONIMO CHARACTER VARYING;	
BEGIN
	/*SELECT COUNT(CKASG_NUMERO_ASIGNACION)+1 INTO TMP_SECUENCIA 
	FROM SII.CGG_KDX_ASIGNACION CKASG
	INNER JOIN SII.CGG_KDX_TRANSFERENCIA CKTRN
	ON (CKASG.CKTRN_CODIGO = CKTRN.CKTRN_CODIGO) 
	WHERE EXTRACT(YEAR FROM CKASG_FECHA_INSERT) = EXTRACT(YEAR FROM CURRENT_TIMESTAMP)
	AND CKTRN.CKPVT_CODIGO = (SELECT CKPVT_CODIGO 
				FROM CGG_KDX_USUARIO_PV UPV1
				INNER JOIN CGG_USUARIO CUSU ON
				(UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
				WHERE CUSU_NOMBRE_USUARIO = IN_CUSU_NOMBRE_USUARIO
				AND UPV1.CKUPV_ESTADO = TRUE
				AND UPV1.CKPVT_ACTIVO = TRUE);*/

	SELECT  COUNT(CKVNT_CODIGO)+1  INTO TMP_SECUENCIA FROM CGG_KDX_VENTA CKV
	INNER JOIN CGG_KDX_ASIGNACION CKA ON  (CKV.CKASG_CODIGO = CKA.CKASG_CODIGO)
	INNER JOIN CGG_KDX_TRANSFERENCIA CKT ON (CKT.CKTRN_CODIGO = CKA.CKTRN_CODIGO) 
	WHERE EXTRACT(YEAR FROM CKVNT_FECHA_INSERT) = EXTRACT(YEAR FROM CURRENT_TIMESTAMP)
	AND CKT.CKPVT_CODIGO = (SELECT CKPVT_CODIGO 
					FROM CGG_KDX_USUARIO_PV UPV1
					INNER JOIN CGG_USUARIO CUSU ON
					(UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
					WHERE CUSU_NOMBRE_USUARIO = IN_CUSU_NOMBRE_USUARIO
					AND UPV1.CKUPV_ESTADO = TRUE
					AND UPV1.CKPVT_ACTIVO = TRUE);


	/*SELECT COUNT(CKVNT_CODIGO)+1 INTO TMP_SECUENCIA FROM CGG_KDX_VENTA
	WHERE CKVNT_ESTADO = TRUE;*/
	
	--SELECT CGCNF_VALOR_CADENA INTO TMP_ACRONIMO
	--FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = 'CONF11';
	
	SELECT EXTRACT(YEAR FROM CURRENT_TIMESTAMP) INTO TMP_ANIO;
	
	--RETURN  TMP_ACRONIMO||'-'||TMP_ANIO||'-'||LPAD(TMP_SECUENCIA,4,'0');
	RETURN  TMP_ANIO||'-'||LPAD(TMP_SECUENCIA,4,'0');
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE
  COST 100;
  
  /**
* FUNCION SII.F_CGG_KDX_VENTA_SELECT_BY_PUNTO_VENTA_ESTADO
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_VENTA.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param IN_CKVNT_ESTADO_VENTA ESTADO DEL REGISTRO DE VENTA UTILIZADO PARA OPERACIONES
0.-  REGISTRADA
1.-  CONTABILIZADA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_VENTA_SELECT_BY_PUNTO_VENTA_ESTADO(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_CKVNT_ESTADO_VENTA SII.CGG_KDX_VENTA.CKVNT_ESTADO_VENTA%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
	STMT TEXT;
BEGIN
	STMT := '
	WITH PVT AS(
		SELECT SII.F_CGG_KDX_USUARIO_PV_S_PV_FROM_USUARIO('''||IN_USER_NAME||''') C1
	)
	SELECT
		CKVNT_CODIGO, 
		VNT.CKASG_CODIGO, 
		CKVNT_NUMERO_VENTA, 
		CKESP.CKESP_NOMBRE,
		CKVNT_SERIE_INICIO, 
		CKVNT_SERIE_FIN, 
		ASG.CKASG_PRECIO_UNITARIO,
		CKVNT_CANTIDAD, 
		CKVNT_TOTAL,
		CKVNT_LOTE, 
		CKVNT_FECHA_INGRESO,
		CKVNT_ESTADO_VENTA,
		SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(ASG.CGG_CKUPV_CODIGO) CRPER_NOMBRES
	FROM SII.CGG_KDX_VENTA VNT
	INNER JOIN CGG_KDX_ASIGNACION ASG ON
	(VNT.CKASG_CODIGO = ASG.CKASG_CODIGO )
	INNER JOIN CGG_KDX_TRANSFERENCIA TRN ON
	(ASG.CKTRN_CODIGO = TRN.CKTRN_CODIGO)	
	INNER JOIN  CGG_KDX_ESPECIE CKESP ON (CKESP.CKESP_CODIGO = TRN.CKESP_CODIGO)
	WHERE CKVNT_ESTADO = TRUE
	AND TRN.CKPVT_CODIGO = (SELECT C1 FROM PVT)
	AND ( '||IN_CKVNT_ESTADO_VENTA||' = 10 OR CKVNT_ESTADO_VENTA = '||IN_CKVNT_ESTADO_VENTA||') AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
		COALESCE(CKVNT_LOTE, 0)||'' ''||
		COALESCE(CKVNT_FECHA_INGRESO, CURRENT_TIMESTAMP)||'' ''||
		COALESCE(CKVNT_NUMERO_VENTA, '''')||'' ''||
		COALESCE(CKVNT_SERIE_INICIO, 0)||'' ''||
		COALESCE(CKVNT_SERIE_FIN, 0)||'' ''||
		COALESCE(CKVNT_CANTIDAD, 0)||'' ''||
		COALESCE(CKVNT_TOTAL, '''')||'' ''||
		COALESCE(CKVNT_ESTADO_VENTA, 0)) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	
	OPEN TMP_REF FOR EXECUTE STMT;
	
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_VENTA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_KDX_VENTA.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param IN_CKVNT_ESTADO_VENTA ESTADO DEL REGISTRO DE VENTA UTILIZADO PARA OPERACIONES
0.-  REGISTRADA
1.-  CONTABILIZADA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_VENTA_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_USER_NAME VARCHAR,
IN IN_CKVNT_ESTADO_VENTA SII.CGG_KDX_VENTA.CKVNT_ESTADO_VENTA%TYPE
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	WITH PVT AS(
		SELECT SII.F_CGG_KDX_USUARIO_PV_S_PV_FROM_USUARIO(IN_USER_NAME) C1
	)
	SELECT COUNT(CKVNT_CODIGO) INTO TMP_ROWS
	FROM SII.CGG_KDX_VENTA VNT
	INNER JOIN CGG_KDX_ASIGNACION ASG ON
	(VNT.CKASG_CODIGO = ASG.CKASG_CODIGO )
	INNER JOIN CGG_KDX_TRANSFERENCIA TRN ON
	(ASG.CKTRN_CODIGO = TRN.CKTRN_CODIGO)	
	INNER JOIN  CGG_KDX_ESPECIE CKESP ON (CKESP.CKESP_CODIGO = TRN.CKESP_CODIGO)
	WHERE CKVNT_ESTADO = TRUE
	AND TRN.CKPVT_CODIGO = (SELECT C1 FROM PVT)
	AND ( IN_CKVNT_ESTADO_VENTA = 10 OR CKVNT_ESTADO_VENTA = IN_CKVNT_ESTADO_VENTA) 
	AND SII.F_STRING_IN(IN_FIND_TEXT,
		COALESCE(CKVNT_LOTE, 0)||' '||
		COALESCE(CKVNT_FECHA_INGRESO, CURRENT_TIMESTAMP)||' '||
		COALESCE(CKVNT_NUMERO_VENTA, '''')||' '||
		COALESCE(CKVNT_SERIE_INICIO, 0)||' '||
		COALESCE(CKVNT_SERIE_FIN, 0)||' '||
		COALESCE(CKVNT_CANTIDAD, 0)||' '||
		COALESCE(CKVNT_TOTAL, '')||' '||
		COALESCE(CKVNT_ESTADO_VENTA, 0)) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
