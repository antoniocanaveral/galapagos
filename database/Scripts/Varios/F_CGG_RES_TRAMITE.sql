/**
* FUNCION SII.F_CGG_RES_TRAMITE_SELECT_PLUS
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE CON INFORMACION COMPLEMENTARIA.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_SELECT_PLUS(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO, 
		CRPER_CODIGO, 
		CRPJR_CODIGO, 
		COALESCE(CRTRA.CGG_CRPER_CODIGO,CRTRA.CRPER_CODIGO) CGG_CRPER_CODIGO,
		(SELECT CRPER_NOMBRES ||' '||CRPER_APELLIDO_PATERNO FROM CGG_RES_PERSONA CRPER WHERE CRPER.CRPER_CODIGO = COALESCE(CRTRA.CGG_CRPER_CODIGO,CRTRA.CRPER_CODIGO)) CRTRA_BENEFICIARIO,
		CRPRO_CODIGO, 
		CRTST_CODIGO,
		SII.F_TRAMITE_TIPO(CRTRA.CRTST_CODIGO) CRTRA_TIPO_SOLICITUD, 
		CVVEH_CODIGO, 
		CRETT_CODIGO, 
		(SELECT CRETT_NOMBRE FROM CGG_RES_ESTADO_TRAMITE CRETT WHERE CRETT_CODIGO = CRTRA.CRETT_CODIGO) CRETT_NOMBRE,
		CISLA_CODIGO, 
		CVMTR_CODIGO, 
		CRTRA_ANIO, 
		CRTRA_NUMERO, 
		CRTRA_FECHA_RECEPCION ::DATE, 
		CRTRA_ACTIVIDAD_RESIDENCIA, 
		CRTRA_OBSERVACION, 
		CRTRA_DIAS_PERMANENCIA, 
		CRTRA_PENDIENTE, 
		CRTRA_OBSERVACION_PENDIENTE, 
		CRTRA_ATENCION_CLIENTE, 
		CRTRA_COMUNICADO_RADIAL, 
		CRTRA_MOTIVO, 
		CRTRA_FOLIO, 
		CRTRA_GRUPO, 
		CRTRA_ORDEN, 
		CRTRA_FECHA_INGRESO, 
		CRTRA_FECHA_SALIDA
	FROM SII.CGG_RES_TRAMITE CRTRA
	WHERE CRTRA_ESTADO = TRUE AND 
		(CRTRA_CODIGO = IN_CRTRA_CODIGO
		OR (CRTRA_ANIO||'-'||CRTRA_NUMERO) = IN_CRTRA_CODIGO
		OR CRTRA.CRPER_CODIGO =  (SELECT CRPER_CODIGO FROM CGG_RES_PERSONA WHERE CRPER_NUM_DOC_IDENTIFIC = IN_CRTRA_CODIGO))
	ORDER BY CRTRA_NUMERO DESC;

	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SEGUIMIENTO_S_CGG_RES_TRAMITE_PLUS 
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SEGUIMIENTO QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_RES_TRAMITE CON INFORMACION COMPLEMENTARIA .
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SEGUIMIENTO_S_CGG_RES_TRAMITE_PLUS(
IN IN_CRTRA_CODIGO SII.CGG_RES_SEGUIMIENTO.CRTRA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	
	SELECT
		CRSEG_CODIGO, 
		CGG_CRSEG_CODIGO, 
		CRTRA_CODIGO, 
		CRSEG.CRFAS_CODIGO, 
		CRFAS.CRFAS_NOMBRE,
		CRSEC.CRSEC_NOMBRE,
		CRSEG.CGG_CRFAS_CODIGO, 
		CRSEG.CUSU_CODIGO, 
		CUSU.CUSU_NOMBRE_USUARIO,
		CRPER.CRPER_NOMBRES ||' '||CRPER.CRPER_APELLIDO_PATERNO CRPER_NOMBRES,
		CRSEG_DESCRIPCION, 
		CRSEG_ESTADO_ATENCION, 
		CRSEG_OBSERVACION, 
		CRSEG_TIPO_RESPUESTA, 
		CRSEG_TIPO_ACTIVIDAD, 
		CRSEG_FECHA_RECEPCION::DATE, 
		CRSEG_FECHA_REVISION::DATE, 
		CRSEG_FECHA_DESPACHO::DATE, 
		(COALESCE(CRSEG_FECHA_DESPACHO::DATE,CURRENT_DATE) - CRSEG_FECHA_RECEPCION::DATE) CRSEG_TIEMPO_ATENCION, 	
		CRSEG_ESTADO_HIJO, 
		CRSEG_FECHA_REAPERTURA, 
		CRSEG_VECES_REVISION, 
		CRSEG_NUMERO
	FROM SII.CGG_RES_SEGUIMIENTO CRSEG
	INNER JOIN CGG_USUARIO CUSU ON (CUSU.CUSU_CODIGO = CRSEG.CUSU_CODIGO)
	INNER JOIN CGG_RES_PERSONA CRPER ON (CRPER.CRPER_CODIGO = CUSU.CRPER_CODIGO)
	INNER JOIN CGG_RES_FASE CRFAS ON (CRFAS.CRFAS_CODIGO = CRSEG.CRFAS_CODIGO)
	INNER JOIN CGG_RES_SECCION CRSEC ON (CRSEC.CRSEC_CODIGO = CRFAS.CRSEC_CODIGO)
	WHERE CRSEG_ESTADO = TRUE AND 
		CRTRA_CODIGO = IN_CRTRA_CODIGO
		AND CRSEG.CRSEG_ESTADO_ATENCION NOT IN (5,6)--IN(0,1,2,3)
	ORDER BY CRSEG_NUMERO ASC;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_UPDATE_AUSPICIANTE
* ACTUALIZA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE CORRESPONDIENTE AL AUSPICIANTE DEL TRAMITE.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGSITRO DE TRAMITE
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE AUSPICIANTE
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE AUSPICIANTE PERSONA JURIDICA
* @param IN_CRTRA_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_UPDATE_AUSPICIANTE(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE.CRTRA_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_TRAMITE.CRPER_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_TRAMITE.CRPJR_CODIGO%TYPE, 
IN IN_CRTRA_USUARIO_UPDATE SII.CGG_RES_TRAMITE.CRTRA_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
DECLARE
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET 
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CRPJR_CODIGO = IN_CRPJR_CODIGO,  
		CRTRA_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRTRA_USUARIO_UPDATE = IN_CRTRA_USUARIO_UPDATE
	WHERE CRTRA_CODIGO =  IN_CRTRA_CODIGO;	
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
