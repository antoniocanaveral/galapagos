/**
* FUNCION SII.F_CGG_KDX_USUARIO_PV_ALL_S_CGG_KDX_PUNTO_VENTA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_USUARIO_PV QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_KDX_PUNTO_VENTA INCLUIDOS LOS DATOS CORRESPONDIENTES AL USUARIO.
* @param IN_CKPVT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PUNTO DE VENTA 
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_USUARIO_PV_ALL_S_CGG_KDX_PUNTO_VENTA(
IN IN_CKPVT_CODIGO SII.CGG_KDX_USUARIO_PV.CKPVT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKUPV.CKUPV_CODIGO, 
		CKUPV.CKPVT_CODIGO, 
		CKUPV.CUSU_CODIGO,
		CKUPV.CKPVT_ACTIVO,
		CKUPV.CKUPV_SUPERVISOR,
		CUSU.CUSU_NOMBRE_USUARIO AS CUSU_NOMBRE_USUARIO,
		CRPER.CRPER_NOMBRES||' '||CRPER.CRPER_APELLIDO_PATERNO AS CRPER_NOMBRES	
	FROM SII.CGG_KDX_USUARIO_PV CKUPV
	INNER JOIN SII.CGG_USUARIO CUSU ON
	(CKUPV.CUSU_CODIGO = CUSU.CUSU_CODIGO)
	INNER JOIN SII.CGG_RES_PERSONA CRPER ON
	(CRPER.CRPER_CODIGO = CUSU.CRPER_CODIGO)
	WHERE CKUPV_ESTADO = TRUE AND
		CKUPV.CKPVT_CODIGO = IN_CKPVT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_KDX_USUARIO_PV_S_PV_FROM_USUARIO
* SELECCIONA EL CODIGO DEL PUNTO DE VENTA DE ACUERDO AL USUARIO.
* @param IN_CUSU_NOMBRE_USUARIO IDENTIFICATIVO UNICO DE REGISTRO NOMBRE DE USUARIO 
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_USUARIO_PV_S_PV_FROM_USUARIO(
IN IN_CUSU_NOMBRE_USUARIO CHARACTER VARYING
)RETURNS VARCHAR AS
$$
DECLARE
	TMP_RESP VARCHAR;
BEGIN
	SELECT CKPVT_CODIGO INTO TMP_RESP FROM CGG_KDX_USUARIO_PV CKUPV
	INNER JOIN CGG_USUARIO CUSU ON CUSU.CUSU_CODIGO = CKUPV.CUSU_CODIGO
	WHERE CKUPV_ESTADO = TRUE
	AND CKPVT_ACTIVO = TRUE
	AND CUSU_NOMBRE_USUARIO = IN_CUSU_NOMBRE_USUARIO;
	RETURN  TMP_RESP;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES
* SELECCIONA LOS NOMBRES DE USUARIO  DE ACUERDO AL USUARIO DE PUNTO DE VENTA. 
* @param IN_CKUPV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO USUARIO PUNTO DE VENTA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_USUARIO_PV_S_USUARIO_NOMBRES(
IN IN_CKUPV_CODIGO SII.CGG_KDX_USUARIO_PV.CKUPV_CODIGO%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
	TMP_RESP VARCHAR;
BEGIN
	SELECT  CRPER.CRPER_NOMBRES ||' '|| CRPER.CRPER_APELLIDO_PATERNO CRPER_NOMBRES INTO TMP_RESP
	FROM CGG_KDX_USUARIO_PV CKUPV
	INNER JOIN  CGG_USUARIO CUSU ON CUSU.CUSU_CODIGO = CKUPV.CUSU_CODIGO
	INNER JOIN  CGG_RES_PERSONA CRPER ON CUSU.CRPER_CODIGO = CRPER.CRPER_CODIGO
	WHERE CKUPV.CKUPV_CODIGO = IN_CKUPV_CODIGO;
	RETURN  TMP_RESP;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_KDX_USUARIO_PV_IS_ASIGNED
* VERIFICA SI UN USUARIO SE HALLA ASIGNADO A UN PUNTO DE VENTA. 
* @param IN_CUSU_NOMBRE_USUARIO IDENTIFICATIVO UNICO DE REGISTRO NOMBRE DE USUARIO 
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_USUARIO_PV_IS_ASIGNED(
IN IN_CUSU_NOMBRE_USUARIO CHARACTER VARYING
)RETURNS VARCHAR AS
$$
DECLARE
	TMP_RESP VARCHAR;
BEGIN
	SELECT (COUNT(CKPVT_CODIGO) < 1)::VARCHAR INTO TMP_RESP
	FROM SII.CGG_KDX_USUARIO_PV UPV1
	INNER JOIN CGG_USUARIO CUSU ON (UPV1.CUSU_CODIGO  = CUSU.CUSU_CODIGO )
	WHERE CUSU.CUSU_NOMBRE_USUARIO = IN_CUSU_NOMBRE_USUARIO
	AND UPV1.CKUPV_ESTADO = TRUE
	AND UPV1.CKPVT_ACTIVO = TRUE;
	RETURN  TMP_RESP;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


