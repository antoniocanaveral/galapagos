/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA 
* @param IN_CGG_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO DE ENTIDAD FINANCIERA
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA TITULAR DE LA CUENTA
* @param IN_CRCPJ_NUMERO_CUENTA NUMERO DE LA CUENTA BANCARIA
* @param IN_CRCPJ_DESCRIPCION DESCRIPCION DE LA CUENTA BANCARIA
* @param IN_CRCPJ_TIPO_CUENTA TIPO DE CUENTA BANCARIA
* @param IN_CRCPJ_ESTADO ESTADO DEL REGISTRO
* @param IN_CRCPJ_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRCPJ_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_INSERT(
IN IN_CRCPJ_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_CODIGO%TYPE, 
IN IN_CGG_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CGG_CRPJR_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPJR_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPER_CODIGO%TYPE, 
IN IN_CRCPJ_NUMERO_CUENTA SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_NUMERO_CUENTA%TYPE, 
IN IN_CRCPJ_DESCRIPCION SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_DESCRIPCION%TYPE, 
IN IN_CRCPJ_TIPO_CUENTA SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_TIPO_CUENTA%TYPE, 
IN IN_CRCPJ_ESTADO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_ESTADO%TYPE, 
IN IN_CRCPJ_USUARIO_INSERT SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_USUARIO_INSERT%TYPE, 
IN IN_CRCPJ_USUARIO_UPDATE SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CRCPJ_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_CUENTA_PERSONAJURIDICA','CRCPJ_CODIGO','CRCPJ') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRCPJ_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_CUENTA_PERSONAJURIDICA(
		CRCPJ_CODIGO, 
		CGG_CRPJR_CODIGO, 
		CRPJR_CODIGO, 
		CRPER_CODIGO, 
		CRCPJ_NUMERO_CUENTA, 
		CRCPJ_DESCRIPCION, 
		CRCPJ_TIPO_CUENTA, 
		CRCPJ_ESTADO, 
		CRCPJ_FECHA_INSERT, 
		CRCPJ_USUARIO_INSERT, 
		CRCPJ_FECHA_UPDATE, 
		CRCPJ_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CGG_CRPJR_CODIGO, 
		IN_CRPJR_CODIGO, 
		IN_CRPER_CODIGO, 
		IN_CRCPJ_NUMERO_CUENTA, 
		IN_CRCPJ_DESCRIPCION, 
		IN_CRCPJ_TIPO_CUENTA, 
		IN_CRCPJ_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRCPJ_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRCPJ_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRCPJ_CODIGO, 
		CGG_CRPJR_CODIGO, 
		CRPJR_CODIGO, 
		CRPER_CODIGO, 
		CRCPJ_NUMERO_CUENTA, 
		CRCPJ_DESCRIPCION, 
		CRCPJ_TIPO_CUENTA, 
		CRCPJ_ESTADO, 
		CRCPJ_FECHA_INSERT, 
		CRCPJ_USUARIO_INSERT, 
		CRCPJ_FECHA_UPDATE, 
		CRCPJ_USUARIO_UPDATE
	FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE CRCPJ_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE PERSONA JURIDICA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPJR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CPJ.CRCPJ_CODIGO, 
		CPJ.CGG_CRPJR_CODIGO, 
		PJR.CRPJR_RAZON_SOCIAL,
		CPJ.CRPJR_CODIGO, 
		CPJ.CRPER_CODIGO, 		
		(COALESCE(PRS.CRPER_NOMBRES,'''')||'' ''||COALESCE(PRS.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PRS.CRPER_APELLIDO_MATERNO,'''')) TITULAR,
		CPJ.CRCPJ_NUMERO_CUENTA, 
		CPJ.CRCPJ_DESCRIPCION, 
		CPJ.CRCPJ_TIPO_CUENTA, 
		CPJ.CRCPJ_ESTADO, 
		CPJ.CRCPJ_FECHA_INSERT, 
		CPJ.CRCPJ_USUARIO_INSERT, 
		CPJ.CRCPJ_FECHA_UPDATE, 
		CPJ.CRCPJ_USUARIO_UPDATE
	FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA CPJ
	INNER JOIN SII.CGG_RES_PERSONA_JURIDICA PJR ON PJR.CRPJR_CODIGO = CPJ.CGG_CRPJR_CODIGO
	LEFT JOIN SII.CGG_RES_PERSONA PRS ON PRS.CRPER_CODIGO = CPJ.CRPER_CODIGO
	WHERE CRCPJ_ESTADO AND 
		(LENGTH('||QUOTE_LITERAL(IN_CRPJR_CODIGO)||') = 0 OR CPJ.CRPJR_CODIGO = '||QUOTE_LITERAL(IN_CRPJR_CODIGO)||') AND
		(LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',COALESCE(CRCPJ_NUMERO_CUENTA, '''')||'' ''||COALESCE(CRCPJ_DESCRIPCION, '''')||'' ''||COALESCE(CRCPJ_TIPO_CUENTA, 0)||'' ''||COALESCE(CRCPJ_ESTADO, FALSE)||'' ''||COALESCE(CRCPJ_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRCPJ_USUARIO_INSERT, '''')||'' ''||COALESCE(CRCPJ_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRCPJ_USUARIO_UPDATE, '''')) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE CRCPJ_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE PERSONA JURIDICA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPJR_CODIGO%TYPE
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE CRCPJ_ESTADO AND 
		(LENGTH(IN_CRPJR_CODIGO) = 0 OR CRPJR_CODIGO = IN_CRPJR_CODIGO) AND
		(LENGTH(IN_FIND_TEXT) = 0 OR SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRCPJ_NUMERO_CUENTA, '''')||' '||COALESCE(CRCPJ_DESCRIPCION, '''')||' '||COALESCE(CRCPJ_TIPO_CUENTA, 0)||' '||COALESCE(CRCPJ_ESTADO, FALSE)||' '||COALESCE(CRCPJ_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRCPJ_USUARIO_INSERT, '''')||' '||COALESCE(CRCPJ_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRCPJ_USUARIO_UPDATE, '''')) = 1);
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_CUENTA_PERSONAJURIDICA
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA 
* @param IN_CGG_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO DE ENTIDAD FINANCIERA
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA TITULAR DE LA CUENTA
* @param IN_CRCPJ_NUMERO_CUENTA NUMERO DE LA CUENTA BANCARIA
* @param IN_CRCPJ_DESCRIPCION DESCRIPCION DE LA CUENTA BANCARIA
* @param IN_CRCPJ_TIPO_CUENTA TIPO DE CUENTA BANCARIA
* @param IN_CRCPJ_ESTADO ESTADO DEL REGISTRO
* @param IN_CRCPJ_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_UPDATE(
IN IN_CRCPJ_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_CODIGO%TYPE, 
IN IN_CGG_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CGG_CRPJR_CODIGO%TYPE, 
IN IN_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPJR_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPER_CODIGO%TYPE, 
IN IN_CRCPJ_NUMERO_CUENTA SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_NUMERO_CUENTA%TYPE, 
IN IN_CRCPJ_DESCRIPCION SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_DESCRIPCION%TYPE, 
IN IN_CRCPJ_TIPO_CUENTA SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_TIPO_CUENTA%TYPE, 
IN IN_CRCPJ_ESTADO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_ESTADO%TYPE, 
IN IN_CRCPJ_USUARIO_UPDATE SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_CUENTA_PERSONAJURIDICA SET
		CGG_CRPJR_CODIGO = IN_CGG_CRPJR_CODIGO, 
		CRPJR_CODIGO = IN_CRPJR_CODIGO, 
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CRCPJ_NUMERO_CUENTA = IN_CRCPJ_NUMERO_CUENTA, 
		CRCPJ_DESCRIPCION = IN_CRCPJ_DESCRIPCION, 
		CRCPJ_TIPO_CUENTA = IN_CRCPJ_TIPO_CUENTA, 
		CRCPJ_ESTADO = IN_CRCPJ_ESTADO, 
		CRCPJ_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRCPJ_USUARIO_UPDATE = IN_CRCPJ_USUARIO_UPDATE
	WHERE
		CRCPJ_CODIGO = IN_CRCPJ_CODIGO AND CRCPJ_ESTADO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA 
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_SELECT(
IN IN_CRCPJ_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRCPJ_CODIGO, 
		CGG_CRPJR_CODIGO, 
		CRPJR_CODIGO, 
		CRPER_CODIGO, 
		CRCPJ_NUMERO_CUENTA, 
		CRCPJ_DESCRIPCION, 
		CRCPJ_TIPO_CUENTA, 
		CRCPJ_ESTADO, 
		CRCPJ_FECHA_INSERT, 
		CRCPJ_USUARIO_INSERT, 
		CRCPJ_FECHA_UPDATE, 
		CRCPJ_USUARIO_UPDATE
	FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE CRCPJ_ESTADO = TRUE AND 
		CRCPJ_CODIGO = IN_CRCPJ_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA 
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_DELETE(
IN IN_CRCPJ_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE
		CRCPJ_CODIGO = IN_CRCPJ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA 
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_DELETE_SOFT(
IN IN_CRCPJ_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRCPJ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_CUENTA_PERSONAJURIDICA SET
		CRCPJ_ESTADO = FALSE
	WHERE
		CRCPJ_CODIGO = IN_CRCPJ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_S_CGG_RES_PERSONA_JURIDICA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_S_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPJR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRCPJ_CODIGO, 
		CGG_CRPJR_CODIGO, 
		CRPJR_CODIGO, 
		CRPER_CODIGO, 
		CRCPJ_NUMERO_CUENTA, 
		CRCPJ_DESCRIPCION, 
		CRCPJ_TIPO_CUENTA, 
		CRCPJ_ESTADO, 
		CRCPJ_FECHA_INSERT, 
		CRCPJ_USUARIO_INSERT, 
		CRCPJ_FECHA_UPDATE, 
		CRCPJ_USUARIO_UPDATE
	FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE CRCPJ_ESTADO = TRUE AND 
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_D_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_D_CGG_RES_PERSONA_JURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA_JURIDICA.
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_DS_CGG_RES_PERSONA_JURIDICA(
IN IN_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_CUENTA_PERSONAJURIDICA SET
		crcpj_estado = false
	WHERE
		CRPJR_CODIGO = IN_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_S_CGG_RES_ENTIDAD_FINANCIERA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_ENTIDAD_FINANCIERA.
* @param IN_CGG_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO DE ENTIDAD FINANCIERA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_S_CGG_RES_ENTIDAD_FINANCIERA(
IN IN_CGG_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CGG_CRPJR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRCPJ_CODIGO, 
		CGG_CRPJR_CODIGO, 
		CRPJR_CODIGO, 
		CRPER_CODIGO, 
		CRCPJ_NUMERO_CUENTA, 
		CRCPJ_DESCRIPCION, 
		CRCPJ_TIPO_CUENTA, 
		CRCPJ_ESTADO, 
		CRCPJ_FECHA_INSERT, 
		CRCPJ_USUARIO_INSERT, 
		CRCPJ_FECHA_UPDATE, 
		CRCPJ_USUARIO_UPDATE
	FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE CRCPJ_ESTADO = TRUE AND 
		CGG_CRPJR_CODIGO = IN_CGG_CRPJR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_D_CGG_RES_ENTIDAD_FINANCIERA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_ENTIDAD_FINANCIERA.
* @param IN_CGG_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO DE ENTIDAD FINANCIERA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_D_CGG_RES_ENTIDAD_FINANCIERA(
IN IN_CGG_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CGG_CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE
		CGG_CRPJR_CODIGO = IN_CGG_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_D_CGG_RES_ENTIDAD_FINANCIERA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_ENTIDAD_FINANCIERA.
* @param IN_CGG_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGSITRO DE ENTIDAD FINANCIERA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_DS_CGG_RES_ENTIDAD_FINANCIERA(
IN IN_CGG_CRPJR_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CGG_CRPJR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_CUENTA_PERSONAJURIDICA SET
		crcpj_estado = false
	WHERE
		CGG_CRPJR_CODIGO = IN_CGG_CRPJR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_S_CGG_RES_PERSONA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA TITULAR DE LA CUENTA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_S_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRCPJ_CODIGO, 
		CGG_CRPJR_CODIGO, 
		CRPJR_CODIGO, 
		CRPER_CODIGO, 
		CRCPJ_NUMERO_CUENTA, 
		CRCPJ_DESCRIPCION, 
		CRCPJ_TIPO_CUENTA, 
		CRCPJ_ESTADO, 
		CRCPJ_FECHA_INSERT, 
		CRCPJ_USUARIO_INSERT, 
		CRCPJ_FECHA_UPDATE, 
		CRCPJ_USUARIO_UPDATE
	FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE CRCPJ_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA TITULAR DE LA CUENTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_D_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_CUENTA_PERSONAJURIDICA
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA TITULAR DE LA CUENTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_CUENTA_PERSONAJURIDICA_DS_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_CUENTA_PERSONAJURIDICA.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_CUENTA_PERSONAJURIDICA SET
		crcpj_estado = false
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

