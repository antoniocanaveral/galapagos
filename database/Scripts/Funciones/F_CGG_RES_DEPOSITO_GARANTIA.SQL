/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA NATURAL QUE REALIZO EL DEPOSITO
* @param IN_CGG_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA QUE REALIZO EL DEPOSITO 
* @param IN_CRDPT_NUMERO NUMERO ALFANUMERICO SECUENCIAL GENERADO CON FINES DE INDICAR A QUE REFERENCIA HACE UN TRAMITE AL MOMENTO DE SU CREACION.
* @param IN_CRDPT_NUMERO_DOCUMENTO NUMERO DE DOCUMENTO DE DEPOSITO
* @param IN_CRDPT_CADUCA SI LA GARANTIA CADUCA
* @param IN_CRDPT_TIPO TIPO DE GARANTIA
0 - DEPOSITO
1 - CHEQUE
2 - POLIZA
3 - OTROS
* @param IN_CRDPT_VALOR_DEPOSITO VALOR DEPOSITADO POR GARANTIA
* @param IN_CRDPT_FECHA_DEPOSITO FECHA DE REALIZACION DE DEPOSITO
* @param IN_CRDPT_FECHA_ENTREGA FECHA DE ENTREGA DE COMPROBANTE DE DEPOSITO
* @param IN_CRDPT_FECHA_CADUCIDAD FECHA DE CADUCIDAD DEL DEPOSITO DE GARANTIA
* @param IN_CRDPT_FECHA_CONTABILIZACION FECHA DE INGRESO A CUSTODIA DEL DEPARTAMENTO FINANCIERO
* @param IN_CRDPT_FECHA_SOLIC_DEVOLUCION FECHA DE SOLICITUD DE DEVOLUCION DE GARANTIA
* @param IN_CRDPT_FECHA_DEVOLUCION_DEFINITI FECHA DE DEVOLUCION DE LA GARANTIA AL TITULAR
* @param IN_CRDPT_DEVUELTO ESTADO QUE DETERMINA SI UNA GARANTIA ESTA AUN ACTIVA 
SI
NO
* @param IN_CRDPT_ESTADO_DEPOSITO ESTADO DE CONTROL DEL DEPOSITO 
0 - REGISTRADO
1 - CONTABILIZADO
2 - AUTORIZADO LA DEVOLUCION
3 - DEVUELTO
4 - TEMPORAL CREADA EN TRAMITE

* @param IN_CRDPT_OBSERVACION OBSERVACION DEL DEPOSITO DE GARANTIA
* @param IN_CRDPT_ESTADO ESTADO DEL DEPOSITO
* @param IN_CRDPT_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRDPT_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_INSERT(
IN IN_CRDPT_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_CODIGO%TYPE,
IN IN_CRCPJ_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRCPJ_CODIGO%TYPE,
IN IN_CRPJR_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRPJR_CODIGO%TYPE,
IN IN_CRPER_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRPER_CODIGO%TYPE,
IN IN_CGG_CRPJR_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CGG_CRPJR_CODIGO%TYPE,
IN IN_CRDPT_NUMERO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_NUMERO%TYPE,
IN IN_CRDPT_NUMERO_DOCUMENTO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_NUMERO_DOCUMENTO%TYPE,
IN IN_CRDPT_CADUCA SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_CADUCA%TYPE,
IN IN_CRDPT_TIPO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_TIPO%TYPE,
IN IN_CRDPT_VALOR_DEPOSITO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_VALOR_DEPOSITO%TYPE,
IN IN_CRDPT_FECHA_DEPOSITO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_DEPOSITO%TYPE,
IN IN_CRDPT_FECHA_ENTREGA SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_ENTREGA%TYPE,
IN IN_CRDPT_FECHA_CADUCIDAD SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_CADUCIDAD%TYPE,
IN IN_CRDPT_FECHA_CONTABILIZACION SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_CONTABILIZACION%TYPE,
IN IN_CRDPT_FECHA_SOLIC_DEVOLUCION SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_SOLIC_DEVOLUCION%TYPE,
IN IN_CRDPT_FECHA_DEVOLUCION_DEFINITI SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_DEVOLUCION_DEFINITI%TYPE,
IN IN_CRDPT_DEVUELTO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_DEVUELTO%TYPE,
IN IN_CRDPT_ESTADO_DEPOSITO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_ESTADO_DEPOSITO%TYPE,
IN IN_CRDPT_OBSERVACION SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_OBSERVACION%TYPE,
IN IN_CRDPT_ESTADO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_ESTADO%TYPE,
IN IN_CRDPT_USUARIO_INSERT SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
NUMERO_DOCUMENTO VARCHAR;
BEGIN
	
	NUMERO_DOCUMENTO :='';	
	
	IF(IN_CRDPT_FECHA_CADUCIDAD < IN_CRDPT_FECHA_DEPOSITO OR IN_CRDPT_FECHA_CONTABILIZACION < IN_CRDPT_FECHA_DEPOSITO OR 
		IN_CRDPT_FECHA_DEVOLUCION_DEFINITI < IN_CRDPT_FECHA_DEPOSITO OR IN_CRDPT_FECHA_ENTREGA < IN_CRDPT_FECHA_DEPOSITO OR
		IN_CRDPT_FECHA_SOLIC_DEVOLUCION < IN_CRDPT_FECHA_DEPOSITO) THEN
		RAISE EXCEPTION 'La fecha de dep&oacute;sito no puede ser mayor a ninguna otra fecha.';
	END IF;
	IF(IN_CRDPT_FECHA_DEVOLUCION_DEFINITI < IN_CRDPT_FECHA_SOLIC_DEVOLUCION ) THEN
		RAISE EXCEPTION 'La fecha de Devoluci&oacute;n efectiva no puede ser menor a la fecha de Solicitud de devoluci&oacuten.';
	END IF;
	
	IF (UPPER(IN_CRDPT_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_DEPOSITO_GARANTIA','CRDPT_CODIGO','CRDPT') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRDPT_CODIGO;
	END IF;
			
	IF(IN_CRDPT_NUMERO IS NULL OR LENGTH(TRIM(IN_CRDPT_NUMERO))=0 OR TRIM(IN_CRDPT_NUMERO)='0')THEN
		SELECT SII.F_NUMERO('CGG_RES_DEPOSITO_GARANTIA','CRDPT_NUMERO','') INTO NUMERO_DOCUMENTO;		
	ELSE
		NUMERO_DOCUMENTO := IN_CRDPT_NUMERO;		
	END IF;
	
	INSERT INTO SII.CGG_RES_DEPOSITO_GARANTIA(
		CRDPT_CODIGO, 
		CRCPJ_CODIGO,
		CRPJR_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPJR_CODIGO,
		CRDPT_NUMERO, 
		CRDPT_NUMERO_DOCUMENTO, 
		CRDPT_CADUCA, 
		CRDPT_TIPO, 
		CRDPT_VALOR_DEPOSITO, 
		CRDPT_FECHA_DEPOSITO, 
		CRDPT_FECHA_ENTREGA, 
		CRDPT_FECHA_CADUCIDAD, 
		CRDPT_FECHA_CONTABILIZACION, 
		CRDPT_FECHA_SOLIC_DEVOLUCION, 
		CRDPT_FECHA_DEVOLUCION_DEFINITI, 
		CRDPT_DEVUELTO, 
		CRDPT_ESTADO_DEPOSITO, 
		CRDPT_OBSERVACION, 
		CRDPT_ESTADO, 
		CRDPT_FECHA_INSERT, 
		CRDPT_USUARIO_INSERT, 
		CRDPT_FECHA_UPDATE, 
		CRDPT_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRCPJ_CODIGO,
		IN_CRPJR_CODIGO,
		IN_CRPER_CODIGO, 
		IN_CGG_CRPJR_CODIGO, 
		NUMERO_DOCUMENTO, 
		IN_CRDPT_NUMERO_DOCUMENTO, 
		IN_CRDPT_CADUCA, 
		IN_CRDPT_TIPO, 
		IN_CRDPT_VALOR_DEPOSITO, 
		IN_CRDPT_FECHA_DEPOSITO, 
		IN_CRDPT_FECHA_ENTREGA, 
		IN_CRDPT_FECHA_CADUCIDAD, 
		IN_CRDPT_FECHA_CONTABILIZACION, 
		IN_CRDPT_FECHA_SOLIC_DEVOLUCION, 
		IN_CRDPT_FECHA_DEVOLUCION_DEFINITI, 
		IN_CRDPT_DEVUELTO, 
		IN_CRDPT_ESTADO_DEPOSITO, 
		IN_CRDPT_OBSERVACION, 
		IN_CRDPT_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRDPT_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRDPT_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRDPT_CODIGO, 
		CRCPJ_CODIGO, 
		CRPJR_CODIGO,
		CRPER_CODIGO, 
		CGG_CRPJR_CODIGO,
		CRDPT_NUMERO, 
		CRDPT_NUMERO_DOCUMENTO, 
		CRDPT_CADUCA, 
		CRDPT_TIPO, 
		CRDPT_VALOR_DEPOSITO, 
		CRDPT_FECHA_DEPOSITO, 
		CRDPT_FECHA_ENTREGA, 
		CRDPT_FECHA_CADUCIDAD, 
		CRDPT_FECHA_CONTABILIZACION, 
		CRDPT_FECHA_SOLIC_DEVOLUCION, 
		CRDPT_FECHA_DEVOLUCION_DEFINITI, 
		CRDPT_DEVUELTO, 
		CRDPT_ESTADO_DEPOSITO, 
		CRDPT_OBSERVACION, 
		CRDPT_ESTADO, 
		CRDPT_FECHA_INSERT, 
		CRDPT_USUARIO_INSERT, 
		CRDPT_FECHA_UPDATE, 
		CRDPT_USUARIO_UPDATE
	FROM SII.CGG_RES_DEPOSITO_GARANTIA
	WHERE CRDPT_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_DISPONIBLES BOOLEAN
)RETURNS REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
	TMP_STMT TEXT;
BEGIN
	TMP_STMT :='';
	
	TMP_STMT :='SELECT 
CF.CRDPT_CODIGO, 
CF.CRCPJ_CODIGO,
CF.CRPJR_CODIGO,
CF.CRPER_CODIGO, 
CF.CGG_CRPJR_CODIGO,
CF.CRDPT_NUMERO, 
CF.CRPJR_RAZON_SOCIAL,
CF.CRPER_NOMBRES,
CF.EMPRESA,
CF.CRCPJ_NUMERO_CUENTA, 
CF.CRTRA_CODIGO, 
CF.CRTRA_NUMERO,
ARRAY_TO_STRING(ARRAY(SELECT CRTRA_ANIO || ''-'' || CRTRA_NUMERO FROM SII.CGG_RES_TRAMITE TRM
					  INNER JOIN SII.CGG_RES_TRAMITE_GARANTIA TRG ON TRG.CRTRA_CODIGO = TRM.CRTRA_CODIGO AND TRG.CRDPT_CODIGO = CF.CRDPT_CODIGO AND TRG.CRTGR_ESTADO),'', '') TRAMITES, 
CF.CRDPT_NUMERO_DOCUMENTO,
CF.CRDPT_CADUCA, 
CF.CRDPT_TIPO, 
CF.CRDPT_VALOR_DEPOSITO, 
CF.CRDPT_FECHA_DEPOSITO, 
CF.CRDPT_FECHA_ENTREGA, 
CF.CRDPT_FECHA_CADUCIDAD, 
CF.CRDPT_FECHA_CONTABILIZACION, 
CF.CRDPT_FECHA_SOLIC_DEVOLUCION, 
CF.CRDPT_FECHA_DEVOLUCION_DEFINITI, 
CF.CRDPT_DEVUELTO, 
CF.CRDPT_ESTADO_DEPOSITO, 
CF.CRDPT_OBSERVACION,
(CF.CRDPT_VALOR_DEPOSITO - COALESCE((SELECT SUM(GRT1.CRGRT_VALOR) 
									  FROM SII.CGG_RES_GARANTIA GRT1 
									  INNER JOIN SII.CGG_RES_TRAMITE_GARANTIA GRS1 ON GRS1.CRGRT_CODIGO = GRT1.CRGRT_CODIGO AND 
									  GRS1.CRDPT_CODIGO = CF.CRDPT_CODIGO AND
									  GRS1.CRTGR_ESTADO_ASIGNACION = 0 AND
									  GRS1.CRTGR_ESTADO
									  WHERE GRT1.CRGRT_ESTADO), 0)) CUPO_DISPONIBLE
FROM (
	SELECT DISTINCT
	CRDPT_CODIGO, 
	CRCPJ_CODIGO,
	CRPJR_CODIGO,
	CRPER_CODIGO, 
	CGG_CRPJR_CODIGO,
	CRDPT_NUMERO, 
	CRPJR_RAZON_SOCIAL,
	CRPER_NOMBRES,
	EMPRESA,
	CRCPJ_NUMERO_CUENTA, 
	CRTRA_CODIGO, 
	CRTRA_NUMERO,	
	CRDPT_NUMERO_DOCUMENTO,
	CRDPT_CADUCA, 
	CRDPT_TIPO, 
	CRDPT_VALOR_DEPOSITO, 
	CRDPT_FECHA_DEPOSITO, 
	CRDPT_FECHA_ENTREGA, 
	CRDPT_FECHA_CADUCIDAD, 
	CRDPT_FECHA_CONTABILIZACION, 
	CRDPT_FECHA_SOLIC_DEVOLUCION, 
	CRDPT_FECHA_DEVOLUCION_DEFINITI, 
	CRDPT_DEVUELTO, 
	CRDPT_ESTADO_DEPOSITO, 
	CRDPT_OBSERVACION	
	FROM (
		  SELECT
		  DG.CRDPT_CODIGO, 
		  DG.CRCPJ_CODIGO,
		  DG.CRPJR_CODIGO,
		  DG.CRPER_CODIGO, 
		  DG.CGG_CRPJR_CODIGO,
		  DG.CRDPT_NUMERO, 
		  COALESCE(PJR.CRPJR_RAZON_SOCIAL, PJR1.CRPJR_RAZON_SOCIAL) CRPJR_RAZON_SOCIAL,
		  (COALESCE(PER.CRPER_NOMBRES, '''') ||'' ''|| COALESCE(PER.CRPER_APELLIDO_PATERNO, '''') ||'' ''|| COALESCE(PER.CRPER_APELLIDO_MATERNO, '''') ) CRPER_NOMBRES,
		  EMA.CRPJR_RAZON_SOCIAL EMPRESA,
		  CPJ.CRCPJ_NUMERO_CUENTA, 
		  TRA.CRTRA_CODIGO, 
		  TRA.CRTRA_NUMERO, 
		  DG.CRDPT_NUMERO_DOCUMENTO,
		  DG.CRDPT_CADUCA, 
		  DG.CRDPT_TIPO, 
		  DG.CRDPT_VALOR_DEPOSITO, 
		  DG.CRDPT_FECHA_DEPOSITO, 
		  DG.CRDPT_FECHA_ENTREGA, 
		  CASE WHEN DG.CRDPT_CADUCA THEN DG.CRDPT_FECHA_CADUCIDAD ELSE NULL END CRDPT_FECHA_CADUCIDAD, 
		  DG.CRDPT_FECHA_CONTABILIZACION, 
		  DG.CRDPT_FECHA_SOLIC_DEVOLUCION, 
		  CASE WHEN DG.CRDPT_ESTADO_DEPOSITO = 3 THEN DG.CRDPT_FECHA_DEVOLUCION_DEFINITI ELSE NULL END CRDPT_FECHA_DEVOLUCION_DEFINITI, 
		  DG.CRDPT_DEVUELTO, 
		  DG.CRDPT_ESTADO_DEPOSITO, 
		  DG.CRDPT_OBSERVACION 
		  FROM SII.CGG_RES_DEPOSITO_GARANTIA DG
		  LEFT JOIN SII.CGG_RES_TRAMITE_GARANTIA TGR ON TGR.CRDPT_CODIGO = DG.CRDPT_CODIGO AND TGR.CRTGR_ESTADO
		  LEFT JOIN SII.CGG_RES_TRAMITE TRA ON TRA.CRTRA_CODIGO = TGR.CRTRA_CODIGO
		  LEFT JOIN SII.CGG_RES_CUENTA_PERSONAJURIDICA CPJ ON CPJ.CRCPJ_CODIGO = DG.CRCPJ_CODIGO
		  LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJR ON PJR.CRPJR_CODIGO = CPJ.CGG_CRPJR_CODIGO
		  LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJR1 ON PJR1.CRPJR_CODIGO = DG.CRPJR_CODIGO
		  LEFT JOIN SII.CGG_RES_PERSONA PER ON PER.CRPER_CODIGO = DG.CRPER_CODIGO
		  LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA EMA ON EMA.CRPJR_CODIGO = DG.CGG_CRPJR_CODIGO
		  WHERE CRDPT_ESTADO AND (NOT '||IN_DISPONIBLES||' OR (DG.CRDPT_ESTADO_DEPOSITO IN (0, 1) AND NOT CRDPT_DEVUELTO AND (DG.CRDPT_CADUCA AND CURRENT_DATE < DG.CRDPT_FECHA_CADUCIDAD::DATE OR NOT DG.CRDPT_CADUCA) )) 
		)AS GRN 
WHERE (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('''||IN_FIND_TEXT||''',
        COALESCE(GRN.CRDPT_NUMERO_DOCUMENTO, '''')||'' ''||
		COALESCE(GRN.CRPJR_RAZON_SOCIAL,'''')||'' ''||		
		COALESCE(GRN.EMPRESA,'''')||'' ''||
		COALESCE(GRN.CRPER_NOMBRES,'''')||'' ''||
		COALESCE(GRN.CRTRA_NUMERO::VARCHAR,'''')||'' ''||						
		COALESCE(GRN.CRDPT_OBSERVACION, '''')) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX||' ) AS CF';	  	  	
		
	/*TMP_STMT := 'SELECT * 
	FROM (SELECT
			DG.CRDPT_CODIGO, 
			DG.CRCPJ_CODIGO,
			DG.CRPJR_CODIGO,
			DG.CRPER_CODIGO, 
			DG.CGG_CRPJR_CODIGO,
			DG.CRDPT_NUMERO,  
			COALESCE(PJR.CRPJR_RAZON_SOCIAL, PJR1.CRPJR_RAZON_SOCIAL) CRPJR_RAZON_SOCIAL,
			(COALESCE(PER.CRPER_NOMBRES,'''')||'' ''||COALESCE(PER.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PER.CRPER_APELLIDO_MATERNO,'''') ) CRPER_NOMBRES,
			EMA.CRPJR_RAZON_SOCIAL EMPRESA,
			CPJ.CRCPJ_NUMERO_CUENTA,
			(	SELECT TRM.CRTRA_CODIGO FROM SII.CGG_RES_TRAMITE TRM
				INNER JOIN SII.CGG_RES_TRAMITE_GARANTIA TRG ON TRG.CRTRA_CODIGO = TRM.CRTRA_CODIGO AND TRG.CRDPT_CODIGO = DG.CRDPT_CODIGO  
				ORDER BY CRTRA_FECHA_RECEPCION DESC LIMIT 1) CRTRA_CODIGO,
			ARRAY_TO_STRING(ARRAY(SELECT CRTRA_ANIO||''-''||CRTRA_NUMERO FROM SII.CGG_RES_TRAMITE TRM
				INNER JOIN SII.CGG_RES_TRAMITE_GARANTIA TRG ON TRG.CRTRA_CODIGO = TRM.CRTRA_CODIGO AND TRG.CRDPT_CODIGO = DG.CRDPT_CODIGO AND TRG.CRTGR_ESTADO),'', '') TRAMITES,
			DG.CRDPT_NUMERO_DOCUMENTO,
			DG.CRDPT_CADUCA, 
			DG.CRDPT_TIPO, 
			DG.CRDPT_VALOR_DEPOSITO, 
			DG.CRDPT_FECHA_DEPOSITO, 
			DG.CRDPT_FECHA_ENTREGA, 
			CASE WHEN DG.CRDPT_CADUCA THEN DG.CRDPT_FECHA_CADUCIDAD ELSE NULL END CRDPT_FECHA_CADUCIDAD, 
			DG.CRDPT_FECHA_CONTABILIZACION, 
			DG.CRDPT_FECHA_SOLIC_DEVOLUCION, 
			CASE WHEN DG.CRDPT_ESTADO_DEPOSITO = 3 THEN DG.CRDPT_FECHA_DEVOLUCION_DEFINITI ELSE NULL END CRDPT_FECHA_DEVOLUCION_DEFINITI, 
			DG.CRDPT_DEVUELTO, 
			DG.CRDPT_ESTADO_DEPOSITO, 
			DG.CRDPT_OBSERVACION,
			(DG.CRDPT_VALOR_DEPOSITO - COALESCE((SELECT SUM(GRT.CRGRT_VALOR) 
			FROM SII.CGG_RES_GARANTIA GRT 
			INNER JOIN SII.CGG_RES_TRAMITE_GARANTIA GRS ON GRS.CRGRT_CODIGO = GRT.CRGRT_CODIGO AND 
				GRS.CRDPT_CODIGO = DG.CRDPT_CODIGO AND
				GRS.CRTGR_ESTADO_ASIGNACION = 0 AND
				GRS.CRTGR_ESTADO
			WHERE GRT.CRGRT_ESTADO), 0)) CUPO_DISPONIBLE
		FROM SII.CGG_RES_DEPOSITO_GARANTIA DG
		LEFT JOIN SII.CGG_RES_CUENTA_PERSONAJURIDICA CPJ ON CPJ.CRCPJ_CODIGO = DG.CRCPJ_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJR ON PJR.CRPJR_CODIGO = CPJ.CGG_CRPJR_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJR1 ON PJR1.CRPJR_CODIGO = DG.CRPJR_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA PER ON PER.CRPER_CODIGO = DG.CRPER_CODIGO
		LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA EMA ON EMA.CRPJR_CODIGO = DG.CGG_CRPJR_CODIGO
		WHERE CRDPT_ESTADO AND (NOT '||IN_DISPONIBLES||' OR (DG.CRDPT_ESTADO_DEPOSITO IN (0,1) AND NOT CRDPT_DEVUELTO AND (DG.CRDPT_CADUCA AND CURRENT_DATE < DG.CRDPT_FECHA_CADUCIDAD::DATE OR NOT DG.CRDPT_CADUCA) ))
	) AS GRN 
	WHERE (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('''||IN_FIND_TEXT||''',
		COALESCE(GRN.CRDPT_NUMERO_DOCUMENTO, '''')||'' ''||
		COALESCE(GRN.CRPJR_RAZON_SOCIAL,'''')||'' ''||		
		COALESCE(GRN.EMPRESA,'''')||'' ''||
		COALESCE(GRN.CRPER_NOMBRES,'''')||'' ''||
		COALESCE(GRN.TRAMITES,'''')||'' ''||						
		COALESCE(GRN.CRDPT_OBSERVACION, '''')) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;*/
		
	OPEN TMP_REF FOR EXECUTE TMP_STMT;
	
	RETURN TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_DISPONIBLES BOOLEAN
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(CRDPT_CODIGO) INTO TMP_ROWS
	FROM SII.CGG_RES_DEPOSITO_GARANTIA DG
	LEFT JOIN SII.CGG_RES_CUENTA_PERSONAJURIDICA CPJ ON CPJ.CRCPJ_CODIGO = DG.CRCPJ_CODIGO
	LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJR ON PJR.CRPJR_CODIGO = CPJ.CGG_CRPJR_CODIGO
	LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJR1 ON PJR1.CRPJR_CODIGO = DG.CRPJR_CODIGO
	LEFT JOIN SII.CGG_RES_PERSONA PER ON PER.CRPER_CODIGO = DG.CRPER_CODIGO
	LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA EMA ON EMA.CRPJR_CODIGO = DG.CGG_CRPJR_CODIGO
	WHERE CRDPT_ESTADO AND
		(NOT IN_DISPONIBLES OR (DG.CRDPT_ESTADO_DEPOSITO IN (0,1) AND NOT CRDPT_DEVUELTO AND (DG.CRDPT_CADUCA AND CURRENT_DATE < DG.CRDPT_FECHA_CADUCIDAD::DATE OR NOT DG.CRDPT_CADUCA) )) AND 
		(LENGTH(IN_FIND_TEXT) = 0 OR SII.F_STRING_IN(IN_FIND_TEXT,
		COALESCE(CRDPT_NUMERO_DOCUMENTO, '')||' '||
		COALESCE(EMA.CRPJR_RAZON_SOCIAL,'')||' '||
		COALESCE(PJR.CRPJR_RAZON_SOCIAL,'')||' '||
		COALESCE(PJR1.CRPJR_RAZON_SOCIAL,'')||' '||
		(COALESCE(PER.CRPER_NOMBRES,'')||' '||COALESCE(PER.CRPER_APELLIDO_PATERNO,'')||' '||COALESCE(PER.CRPER_APELLIDO_MATERNO,'') )||' '||
		COALESCE(CRDPT_VALOR_DEPOSITO, 0)||' '||
		COALESCE(CRDPT_FECHA_DEPOSITO, CURRENT_TIMESTAMP)||' '||
		COALESCE(CRDPT_FECHA_ENTREGA, CURRENT_TIMESTAMP)||' '||
		COALESCE(CRDPT_FECHA_CADUCIDAD, CURRENT_TIMESTAMP)||' '||
		COALESCE(CRDPT_FECHA_CONTABILIZACION, CURRENT_TIMESTAMP)||' '||
		COALESCE(CRDPT_FECHA_SOLIC_DEVOLUCION, CURRENT_TIMESTAMP)||' '||
		COALESCE(CRDPT_FECHA_DEVOLUCION_DEFINITI, CURRENT_TIMESTAMP)||' '||
		COALESCE(CRDPT_DEVUELTO, FALSE)||' '||
		COALESCE(CRDPT_OBSERVACION, '')) = 1);
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_DEPOSITO_GARANTIA
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA
* @param IN_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA NATURAL QUE REALIZO EL DEPOSITO
* @param IN_CGG_CRPJR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE PERSONA JURIDICA QUE REALIZO EL DEPOSITO 
* @param IN_CRDPT_NUMERO NUMERO ALFANUMERICO SECUENCIAL GENERADO CON FINES DE INDICAR A QUE REFERENCIA HACE UN TRAMITE AL MOMENTO DE SU CREACION.
* @param IN_CRDPT_NUMERO_DOCUMENTO NUMERO DE DOCUMENTO DE DEPOSITO
* @param IN_CRDPT_CADUCA SI LA GARANTIA CADUCA
* @param IN_CRDPT_TIPO TIPO DE GARANTIA
0 - DEPOSITO
1 - CHEQUE
2 - POLIZA
3 - OTROS
* @param IN_CRDPT_VALOR_DEPOSITO VALOR DEPOSITADO POR GARANTIA
* @param IN_CRDPT_FECHA_DEPOSITO FECHA DE REALIZACION DE DEPOSITO
* @param IN_CRDPT_FECHA_ENTREGA FECHA DE ENTREGA DE COMPROBANTE DE DEPOSITO
* @param IN_CRDPT_FECHA_CADUCIDAD FECHA DE CADUCIDAD DEL DEPOSITO DE GARANTIA
* @param IN_CRDPT_FECHA_CONTABILIZACION FECHA DE INGRESO A CUSTODIA DEL DEPARTAMENTO FINANCIERO
* @param IN_CRDPT_FECHA_SOLIC_DEVOLUCION FECHA DE SOLICITUD DE DEVOLUCION DE GARANTIA
* @param IN_CRDPT_FECHA_DEVOLUCION_DEFINITI FECHA DE DEVOLUCION DE LA GARANTIA AL TITULAR
* @param IN_CRDPT_DEVUELTO ESTADO QUE DETERMINA SI UNA GARANTIA ESTA AUN ACTIVA 
SI
NO
* @param IN_CRDPT_ESTADO_DEPOSITO ESTADO DE CONTROL DEL DEPOSITO 
0 - REGISTRADO
1 - CONTABILIZADO
2 - AUTORIZADO LA DEVOLUCION
3 - DEVUELTO
4 - TEMPORAL CREADA EN TRAMITE

* @param IN_CRDPT_OBSERVACION OBSERVACION DEL DEPOSITO DE GARANTIA
* @param IN_CRDPT_ESTADO ESTADO DEL DEPOSITO
* @param IN_CRDPT_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_UPDATE(
IN IN_CRDPT_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_CODIGO%TYPE,
IN IN_CRCPJ_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRCPJ_CODIGO%TYPE,
IN IN_CRPJR_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRPJR_CODIGO%TYPE,
IN IN_CRPER_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRPER_CODIGO%TYPE,
IN IN_CGG_CRPJR_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CGG_CRPJR_CODIGO%TYPE,
IN IN_CRDPT_NUMERO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_NUMERO%TYPE,
IN IN_CRDPT_NUMERO_DOCUMENTO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_NUMERO_DOCUMENTO%TYPE,
IN IN_CRDPT_CADUCA SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_CADUCA%TYPE,
IN IN_CRDPT_TIPO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_TIPO%TYPE,
IN IN_CRDPT_VALOR_DEPOSITO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_VALOR_DEPOSITO%TYPE,
IN IN_CRDPT_FECHA_DEPOSITO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_DEPOSITO%TYPE,
IN IN_CRDPT_FECHA_ENTREGA SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_ENTREGA%TYPE,
IN IN_CRDPT_FECHA_CADUCIDAD SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_CADUCIDAD%TYPE,
IN IN_CRDPT_FECHA_CONTABILIZACION SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_CONTABILIZACION%TYPE,
IN IN_CRDPT_FECHA_SOLIC_DEVOLUCION SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_SOLIC_DEVOLUCION%TYPE,
IN IN_CRDPT_FECHA_DEVOLUCION_DEFINITI SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_FECHA_DEVOLUCION_DEFINITI%TYPE,
IN IN_CRDPT_DEVUELTO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_DEVUELTO%TYPE,
IN IN_CRDPT_ESTADO_DEPOSITO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_ESTADO_DEPOSITO%TYPE,
IN IN_CRDPT_OBSERVACION SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_OBSERVACION%TYPE,
IN IN_CRDPT_ESTADO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_ESTADO%TYPE,
IN IN_CRDPT_USUARIO_UPDATE SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_DEPOSITO_GARANTIA SET
		CRCPJ_CODIGO = IN_CRCPJ_CODIGO, 
		CRPJR_CODIGO = IN_CRPJR_CODIGO,
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CGG_CRPJR_CODIGO = IN_CGG_CRPJR_CODIGO,
		CRDPT_NUMERO = IN_CRDPT_NUMERO, 
		CRDPT_NUMERO_DOCUMENTO = IN_CRDPT_NUMERO_DOCUMENTO, 
		CRDPT_CADUCA = IN_CRDPT_CADUCA, 
		CRDPT_TIPO = IN_CRDPT_TIPO, 
		CRDPT_VALOR_DEPOSITO = IN_CRDPT_VALOR_DEPOSITO, 
		CRDPT_FECHA_DEPOSITO = IN_CRDPT_FECHA_DEPOSITO, 
		CRDPT_FECHA_ENTREGA = IN_CRDPT_FECHA_ENTREGA, 
		CRDPT_FECHA_CADUCIDAD = IN_CRDPT_FECHA_CADUCIDAD, 
		CRDPT_FECHA_CONTABILIZACION = IN_CRDPT_FECHA_CONTABILIZACION, 
		CRDPT_FECHA_SOLIC_DEVOLUCION = IN_CRDPT_FECHA_SOLIC_DEVOLUCION, 
		CRDPT_FECHA_DEVOLUCION_DEFINITI = IN_CRDPT_FECHA_DEVOLUCION_DEFINITI, 
		CRDPT_DEVUELTO = IN_CRDPT_DEVUELTO, 
		CRDPT_ESTADO_DEPOSITO = IN_CRDPT_ESTADO_DEPOSITO, 
		CRDPT_OBSERVACION = IN_CRDPT_OBSERVACION, 
		CRDPT_ESTADO = IN_CRDPT_ESTADO, 
		CRDPT_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRDPT_USUARIO_UPDATE = IN_CRDPT_USUARIO_UPDATE
	WHERE
		CRDPT_CODIGO = IN_CRDPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_SELECT(
IN IN_CRDPT_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRDPT_CODIGO, 
		CRCPJ_CODIGO, 
		CRPJR_CODIGO,
		CRPER_CODIGO, 
		CGG_CRPJR_CODIGO,
		CRDPT_NUMERO, 
		CRDPT_NUMERO_DOCUMENTO, 
		CRDPT_CADUCA, 
		CRDPT_TIPO, 
		CRDPT_VALOR_DEPOSITO, 
		CRDPT_FECHA_DEPOSITO, 
		CRDPT_FECHA_ENTREGA, 
		CRDPT_FECHA_CADUCIDAD, 
		CRDPT_FECHA_CONTABILIZACION, 
		CRDPT_FECHA_SOLIC_DEVOLUCION, 
		CRDPT_FECHA_DEVOLUCION_DEFINITI, 
		CRDPT_DEVUELTO, 
		CRDPT_ESTADO_DEPOSITO, 
		CRDPT_OBSERVACION, 
		CRDPT_ESTADO, 
		CRDPT_FECHA_INSERT, 
		CRDPT_USUARIO_INSERT, 
		CRDPT_FECHA_UPDATE, 
		CRDPT_USUARIO_UPDATE
	FROM SII.CGG_RES_DEPOSITO_GARANTIA
	WHERE CRDPT_ESTADO = TRUE AND 
		CRDPT_CODIGO = IN_CRDPT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_DELETE(
IN IN_CRDPT_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_DEPOSITO_GARANTIA
	WHERE
		CRDPT_CODIGO = IN_CRDPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_DELETE_SOFT(
IN IN_CRDPT_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRDPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_DEPOSITO_GARANTIA SET
		CRDPT_ESTADO = FALSE
	WHERE
		CRDPT_CODIGO = IN_CRDPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_S_CGG_RES_CUENTA_PERSONAJURIDICA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA.
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA 
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_S_CGG_RES_CUENTA_PERSONAJURIDICA(
IN IN_CRCPJ_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRCPJ_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRDPT_CODIGO, 
		CRCPJ_CODIGO,
		CRPJR_CODIGO, 
		CRPER_CODIGO, 
		CGG_CRPJR_CODIGO,
		CRDPT_NUMERO, 
		CRDPT_NUMERO_DOCUMENTO, 
		CRDPT_CADUCA, 
		CRDPT_TIPO, 
		CRDPT_VALOR_DEPOSITO, 
		CRDPT_FECHA_DEPOSITO, 
		CRDPT_FECHA_ENTREGA, 
		CRDPT_FECHA_CADUCIDAD, 
		CRDPT_FECHA_CONTABILIZACION, 
		CRDPT_FECHA_SOLIC_DEVOLUCION, 
		CRDPT_FECHA_DEVOLUCION_DEFINITI, 
		CRDPT_DEVUELTO, 
		CRDPT_ESTADO_DEPOSITO, 
		CRDPT_OBSERVACION, 
		CRDPT_ESTADO, 
		CRDPT_FECHA_INSERT, 
		CRDPT_USUARIO_INSERT, 
		CRDPT_FECHA_UPDATE, 
		CRDPT_USUARIO_UPDATE
	FROM SII.CGG_RES_DEPOSITO_GARANTIA
	WHERE CRDPT_ESTADO = TRUE AND 
		CRCPJ_CODIGO = IN_CRCPJ_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_D_CGG_RES_CUENTA_PERSONAJURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA.
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA 
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_D_CGG_RES_CUENTA_PERSONAJURIDICA(
IN IN_CRCPJ_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRCPJ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_DEPOSITO_GARANTIA
	WHERE
		CRCPJ_CODIGO = IN_CRCPJ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_D_CGG_RES_CUENTA_PERSONAJURIDICA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_CUENTA_PERSONAJURIDICA.
* @param IN_CRCPJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CUENTA 
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_DS_CGG_RES_CUENTA_PERSONAJURIDICA(
IN IN_CRCPJ_CODIGO SII.CGG_RES_DEPOSITO_GARANTIA.CRCPJ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_DEPOSITO_GARANTIA SET
		crdpt_estado = false
	WHERE
		CRCPJ_CODIGO = IN_CRCPJ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_S_CGG_RES_DEPOSITO_GARANTIA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA.
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @param IN_USER_NAME NOMBRE DEL USUARIO DEL SERVIDOR DE APLICACIONES.
* @param IN_START_INDEX INDICE DE INICIO.
* @param IN_LIMIT TOTAL DE REGISTROS QUE SON CONSIDERADOS.
* @param IN_SORT_FIELD_NAME NOMBRE DE LA COLUMNA DEL ORDENAMIENTO.
* @param IN_DIRECCION DIRECCION DEL ORDENAMIENTO.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRM_S_CGG_RES_DPS_GRN(
IN IN_CRDPT_CODIGO VARCHAR,
IN IN_USER_NAME varchar(50),
IN IN_START_INDEX int,
IN IN_LIMIT int,
IN IN_SORT_FIELD_NAME varchar,
IN IN_DIRECTION varchar,
IN IN_FIND_TEXT text
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		TRM.CRTRA_CODIGO, 
		TRM.CRPER_CODIGO, 
		TRM.CRPJR_CODIGO, 
		TRM.CGG_CRPER_CODIGO, 
		TRM.CRPRO_CODIGO, 
		TST.CRTST_CODIGO, 
		TRM.CVVEH_CODIGO, 
		TRM.CRETT_CODIGO, 
		TRM.CISLA_CODIGO,
		TRM.CVMTR_CODIGO, 
		TRM.CRTRA_ANIO, 
		TRM.CRTRA_NUMERO, 
		TRM.CRTRA_MOTIVO,
		SII.F_TRAMITE_TIPO(TST.CRTST_CODIGO) TIPO,
		TRG.CRTGR_ESTADO_ASIGNACION,
		(TRG.CRTGR_VALOR) TOTAL
	FROM SII.CGG_RES_TRAMITE TRM
	INNER JOIN SII.CGG_RES_TRAMITE_GARANTIA TRG ON TRG.CRTRA_CODIGO = TRM.CRTRA_CODIGO AND TRG.CRTGR_ESTADO
	INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = TRM.CRTST_CODIGO
	WHERE CRTRA_ESTADO AND TRG.CRDPT_CODIGO = '||QUOTE_LITERAL(IN_CRDPT_CODIGO)||' AND 
		SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CRTRA_ANIO, 0)||'' ''||COALESCE(CRTRA_NUMERO, 0)||'' ''||COALESCE(CRTRA_FECHA_RECEPCION, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRTRA_ACTIVIDAD_RESIDENCIA, '''')||'' ''||COALESCE(CRTRA_OBSERVACION, '''')||'' ''||COALESCE(CRTRA_DIAS_PERMANENCIA, 0)||'' ''||COALESCE(CRTRA_PENDIENTE, 0)||'' ''||COALESCE(CRTRA_OBSERVACION_PENDIENTE, '''')||'' ''||COALESCE(CRTRA_ATENCION_CLIENTE, FALSE)||'' ''||COALESCE(CRTRA_COMUNICADO_RADIAL, '''')||'' ''||COALESCE(CRTRA_MOTIVO, '''')||'' ''||COALESCE(CRTRA_FOLIO, 0)||'' ''||COALESCE(CRTRA_GRUPO, FALSE)||'' ''||COALESCE(CRTRA_ORDEN, 0)||'' ''||COALESCE(CRTRA_FECHA_INGRESO, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRTRA_FECHA_SALIDA, CURRENT_TIMESTAMP)) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRM_S_CGG_RES_DPS_GRN_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return NUMERO DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRM_S_CGG_RES_DPS_GRN_COUNT(
IN IN_CRDPT_CODIGO VARCHAR,
IN IN_FIND_TEXT text
)RETURNS INT AS
$$
DECLARE
	OUT_COUNT INT;
BEGIN
	SELECT COUNT(TRM.CRTRA_CODIGO) INTO OUT_COUNT
	FROM SII.CGG_RES_TRAMITE TRM
	INNER JOIN SII.CGG_RES_TRAMITE_GARANTIA TRG ON TRG.CRTRA_CODIGO = TRM.CRTRA_CODIGO AND TRG.CRTGR_ESTADO
	INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = TRM.CRTST_CODIGO
	INNER JOIN SII.CGG_RES_TIPO_TRAMITE TPT ON TPT.CRTPT_CODIGO = TST.CRTPT_CODIGO
	WHERE CRTRA_ESTADO AND TRG.CRDPT_CODIGO = IN_CRDPT_CODIGO AND 
		CASE WHEN IN_FIND_TEXT IS NULL THEN TRUE 
			WHEN LENGTH(TRIM(IN_FIND_TEXT)) > 0 THEN
				SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRTRA_ANIO, 0)||' '||COALESCE(CRTRA_NUMERO, 0)||' '||COALESCE(CRTRA_FECHA_RECEPCION, CURRENT_TIMESTAMP)||' '||COALESCE(CRTRA_ACTIVIDAD_RESIDENCIA, '')||' '||COALESCE(CRTRA_OBSERVACION, '')||' '||COALESCE(CRTRA_DIAS_PERMANENCIA, 0)||' '||COALESCE(CRTRA_PENDIENTE, 0)||' '||COALESCE(CRTRA_OBSERVACION_PENDIENTE, '')||' '||COALESCE(CRTRA_ATENCION_CLIENTE, FALSE)||' '||COALESCE(CRTRA_COMUNICADO_RADIAL, '')||' '||COALESCE(CRTRA_MOTIVO, '')||' '||COALESCE(CRTRA_FOLIO, 0)||' '||COALESCE(CRTRA_GRUPO, FALSE)||' '||COALESCE(CRTRA_ORDEN, 0)||' '||COALESCE(CRTRA_FECHA_INGRESO, CURRENT_TIMESTAMP)||' '||COALESCE(CRTRA_FECHA_SALIDA, CURRENT_TIMESTAMP)) = 1
			ELSE
				TRUE
		END;
	RETURN OUT_COUNT;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_DEVOLUCION
* VERIFICA SI EL BENEFICIARIO DE UN TRAMITE DE RESIDENCIA TEMPORAL ESTA DENTRO DE LA PROVINCIA
* PARA AUTORIZAR LA RESIDENCIA
* @param IN_USER_NAME NOMBRE DEL USUARIO DEL SERVIDOR DE APLICACIONES.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE TRAMITE.
* @param IN_TODO COMPRUEBA SI LA DEVOLUCION SE REALIZO EN SU TOTALIDAD.
* @param IN_VERIFICAR SI SE REALIZO LA DEVOLUCION.
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_DEVOLUCION(
IN IN_USER_NAME VARCHAR,
IN IN_CRTRA_CODIGO VARCHAR,
IN IN_TODO BOOLEAN,
IN IN_VERIFICAR BOOLEAN
)RETURNS VARCHAR[] AS
$$
DECLARE
TMP_TRAMITES RECORD;
--REGISTRO DE LA TABLA TRAMITE
TMP_RTRM RECORD;
--REGISTRO DE MOVILIDAD
TMP_RMVD RECORD;
--REGISTRO DE RESIDENCIA
TMP_RRSD RECORD;
--CONTADOR
TMP_C INT;
--NOVEDADES
OUT_MSG VARCHAR[];
--REGISTRO DE TRAMITE GARANTIA
TMP_RTRG RECORD;
--CODIGO DEL ULTIMO SEGUIMIENTO
TMP_CRSEG_FILA RECORD;
--FECHA DE CADUCIDAD EFECTIVA DE LA RESIDENCIA
TMP_FECHA_CADUCIDAD TIMESTAMP WITH TIME ZONE;
TMP_COUNT INT;
TMP_ROWS INT;
TMP_CRMOV_TIPO_OPERACION INT;
BEGIN
	TMP_C = 0;
	--SELECCIONA EL TRAMITE QUE DESEA DEVOLVER LA GARANTIA
	SELECT * INTO TMP_RTRM 
	FROM SII.CGG_RES_TRAMITE TRM
	INNER JOIN SII.CGG_RES_TRAMITE_GARANTIA TRG ON TRG.CRTRA_CODIGO = TRM.CRTRA_CODIGO AND TRG.CRTGR_ESTADO
	WHERE TRM.CRTRA_CODIGO = IN_CRTRA_CODIGO;
	
	IF (TMP_RTRM.CRDPT_CODIGO IS NULL) THEN
		TMP_C = TMP_C + 1;
		OUT_MSG[TMP_C] = 'El tramite seleccionado no tiene asociado una garant&iacute;a.';
		RETURN OUT_MSG;
	END IF;
	
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_TRAMITE_GARANTIA 
	WHERE CRTGR_ESTADO AND 
		CRTGR_ESTADO_ASIGNACION = 0 AND
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
	
	IF (TMP_RTRM.CRTGR_ESTADO_ASIGNACION = 2 AND (TMP_ROWS > 0 OR NOT IN_TODO)) THEN
		TMP_C = TMP_C + 1;
		OUT_MSG[TMP_C] = 'La garant&iacute;a del tramite ya fue devuelta.';
		RETURN OUT_MSG;
	END IF;
	
	SELECT * INTO TMP_RTRG 
	FROM SII.CGG_RES_TRAMITE_GARANTIA TRG
	INNER JOIN  SII.CGG_RES_DEPOSITO_GARANTIA DPT ON DPT.CRDPT_CODIGO = TRG.CRDPT_CODIGO AND DPT.CRDPT_ESTADO
	WHERE TRG.CRTRA_CODIGO = IN_CRTRA_CODIGO AND
		TRG.CRTGR_ESTADO;

	IF (TMP_RTRG.CRDPT_ESTADO_DEPOSITO = 2 OR TMP_RTRM.CRTGR_ESTADO_ASIGNACION = 1) THEN
		TMP_C = TMP_C + 1;
		OUT_MSG[TMP_C] = 'La garant&iacute;a del tramite esta en proceso de devoluci&oacute;n.';
		RETURN OUT_MSG;
	END IF;
	IF (TMP_RTRG.CRDPT_ESTADO_DEPOSITO = 4) THEN
		TMP_C = TMP_C + 1;
		OUT_MSG[TMP_C] = 'La garant&iacute;a del tramite aun no se presenta en tesorer&iacute;a.';
		RETURN OUT_MSG;
	END IF;
	
	--SELECCIONA LA RESIDENCIA QUE GENERO EL TRAMITE
	SELECT * INTO TMP_RRSD
	FROM SII.CGG_RES_RESIDENCIA RSD
	INNER JOIN SII.CGG_RES_PERSONA PRS ON PRS.CRPER_CODIGO = RSD.CRPER_CODIGO
	WHERE RSD.CRTRA_CODIGO = IN_CRTRA_CODIGO AND
		RSD.CRRSD_VIGENTE AND
		RSD.CRRSD_ESTADO AND
		RSD.CRTST_CODIGO IN (WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
					SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
					FROM CGG_CONFIGURACION
					WHERE CGCNF_CODIGO = '04') 
					UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
					WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
				) SELECT CRTST_CODIGO  FROM TIPO);
	IF (IN_VERIFICAR AND TMP_RRSD.CRRSD_CODIGO IS NOT NULL) THEN
		TMP_C = TMP_C + 1;
		OUT_MSG[TMP_C] = 'El beneficiario del tramite '||TMP_RTRM.CRTRA_ANIO||'-'||TMP_RTRM.CRTRA_NUMERO||' a&uacute;n tiene vigente la residencia temporal No. '||TMP_RRSD.CRPER_NUMERO_RESIDENCIA;
	ELSE
		SELECT * INTO TMP_CRSEG_FILA 
		FROM SII.CGG_RES_SEGUIMIENTO SGM
		WHERE CRTRA_CODIGO = TMP_RTRM.CRTRA_CODIGO
		ORDER BY SGM.CRSEG_FECHA_DESPACHO DESC LIMIT 1;
		IF (TMP_CRSEG_FILA.CRSEG_TIPO_RESPUESTA = -1 AND TMP_CRSEG_FILA.CRSEG_ESTADO_ATENCION <> 6) THEN
			TMP_C = TMP_C + 1;
			OUT_MSG[TMP_C] = 'El tramite '||TMP_RTRM.CRTRA_ANIO||'-'||TMP_RTRM.CRTRA_NUMERO||' a&uacute;n no concluye.';
		END IF;
	END IF;
	
	--VERIFICA SI LA PERSONA ESTA DENTRO DE LA PROVINCIA
	IF (IN_VERIFICAR AND TMP_C = 0) THEN
		SELECT * INTO TMP_RRSD
		FROM SII.CGG_RES_RESIDENCIA RSD
		WHERE RSD.CRTRA_CODIGO = IN_CRTRA_CODIGO;
		
		IF (TMP_RRSD.CRRSD_REVOCADA) THEN
			TMP_FECHA_CADUCIDAD = TMP_RRSD.CRRSD_FECHA_REVOCATORIA;
		ELSE
			TMP_FECHA_CADUCIDAD = TMP_RRSD.CRRSD_FECHA_CADUCIDAD;
		END IF;
		
		SELECT COUNT (CRMOV_CODIGO) INTO TMP_COUNT
		FROM SII.CGG_RES_MOVILIDAD MVD
		WHERE MVD.CRPER_CODIGO = TMP_RTRM.CGG_CRPER_CODIGO AND
			NOT CRMOV_SOPORTE AND
			CRMOV_FECHA_VIAJE BETWEEN TMP_RRSD.CRRSD_FECHA_INICIO AND TMP_FECHA_CADUCIDAD AND
			CRMOV_TIPO_OPERACION = 0;
			
		IF (TMP_COUNT > 0) THEN		
			SELECT MOV.CRMOV_TIPO_OPERACION INTO TMP_CRMOV_TIPO_OPERACION
			FROM SII.CGG_RES_MOVILIDAD MOV
			--INNER JOIN SII.CGG_RES_RESIDENCIA RSD ON RSD.CRRSD_CODIGO = MOV.CRRSD_CODIGO AND RSD.CRRSD_ESTADO AND RSD.CRTRA_CODIGO = TMP_RTRM.CRTRA_CODIGO
			WHERE MOV.CRMOV_ESTADO AND 
				MOV.CRPER_CODIGO = TMP_RTRM.CGG_CRPER_CODIGO
			ORDER BY CRMOV_FECHA_VIAJE DESC, CRMOV_TIPO_OPERACION DESC LIMIT 1;
				
			IF (TMP_CRMOV_TIPO_OPERACION = 0) THEN
				TMP_C = TMP_C + 1;
				OUT_MSG[TMP_C] = 'El beneficiario del tramite '||TMP_RTRM.CRTRA_ANIO||'-'||TMP_RTRM.CRTRA_NUMERO||' a&uacute;n se encuentra en la provincia.';
			END IF;
		END IF;
	END IF;

	IF (TMP_C = 0) THEN
		IF (IN_TODO) THEN
			UPDATE SII.CGG_RES_DEPOSITO_GARANTIA SET
				CRDPT_FECHA_SOLIC_DEVOLUCION = CURRENT_TIMESTAMP,
				CRDPT_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CRDPT_USUARIO_UPDATE = IN_USER_NAME,
				CRDPT_ESTADO_DEPOSITO = 2
			WHERE CRDPT_CODIGO = TMP_RTRM.CRDPT_CODIGO;
		END IF;
		IF(TMP_ROWS > 0) THEN
			UPDATE SII.CGG_RES_TRAMITE_GARANTIA SET 
				CRTGR_ESTADO_ASIGNACION = 1,
				CRTGR_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CRTGR_USUARIO_UPDATE = IN_USER_NAME
			WHERE CRTRA_CODIGO = IN_CRTRA_CODIGO;
		END IF;
	END IF;
	RETURN OUT_MSG;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_DEPOSITO_GARANTIA_UPDATE_DEVOLUCION
* MARCA UNA GARANTIA DE LA TABLA sii.CGG_RES_DEPOSITO_GARANTIA COMO DEVUELTA
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @param IN_USER_NAME NOMBRE DEL USUARIO DEL SERVIDOR DE APLICACIONES.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE TRAMITE.
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_DEPOSITO_GARANTIA_UPDATE_DEVOLUCION(
IN IN_USER_NAME VARCHAR,
IN IN_CRDPT_CODIGO VARCHAR,
IN IN_CRTRA_CODIGO VARCHAR
)RETURNS VOID AS
$$
DECLARE
TMP_CRDPT_ESTADO_DEPOSITO INT;
TMP_CRTGR_ESTADO_ASIGNACION INT;
BEGIN
	SELECT CRDPT_ESTADO_DEPOSITO INTO TMP_CRDPT_ESTADO_DEPOSITO 
	FROM SII.CGG_RES_DEPOSITO_GARANTIA 
	WHERE CRDPT_CODIGO = IN_CRDPT_CODIGO;
	
	SELECT CRTGR_ESTADO_ASIGNACION INTO TMP_CRTGR_ESTADO_ASIGNACION 
	FROM SII.CGG_RES_TRAMITE_GARANTIA 
	WHERE CRTRA_CODIGO = IN_CRTRA_CODIGO;
		
	IF (TMP_CRDPT_ESTADO_DEPOSITO = 3 AND IN_CRTRA_CODIGO IS NULL) THEN
		RAISE EXCEPTION 'La garant&iacute;a seleccionada ya ha sido devuelta.';
	END IF;
	
	IF (TMP_CRDPT_ESTADO_DEPOSITO != 2 AND IN_CRTRA_CODIGO IS NULL) THEN
		RAISE EXCEPTION 'La garant&iacute;a seleccionada no tiene autorizado la devoluci&oacute;n.';
	END IF;
	
	IF(TMP_CRDPT_ESTADO_DEPOSITO IS NOT NULL AND IN_CRTRA_CODIGO IS NULL) THEN
		UPDATE SII.CGG_RES_DEPOSITO_GARANTIA SET
			CRDPT_FECHA_DEVOLUCION_DEFINITI = CURRENT_TIMESTAMP, 
			CRDPT_DEVUELTO = TRUE, 
			CRDPT_ESTADO_DEPOSITO = 3,   
			CRDPT_FECHA_UPDATE = CURRENT_TIMESTAMP, 
			CRDPT_USUARIO_UPDATE = IN_USER_NAME
		WHERE
			CRDPT_CODIGO = IN_CRDPT_CODIGO;
	END IF;
		
	IF (TMP_CRTGR_ESTADO_ASIGNACION = 2) THEN
		RAISE EXCEPTION 'La garant&iacute;a seleccionada ya ha sido devuelta.';
	END IF;
	
	IF (TMP_CRTGR_ESTADO_ASIGNACION = 0) THEN
		RAISE EXCEPTION 'La garant&iacute;a seleccionada no tiene autorizado la devoluci&oacute;n.';
	END IF;
	
	IF (TMP_CRTGR_ESTADO_ASIGNACION IS NOT NULL) THEN
		UPDATE SII.CGG_RES_TRAMITE_GARANTIA SET
			CRTGR_FECHA_DEVOLUCION = CURRENT_TIMESTAMP, 
			CRTGR_DEVUELTO = TRUE, 
			CRTGR_ESTADO_ASIGNACION = 2,
			CRTGR_FECHA_UPDATE = CURRENT_TIMESTAMP, 
			CRTGR_USUARIO_UPDATE = IN_USER_NAME
		WHERE
			CRTRA_CODIGO = IN_CRTRA_CODIGO;
	END IF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
