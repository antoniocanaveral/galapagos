/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_SESION_COMITE
* @param IN_CRSSC_CODIGO IDENTIFICATIVO UNICO DE REGIsTRO DE SESION
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @param IN_CRCOM_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRSSC_FECHA_REUNION FECHA DE REALIZACION DE LA SESION
* @param IN_CRSSC_FECHA_FINALIZACION FECHA DE FINALIZACION DE SESION  
* @param IN_CRSSC_NUMERO_SESION NUMERO IDENTIFICATIVO DE LA SESION
* @param IN_CRSSC_EXTRACTO RESUMEN DEL CONTENIDO DE LA SESION
* @param IN_CRSSC_OBSERVACION OBSERVACIONES DE LA SESION
* @param IN_CRSSC_FECHA_CONVOCATORIA FECHA DE REALIZACION DE LA CONVOCATORIA PARA LA SESION
* @param IN_CRSSC_MOTIVO_CONVOCATORIA RESUMEN DE LOS TEMAS A TRATARSE EN LA SESION
* @param IN_CRSSC_DESCRIPCION_ADJUNTO DESCRIPCION DE LOS DOCUMENTOS ADJUNTOS A LA SESION
* @param IN_CRSSC_NOMBRE_ADJUNTO NOMBRE DEL DOCUMENTO ADJUNTO
* @param IN_CRSSC_ADJUNTO ARCHIVO DIGITAL ANEXO A LA SESION
* @param IN_CRSSC_ESTADO_CONVOCATORIA ESTADO DE LA CONVOCATORIA
0 - REGISTRADA
1 - APROBADA
2 - ANULADA
3 - EN PROCESO
4 - SUSPENDIDA
5 - CONCLUIDA
* @param IN_CRSSC_ESTADO ESTADO DEL REGISTRO
* @param IN_CRSSC_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRSSC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_INSERT(
IN IN_CRSSC_CODIGO SII.CGG_RES_SESION_COMITE.CRSSC_CODIGO%TYPE, 
IN IN_CISLA_CODIGO SII.CGG_RES_SESION_COMITE.CISLA_CODIGO%TYPE, 
IN IN_CRCOM_CODIGO SII.CGG_RES_SESION_COMITE.CRCOM_CODIGO%TYPE, 
IN IN_CRSSC_FECHA_REUNION SII.CGG_RES_SESION_COMITE.CRSSC_FECHA_REUNION%TYPE, 
IN IN_CRSSC_FECHA_FINALIZACION SII.CGG_RES_SESION_COMITE.CRSSC_FECHA_FINALIZACION%TYPE, 
IN IN_CRSSC_NUMERO_SESION SII.CGG_RES_SESION_COMITE.CRSSC_NUMERO_SESION%TYPE, 
IN IN_CRSSC_EXTRACTO SII.CGG_RES_SESION_COMITE.CRSSC_EXTRACTO%TYPE, 
IN IN_CRSSC_OBSERVACION SII.CGG_RES_SESION_COMITE.CRSSC_OBSERVACION%TYPE, 
IN IN_CRSSC_FECHA_CONVOCATORIA SII.CGG_RES_SESION_COMITE.CRSSC_FECHA_CONVOCATORIA%TYPE, 
IN IN_CRSSC_MOTIVO_CONVOCATORIA SII.CGG_RES_SESION_COMITE.CRSSC_MOTIVO_CONVOCATORIA%TYPE, 
IN IN_CRSSC_DESCRIPCION_ADJUNTO SII.CGG_RES_SESION_COMITE.CRSSC_DESCRIPCION_ADJUNTO%TYPE, 
IN IN_CRSSC_NOMBRE_ADJUNTO SII.CGG_RES_SESION_COMITE.CRSSC_NOMBRE_ADJUNTO%TYPE, 
IN IN_CRSSC_ADJUNTO SII.CGG_RES_SESION_COMITE.CRSSC_ADJUNTO%TYPE, 
IN IN_CRSSC_ESTADO_CONVOCATORIA SII.CGG_RES_SESION_COMITE.CRSSC_ESTADO_CONVOCATORIA%TYPE, 
IN IN_CRSSC_ESTADO SII.CGG_RES_SESION_COMITE.CRSSC_ESTADO%TYPE, 
IN IN_CRSSC_USUARIO_INSERT SII.CGG_RES_SESION_COMITE.CRSSC_USUARIO_INSERT%TYPE, 
IN IN_CRSSC_USUARIO_UPDATE SII.CGG_RES_SESION_COMITE.CRSSC_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
TMP_COUNT INT;
BEGIN
	SELECT COUNT(CRSSC_CODIGO) INTO TMP_COUNT FROM SII.CGG_RES_SESION_COMITE WHERE CRCOM_CODIGO = IN_CRCOM_CODIGO AND CRSSC_ESTADO_CONVOCATORIA IN (0,1,3);
	IF(TMP_COUNT>0)THEN
		RAISE EXCEPTION 'El Comit&eacute; seleccionado tiene una sesi&oacute;n pendiente.';
	END IF;
	IF (UPPER(IN_CRSSC_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_SESION_COMITE','CRSSC_CODIGO','CRSSC') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRSSC_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_SESION_COMITE(
		CRSSC_CODIGO, 
		CISLA_CODIGO, 
		CRCOM_CODIGO, 
		CRSSC_FECHA_REUNION, 
		CRSSC_FECHA_FINALIZACION, 
		CRSSC_NUMERO_SESION, 
		CRSSC_EXTRACTO, 
		CRSSC_OBSERVACION, 
		CRSSC_FECHA_CONVOCATORIA, 
		CRSSC_MOTIVO_CONVOCATORIA, 
		CRSSC_DESCRIPCION_ADJUNTO, 
		CRSSC_NOMBRE_ADJUNTO, 
		CRSSC_ADJUNTO, 
		CRSSC_ESTADO_CONVOCATORIA, 
		CRSSC_ESTADO, 
		CRSSC_FECHA_INSERT, 
		CRSSC_USUARIO_INSERT, 
		CRSSC_FECHA_UPDATE, 
		CRSSC_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CISLA_CODIGO, 
		IN_CRCOM_CODIGO, 
		IN_CRSSC_FECHA_REUNION, 
		IN_CRSSC_FECHA_FINALIZACION, 
		IN_CRSSC_NUMERO_SESION, 
		IN_CRSSC_EXTRACTO, 
		IN_CRSSC_OBSERVACION, 
		IN_CRSSC_FECHA_CONVOCATORIA, 
		IN_CRSSC_MOTIVO_CONVOCATORIA, 
		IN_CRSSC_DESCRIPCION_ADJUNTO, 
		IN_CRSSC_NOMBRE_ADJUNTO, 
		IN_CRSSC_ADJUNTO, 
		IN_CRSSC_ESTADO_CONVOCATORIA, 
		IN_CRSSC_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRSSC_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRSSC_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_SESION_COMITE
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRSSC_CODIGO, 
		CISLA_CODIGO, 
		CRCOM_CODIGO, 
		CRSSC_FECHA_REUNION, 
		CRSSC_FECHA_FINALIZACION, 
		CRSSC_NUMERO_SESION, 
		CRSSC_EXTRACTO, 
		CRSSC_OBSERVACION, 
		CRSSC_FECHA_CONVOCATORIA, 
		CRSSC_MOTIVO_CONVOCATORIA, 
		CRSSC_DESCRIPCION_ADJUNTO, 
		CRSSC_NOMBRE_ADJUNTO, 
		NULL,
		CRSSC_ESTADO_CONVOCATORIA, 
		CRSSC_ESTADO, 
		CRSSC_FECHA_INSERT, 
		CRSSC_USUARIO_INSERT, 
		CRSSC_FECHA_UPDATE, 
		CRSSC_USUARIO_UPDATE
	FROM SII.CGG_RES_SESION_COMITE
	WHERE CRSSC_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_SESION_COMITE
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		SC.CRSSC_CODIGO, 
		SC.CISLA_CODIGO, 
		ISL.CISLA_NOMBRE,
		SC.CRCOM_CODIGO, 
		(SELECT CRCOM_NOMBRE FROM SII.CGG_RES_COMITE WHERE CRCOM_CODIGO = SC.CRCOM_CODIGO) COMITE,
		SC.CRSSC_FECHA_REUNION, 
		SC.CRSSC_FECHA_FINALIZACION, 
		SC.CRSSC_NUMERO_SESION, 
		SC.CRSSC_EXTRACTO, 
		SC.CRSSC_OBSERVACION, 
		SC.CRSSC_FECHA_CONVOCATORIA, 
		SC.CRSSC_MOTIVO_CONVOCATORIA, 
		SC.CRSSC_DESCRIPCION_ADJUNTO, 
		SC.CRSSC_NOMBRE_ADJUNTO, 		
		NULL,
		SC.CRSSC_ESTADO_CONVOCATORIA, 
		SC.CRSSC_ESTADO, 
		SC.CRSSC_FECHA_INSERT, 
		SC.CRSSC_USUARIO_INSERT, 
		SC.CRSSC_FECHA_UPDATE, 
		SC.CRSSC_USUARIO_UPDATE
	FROM SII.CGG_RES_SESION_COMITE SC
	INNER JOIN SII.CGG_ISLA ISL ON (ISL.CISLA_CODIGO = SC.CISLA_CODIGO)
	WHERE CRSSC_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(ISL.CISLA_NOMBRE,'''')||'' ''||
	COALESCE(CRSSC_FECHA_REUNION, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_FECHA_FINALIZACION, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_NUMERO_SESION, '''')||'' ''||COALESCE(CRSSC_EXTRACTO, '''')||'' ''||
	COALESCE(CRSSC_OBSERVACION, '''')||'' ''||
	COALESCE(CRSSC_FECHA_CONVOCATORIA, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_MOTIVO_CONVOCATORIA, '''')||'' ''||
	COALESCE(CRSSC_DESCRIPCION_ADJUNTO, '''')||'' ''||
	COALESCE(CRSSC_NOMBRE_ADJUNTO, '''')||'' ''||
	COALESCE(CRSSC_ESTADO_CONVOCATORIA, 0)||'' ''||
	COALESCE(CRSSC_ESTADO, FALSE)||'' ''||
	COALESCE(CRSSC_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_USUARIO_INSERT, '''')||'' ''||
	COALESCE(CRSSC_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_SESION_COMITE
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_SESION_COMITE
	WHERE CRSSC_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRSSC_FECHA_REUNION, CURRENT_TIMESTAMP)||' '||COALESCE(CRSSC_FECHA_FINALIZACION, CURRENT_TIMESTAMP)||' '||COALESCE(CRSSC_NUMERO_SESION, '''')||' '||COALESCE(CRSSC_EXTRACTO, '''')||' '||COALESCE(CRSSC_OBSERVACION, '''')||' '||COALESCE(CRSSC_FECHA_CONVOCATORIA, CURRENT_TIMESTAMP)||' '||COALESCE(CRSSC_MOTIVO_CONVOCATORIA, '''')||' '||COALESCE(CRSSC_DESCRIPCION_ADJUNTO, '''')||' '||COALESCE(CRSSC_NOMBRE_ADJUNTO, '''')||' '||COALESCE(CRSSC_ESTADO_CONVOCATORIA, 0)||' '||COALESCE(CRSSC_ESTADO, FALSE)||' '||COALESCE(CRSSC_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRSSC_USUARIO_INSERT, '''')||' '||COALESCE(CRSSC_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRSSC_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_SESION_COMITE
* @param IN_CRSSC_CODIGO IDENTIFICATIVO UNICO DE REGIsTRO DE SESION
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @param IN_CRCOM_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRSSC_FECHA_REUNION FECHA DE REALIZACION DE LA SESION
* @param IN_CRSSC_FECHA_FINALIZACION FECHA DE FINALIZACION DE SESION  
* @param IN_CRSSC_NUMERO_SESION NUMERO IDENTIFICATIVO DE LA SESION
* @param IN_CRSSC_EXTRACTO RESUMEN DEL CONTENIDO DE LA SESION
* @param IN_CRSSC_OBSERVACION OBSERVACIONES DE LA SESION
* @param IN_CRSSC_FECHA_CONVOCATORIA FECHA DE REALIZACION DE LA CONVOCATORIA PARA LA SESION
* @param IN_CRSSC_MOTIVO_CONVOCATORIA RESUMEN DE LOS TEMAS A TRATARSE EN LA SESION
* @param IN_CRSSC_DESCRIPCION_ADJUNTO DESCRIPCION DE LOS DOCUMENTOS ADJUNTOS A LA SESION
* @param IN_CRSSC_NOMBRE_ADJUNTO NOMBRE DEL DOCUMENTO ADJUNTO
* @param IN_CRSSC_ADJUNTO ARCHIVO DIGITAL ANEXO A LA SESION
* @param IN_CRSSC_ESTADO_CONVOCATORIA ESTADO DE LA CONVOCATORIA
0 - REGISTRADA
1 - APROBADA
2 - ANULADA
3 - EN PROCESO
4 - SUSPENDIDA
5 - CONCLUIDA
* @param IN_CRSSC_ESTADO ESTADO DEL REGISTRO
* @param IN_CRSSC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_UPDATE(
IN IN_CRSSC_CODIGO SII.CGG_RES_SESION_COMITE.CRSSC_CODIGO%TYPE, 
IN IN_CISLA_CODIGO SII.CGG_RES_SESION_COMITE.CISLA_CODIGO%TYPE, 
IN IN_CRCOM_CODIGO SII.CGG_RES_SESION_COMITE.CRCOM_CODIGO%TYPE, 
IN IN_CRSSC_FECHA_REUNION SII.CGG_RES_SESION_COMITE.CRSSC_FECHA_REUNION%TYPE, 
IN IN_CRSSC_FECHA_FINALIZACION SII.CGG_RES_SESION_COMITE.CRSSC_FECHA_FINALIZACION%TYPE, 
IN IN_CRSSC_NUMERO_SESION SII.CGG_RES_SESION_COMITE.CRSSC_NUMERO_SESION%TYPE, 
IN IN_CRSSC_EXTRACTO SII.CGG_RES_SESION_COMITE.CRSSC_EXTRACTO%TYPE, 
IN IN_CRSSC_OBSERVACION SII.CGG_RES_SESION_COMITE.CRSSC_OBSERVACION%TYPE, 
IN IN_CRSSC_FECHA_CONVOCATORIA SII.CGG_RES_SESION_COMITE.CRSSC_FECHA_CONVOCATORIA%TYPE, 
IN IN_CRSSC_MOTIVO_CONVOCATORIA SII.CGG_RES_SESION_COMITE.CRSSC_MOTIVO_CONVOCATORIA%TYPE, 
IN IN_CRSSC_DESCRIPCION_ADJUNTO SII.CGG_RES_SESION_COMITE.CRSSC_DESCRIPCION_ADJUNTO%TYPE, 
IN IN_CRSSC_NOMBRE_ADJUNTO SII.CGG_RES_SESION_COMITE.CRSSC_NOMBRE_ADJUNTO%TYPE, 
IN IN_CRSSC_ADJUNTO SII.CGG_RES_SESION_COMITE.CRSSC_ADJUNTO%TYPE, 
IN IN_CRSSC_ESTADO_CONVOCATORIA SII.CGG_RES_SESION_COMITE.CRSSC_ESTADO_CONVOCATORIA%TYPE, 
IN IN_CRSSC_ESTADO SII.CGG_RES_SESION_COMITE.CRSSC_ESTADO%TYPE, 
IN IN_CRSSC_USUARIO_UPDATE SII.CGG_RES_SESION_COMITE.CRSSC_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_SESION_COMITE SET
		CISLA_CODIGO = IN_CISLA_CODIGO, 
		CRCOM_CODIGO = IN_CRCOM_CODIGO, 
		CRSSC_FECHA_REUNION = IN_CRSSC_FECHA_REUNION, 
		CRSSC_FECHA_FINALIZACION = IN_CRSSC_FECHA_FINALIZACION, 
		CRSSC_NUMERO_SESION = IN_CRSSC_NUMERO_SESION, 
		CRSSC_EXTRACTO = IN_CRSSC_EXTRACTO, 
		CRSSC_OBSERVACION = IN_CRSSC_OBSERVACION, 
		CRSSC_FECHA_CONVOCATORIA = IN_CRSSC_FECHA_CONVOCATORIA, 
		CRSSC_MOTIVO_CONVOCATORIA = IN_CRSSC_MOTIVO_CONVOCATORIA, 
		CRSSC_DESCRIPCION_ADJUNTO = IN_CRSSC_DESCRIPCION_ADJUNTO, 
		CRSSC_NOMBRE_ADJUNTO = IN_CRSSC_NOMBRE_ADJUNTO, 
		CRSSC_ADJUNTO = IN_CRSSC_ADJUNTO, 
		CRSSC_ESTADO_CONVOCATORIA = IN_CRSSC_ESTADO_CONVOCATORIA, 
		CRSSC_ESTADO = IN_CRSSC_ESTADO, 
		CRSSC_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRSSC_USUARIO_UPDATE = IN_CRSSC_USUARIO_UPDATE
	WHERE
		CRSSC_CODIGO = IN_CRSSC_CODIGO;
	
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_SESION_COMITE
* @param IN_CRSSC_CODIGO IDENTIFICATIVO UNICO DE REGIsTRO DE SESION
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_SELECT(
IN IN_CRSSC_CODIGO SII.CGG_RES_SESION_COMITE.CRSSC_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRSSC_CODIGO, 
		CISLA_CODIGO, 
		CRCOM_CODIGO, 
		CRSSC_FECHA_REUNION, 
		CRSSC_FECHA_FINALIZACION, 
		CRSSC_NUMERO_SESION, 
		CRSSC_EXTRACTO, 
		CRSSC_OBSERVACION, 
		CRSSC_FECHA_CONVOCATORIA, 
		CRSSC_MOTIVO_CONVOCATORIA, 
		CRSSC_DESCRIPCION_ADJUNTO, 
		CRSSC_NOMBRE_ADJUNTO, 
		NULL,
		CRSSC_ESTADO_CONVOCATORIA, 
		CRSSC_ESTADO, 
		CRSSC_FECHA_INSERT, 
		CRSSC_USUARIO_INSERT, 
		CRSSC_FECHA_UPDATE, 
		CRSSC_USUARIO_UPDATE
	FROM SII.CGG_RES_SESION_COMITE
	WHERE CRSSC_ESTADO = TRUE AND 
		CRSSC_CODIGO = IN_CRSSC_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_SESION_COMITE
* @param IN_CRSSC_CODIGO IDENTIFICATIVO UNICO DE REGIsTRO DE SESION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_DELETE(
IN IN_CRSSC_CODIGO SII.CGG_RES_SESION_COMITE.CRSSC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_SESION_COMITE
	WHERE
		CRSSC_CODIGO = IN_CRSSC_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_SESION_COMITE
* @param IN_CRSSC_CODIGO IDENTIFICATIVO UNICO DE REGIsTRO DE SESION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_DELETE_SOFT(
IN IN_CRSSC_CODIGO SII.CGG_RES_SESION_COMITE.CRSSC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_SESION_COMITE SET
		CRSSC_ESTADO = FALSE
	WHERE
		CRSSC_CODIGO = IN_CRSSC_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_S_CGG_ISLA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SESION_COMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_ISLA.
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_S_CGG_ISLA(
IN IN_CISLA_CODIGO SII.CGG_RES_SESION_COMITE.CISLA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRSSC_CODIGO, 
		CISLA_CODIGO, 
		CRCOM_CODIGO, 
		CRSSC_FECHA_REUNION, 
		CRSSC_FECHA_FINALIZACION, 
		CRSSC_NUMERO_SESION, 
		CRSSC_EXTRACTO, 
		CRSSC_OBSERVACION, 
		CRSSC_FECHA_CONVOCATORIA, 
		CRSSC_MOTIVO_CONVOCATORIA, 
		CRSSC_DESCRIPCION_ADJUNTO, 
		CRSSC_NOMBRE_ADJUNTO, 
		NULL,
		CRSSC_ESTADO_CONVOCATORIA, 
		CRSSC_ESTADO, 
		CRSSC_FECHA_INSERT, 
		CRSSC_USUARIO_INSERT, 
		CRSSC_FECHA_UPDATE, 
		CRSSC_USUARIO_UPDATE
	FROM SII.CGG_RES_SESION_COMITE
	WHERE CRSSC_ESTADO = TRUE AND 
		CISLA_CODIGO = IN_CISLA_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_D_CGG_ISLA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SESION_COMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_ISLA.
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_D_CGG_ISLA(
IN IN_CISLA_CODIGO SII.CGG_RES_SESION_COMITE.CISLA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_SESION_COMITE
	WHERE
		CISLA_CODIGO = IN_CISLA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_D_CGG_ISLA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SESION_COMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_ISLA.
* @param IN_CISLA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ISLA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_DS_CGG_ISLA(
IN IN_CISLA_CODIGO SII.CGG_RES_SESION_COMITE.CISLA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_SESION_COMITE SET
		crssc_estado = false
	WHERE
		CISLA_CODIGO = IN_CISLA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_S_CGG_RES_COMITE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SESION_COMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_COMITE.
* @param IN_CRCOM_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_S_CGG_RES_COMITE(
IN IN_CRCOM_CODIGO SII.CGG_RES_SESION_COMITE.CRCOM_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRSSC_CODIGO, 
		CISLA_CODIGO, 
		CRCOM_CODIGO, 
		CRSSC_FECHA_REUNION, 
		CRSSC_FECHA_FINALIZACION, 
		CRSSC_NUMERO_SESION, 
		CRSSC_EXTRACTO, 
		CRSSC_OBSERVACION, 
		CRSSC_FECHA_CONVOCATORIA, 
		CRSSC_MOTIVO_CONVOCATORIA, 
		CRSSC_DESCRIPCION_ADJUNTO, 
		CRSSC_NOMBRE_ADJUNTO, 
		NULL,
		CRSSC_ESTADO_CONVOCATORIA, 
		CRSSC_ESTADO, 
		CRSSC_FECHA_INSERT, 
		CRSSC_USUARIO_INSERT, 
		CRSSC_FECHA_UPDATE, 
		CRSSC_USUARIO_UPDATE
	FROM SII.CGG_RES_SESION_COMITE
	WHERE CRSSC_ESTADO = TRUE AND 
		CRCOM_CODIGO = IN_CRCOM_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_D_CGG_RES_COMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SESION_COMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_COMITE.
* @param IN_CRCOM_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_D_CGG_RES_COMITE(
IN IN_CRCOM_CODIGO SII.CGG_RES_SESION_COMITE.CRCOM_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_SESION_COMITE
	WHERE
		CRCOM_CODIGO = IN_CRCOM_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_D_CGG_RES_COMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_SESION_COMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_COMITE.
* @param IN_CRCOM_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SESION_COMITE_DS_CGG_RES_COMITE(
IN IN_CRCOM_CODIGO SII.CGG_RES_SESION_COMITE.CRCOM_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_SESION_COMITE SET
		crssc_estado = false
	WHERE
		CRCOM_CODIGO = IN_CRCOM_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_SESION_COMITE
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @param IN_CRCOM_CODIGO CODIGO DEL COMITE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ASISTENCIA_SESION_COMITE_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_CRCOM_CODIGO VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		SC.CRSSC_CODIGO, 
		SC.CISLA_CODIGO, 
		(SELECT CISLA_NOMBRE FROM SII.CGG_ISLA WHERE CISLA_CODIGO = SC.CISLA_CODIGO) ISLA,
		SC.CRCOM_CODIGO, 
		(SELECT CRCOM_NOMBRE FROM SII.CGG_RES_COMITE WHERE CRCOM_CODIGO = SC.CRCOM_CODIGO) COMITE,
		SC.CRSSC_FECHA_REUNION, 
		SC.CRSSC_FECHA_FINALIZACION, 
		SC.CRSSC_NUMERO_SESION, 
		SC.CRSSC_EXTRACTO, 
		SC.CRSSC_OBSERVACION, 
		SC.CRSSC_FECHA_CONVOCATORIA, 
		SC.CRSSC_MOTIVO_CONVOCATORIA, 
		SC.CRSSC_DESCRIPCION_ADJUNTO, 
		SC.CRSSC_NOMBRE_ADJUNTO, 		
		NULL,
		SC.CRSSC_ESTADO_CONVOCATORIA, 
		SC.CRSSC_ESTADO, 
		SC.CRSSC_FECHA_INSERT, 
		SC.CRSSC_USUARIO_INSERT, 
		SC.CRSSC_FECHA_UPDATE, 
		SC.CRSSC_USUARIO_UPDATE
	FROM SII.CGG_RES_SESION_COMITE SC
	INNER JOIN SII.CGG_RES_COMITE CM ON (CM.CRCOM_CODIGO = SC.CRCOM_CODIGO)
	WHERE CRSSC_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(CRSSC_FECHA_REUNION, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_FECHA_FINALIZACION, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_NUMERO_SESION, '''')||'' ''||
	COALESCE(CRSSC_EXTRACTO, '''')||'' ''||
	COALESCE(CRSSC_OBSERVACION, '''')||'' ''||
	COALESCE(CRSSC_FECHA_CONVOCATORIA, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_MOTIVO_CONVOCATORIA, '''')||'' ''||
	COALESCE(CRSSC_DESCRIPCION_ADJUNTO, '''')||'' ''||
	COALESCE(CRSSC_NOMBRE_ADJUNTO, '''')||'' ''||
	COALESCE(CRSSC_ESTADO_CONVOCATORIA, 0)||'' ''||
	COALESCE(CRSSC_ESTADO, FALSE)||'' ''||
	COALESCE(CRSSC_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_USUARIO_INSERT, '''')||'' ''||
	COALESCE(CRSSC_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CRSSC_USUARIO_UPDATE, '''')) = 1
	AND CRSSC_ESTADO_CONVOCATORIA = 3
	AND CM.CRCOM_CODIGO= '''||IN_CRCOM_CODIGO||'''	
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_SESION_COMITE
* @param IN_CRCOM_CODIGO CODIGO DEL COMITE
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ASISTENCIA_SESION_COMITE_COUNT(
IN IN_CRCOM_CODIGO VARCHAR
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_SESION_COMITE SC
	INNER JOIN CGG_RES_COMITE CM ON (CM.CRCOM_CODIGO = SC.CRCOM_CODIGO)
	WHERE CRSSC_ESTADO = TRUE
	AND CRSSC_ESTADO_CONVOCATORIA = 3
	AND CM.CRCOM_CODIGO = IN_CRCOM_CODIGO;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SESION_COMITE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_SESION_COMITE
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @param IN_CRCOM_CODIGO CODIGO DEL COMITE
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ASISTENCIA_SESION_COMITE_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_CRCOM_CODIGO VARCHAR
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_SESION_COMITE SC
	INNER JOIN SII.CGG_RES_COMITE CM ON (CM.CRCOM_CODIGO = SC.CRCOM_CODIGO)
	WHERE CRSSC_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRSSC_FECHA_REUNION, CURRENT_TIMESTAMP)||' '||
	COALESCE(CRSSC_FECHA_FINALIZACION, CURRENT_TIMESTAMP)||' '||COALESCE(CRSSC_NUMERO_SESION, '''')||' '||
	COALESCE(CRSSC_EXTRACTO, '''')||' '||COALESCE(CRSSC_OBSERVACION, '''')||' '||COALESCE(CRSSC_FECHA_CONVOCATORIA, CURRENT_TIMESTAMP)||' '||
	COALESCE(CRSSC_MOTIVO_CONVOCATORIA, '''')||' '||COALESCE(CRSSC_DESCRIPCION_ADJUNTO, '''')||' '||COALESCE(CRSSC_NOMBRE_ADJUNTO, '''')||' '||
	COALESCE(CRSSC_ESTADO_CONVOCATORIA, 0)||' '||COALESCE(CRSSC_ESTADO, FALSE)||' '||COALESCE(CRSSC_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||
	COALESCE(CRSSC_USUARIO_INSERT, '''')||' '||COALESCE(CRSSC_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRSSC_USUARIO_UPDATE, '''')) = 1
		AND CRSSC_ESTADO_CONVOCATORIA = 3
	AND CM.CRCOM_CODIGO = IN_CRCOM_CODIGO;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SC_TRAMITE_VOTOS
* SELECCIONA LOS TRAMITES ASIGNADOS A UNA SESION CON SUS RESPECTIVOS VOTOS
* @param IN_CRSSC_CODIGO CODIGO DE LA SESION
* @param IN_TRAMITES VISUALIZA SOLO TRAMITES
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SC_TRAMITE_VOTOS(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_CRSSC_CODIGO VARCHAR,
IN IN_TRAMITES BOOLEAN
)RETURNS REFCURSOR AS
$$
DECLARE
	TMP_SQL TEXT;
	TMP_REF REFCURSOR;
BEGIN
	
	TMP_SQL = 'SELECT	
		SCM.CRSSC_CODIGO,
		VOT.CRVTO_CODIGO, 
		SSM.CRSMB_CODIGO, 
		RSL.CRRES_CODIGO, 
		COALESCE(PRS.CRPER_NOMBRES,'''')||'' ''||COALESCE(PRS.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PRS.CRPER_APELLIDO_MATERNO,'''') CRPER_NOMBRES,
		CRC.CRCRG_NOMBRE,
		CRC.CRCRG_VOTO_DIRIMENTE,
		VOT.CRVTO_VOTACION CRVTO_VOTACION,
		CASE WHEN COALESCE(CRVTO_VOTACION, -1) = 0 THEN ''APROBADO'' 
			WHEN COALESCE(CRVTO_VOTACION, -1) = 1 THEN ''NEGADO'' 
			WHEN COALESCE(CRVTO_VOTACION, -1) = 2 THEN ''ABSTENCION'' 
			ELSE
				''SIN VOTO''
			END VOTO, 
		TRM.CRTRA_CODIGO,
		USU.CUSU_NOMBRE_USUARIO,
		COALESCE(SL.CISLA_NOMBRE,'''')||'' ''||COALESCE(TRM.CRTRA_ANIO,0)||''-''||COALESCE(CRTRA_NUMERO,0)||'' (''||
			CASE WHEN RSL.CRRES_ESTADO_RESOLUCION = 0 THEN ''En votaci&oacute;n''
				WHEN RSL.CRRES_ESTADO_RESOLUCION = 1 THEN ''Aprobado'' 
				WHEN RSL.CRRES_ESTADO_RESOLUCION = 2 THEN ''Negado''
				WHEN RSL.CRRES_ESTADO_RESOLUCION = 4 THEN ''Anulado''
			END||'')'' TRAMITE,
		COALESCE(RSL.CRRES_NUMERO_RESOLUCION,'''') CRRES_NUMERO,
		COALESCE(RSL.CRRES_EXTRACTO_RESOLUCION,'''') CRRES_EXTRACTO_RESOLUCION,
		RSL.CRRES_ESTADO_RESOLUCION,
		CRVTO_OBSERVACION
	FROM SII.CGG_RES_SESION_COMITE SCM
	INNER JOIN (SELECT CRSMB_CODIGO,CRSSC_CODIGO,CRMBC_CODIGO,CGG_CRMBC_CODIGO,
	CASE WHEN (CGG_CRMBC_CODIGO IS NULL) THEN CRMBC_CODIGO ELSE CGG_CRMBC_CODIGO END CRMBC_CODIGO_TMP,
	CRSMB_PRESIDENTE,CRSMB_PRESENTE,CRMBC_ESTADO FROM SII.CGG_RES_SESION_MIEMBRO) SSM ON SSM.CRSSC_CODIGO = SCM.CRSSC_CODIGO 
	INNER JOIN SII.CGG_RES_MIEMBRO_COMITE MMC ON MMC.CRMBC_CODIGO = SSM.CRMBC_CODIGO_TMP AND CRMBC_ESTADO 
	INNER JOIN SII.CGG_RES_CARGO_COMITE CRC ON CRC.CRCRG_CODIGO = MMC.CRCRG_CODIGO
	INNER JOIN SII.CGG_USUARIO USU ON USU.CUSU_CODIGO = MMC.CUSU_CODIGO
	INNER JOIN SII.CGG_RES_PERSONA PRS ON PRS.CRPER_CODIGO = USU.CRPER_CODIGO
	INNER JOIN SII.CGG_RES_RESOLUCION RSL ON RSL.CRSSC_CODIGO = SCM.CRSSC_CODIGO AND RSL.CRRES_ESTADO
	LEFT JOIN SII.CGG_RES_VOTO VOT ON VOT.CRSMB_CODIGO = SSM.CRSMB_CODIGO AND VOT.CRRES_CODIGO = RSL.CRRES_CODIGO AND VOT.CRVTO_ESTADO
	LEFT JOIN SII.CGG_RES_RESOL_TRAMITE RST ON RST.CRRES_CODIGO = RSL.CRRES_CODIGO
	LEFT JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = RST.CRTRA_CODIGO
	LEFT JOIN SII.CGG_ISLA SL ON SL.CISLA_CODIGO = TRM.CISLA_CODIGO
	WHERE SCM.CRSSC_CODIGO = '||QUOTE_LITERAL(IN_CRSSC_CODIGO)||' AND
		('||IN_TRAMITES||' AND TRM.CRTRA_CODIGO IS NOT NULL OR NOT '||IN_TRAMITES||' AND TRM.CRTRA_CODIGO IS NULL) AND 
		(LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
		COALESCE(PRS.CRPER_NOMBRES,'''')||'' ''||
		COALESCE(PRS.CRPER_APELLIDO_MATERNO,'''')||'' ''||
		COALESCE(PRS.CRPER_APELLIDO_PATERNO,'''')||'' ''||
		COALESCE(COALESCE(TRM.CRTRA_ANIO,0)||''-''||COALESCE(CRTRA_NUMERO,0),'''')||'' ''||
		COALESCE(VOT.CRVTO_OBSERVACION,'''')||'' ''||
		COALESCE(CRC.CRCRG_NOMBRE,'''')||'' ''||
		COALESCE(SL.CISLA_NOMBRE,'''')||'' ''||
		COALESCE(USU.CUSU_NOMBRE_USUARIO,'''')||'' ''||
		COALESCE(RSL.CRRES_EXTRACTO_RESOLUCION,'''')
		) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	OPEN TMP_REF FOR EXECUTE TMP_SQL;
	RETURN TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_SC_TRAMITE_VOTOS_COUNT
* CONTABILIZA LOS TRAMITES ASIGNADOS A UNA SESION CON SUS RESPECTIVOS VOTOS
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @param IN_CRSSC_CODIGO CODIGO DE LA SESION
* @param IN_TRAMITES VISUALIZA SOLO TRAMITES
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_SC_TRAMITE_VOTOS_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_CRSSC_CODIGO VARCHAR,
IN IN_TRAMITES BOOLEAN
)RETURNS INT AS
$$
DECLARE
	OUT_COUNT INT;
BEGIN
	
	SELECT	COUNT(SCM.CRSSC_CODIGO) INTO OUT_COUNT
	FROM SII.CGG_RES_SESION_COMITE SCM
	INNER JOIN SII.CGG_RES_SESION_MIEMBRO SSM ON SSM.CRSSC_CODIGO = SCM.CRSSC_CODIGO
	INNER JOIN SII.CGG_RES_MIEMBRO_COMITE MMC ON MMC.CRMBC_CODIGO = SSM.CRMBC_CODIGO
	INNER JOIN SII.CGG_RES_CARGO_COMITE CRC ON CRC.CRCRG_CODIGO = MMC.CRCRG_CODIGO
	INNER JOIN SII.CGG_USUARIO USU ON USU.CUSU_CODIGO = MMC.CUSU_CODIGO
	INNER JOIN SII.CGG_RES_PERSONA PRS ON PRS.CRPER_CODIGO = USU.CRPER_CODIGO
	INNER JOIN SII.CGG_RES_RESOLUCION RSL ON RSL.CRSSC_CODIGO = SCM.CRSSC_CODIGO AND RSL.CRRES_ESTADO
	LEFT JOIN SII.CGG_RES_VOTO VOT ON VOT.CRSMB_CODIGO = SSM.CRSMB_CODIGO AND VOT.CRRES_CODIGO = RSL.CRRES_CODIGO AND VOT.CRVTO_ESTADO
	LEFT JOIN SII.CGG_RES_RESOL_TRAMITE RST ON RST.CRRES_CODIGO = RSL.CRRES_CODIGO
	LEFT JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = RST.CRTRA_CODIGO
	LEFT JOIN SII.CGG_ISLA SL ON SL.CISLA_CODIGO = TRM.CISLA_CODIGO
	WHERE SCM.CRSSC_CODIGO = IN_CRSSC_CODIGO AND
		(IN_TRAMITES AND TRM.CRTRA_CODIGO IS NOT NULL OR NOT IN_TRAMITES AND TRM.CRTRA_CODIGO IS NULL) AND 
		(LENGTH(IN_FIND_TEXT) = 0 OR SII.F_STRING_IN(IN_FIND_TEXT,
		COALESCE(PRS.CRPER_NOMBRES,'')||' '||
		COALESCE(PRS.CRPER_APELLIDO_MATERNO,'')||' '||
		COALESCE(PRS.CRPER_APELLIDO_PATERNO,'')||' '||
		COALESCE(COALESCE(TRM.CRTRA_ANIO,0)||'-'||COALESCE(CRTRA_NUMERO,0),'')||' '||
		COALESCE(VOT.CRVTO_OBSERVACION,'')||' '||
		COALESCE(USU.CUSU_NOMBRE_USUARIO,'')||' '||
		COALESCE(SL.CISLA_NOMBRE,'')||' '||
		COALESCE(CRC.CRCRG_NOMBRE,'')||' '||
		COALESCE(RSL.CRRES_EXTRACTO_RESOLUCION,'')
		) = 1);
	RETURN OUT_COUNT;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
