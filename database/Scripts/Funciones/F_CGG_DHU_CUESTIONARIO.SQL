/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_DHU_CUESTIONARIO.
* @param IN_CDCST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CUESTIONARIO
* @param IN_CDPRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA PREGUNTA
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION
* @param IN_CDCST_ESTADO ESTADO DEL REGISTRO
* @param IN_CDCST_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CDCST_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_INSERT(
IN IN_CDCST_CODIGO SII.CGG_DHU_CUESTIONARIO.CDCST_CODIGO%TYPE,
IN IN_CDPRG_CODIGO SII.CGG_DHU_CUESTIONARIO.CDPRG_CODIGO%TYPE,
IN IN_CDENC_CODIGO SII.CGG_DHU_CUESTIONARIO.CDENC_CODIGO%TYPE,
IN IN_CDCST_ESTADO SII.CGG_DHU_CUESTIONARIO.CDCST_ESTADO%TYPE,
IN IN_CDCST_USUARIO_INSERT SII.CGG_DHU_CUESTIONARIO.CDCST_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CDCST_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_DHU_CUESTIONARIO','CDCST_CODIGO','CDCST') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CDCST_CODIGO;
	END IF;
	INSERT INTO SII.CGG_DHU_CUESTIONARIO(
		CDCST_CODIGO, 
		CDPRG_CODIGO, 
		CDENC_CODIGO, 
		CDCST_ESTADO, 
		CDCST_FECHA_INSERT, 
		CDCST_USUARIO_INSERT, 
		CDCST_FECHA_UPDATE, 
		CDCST_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CDPRG_CODIGO, 
		IN_CDENC_CODIGO, 
		IN_CDCST_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CDCST_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CDCST_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_DHU_CUESTIONARIO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCST_CODIGO, 
		CDPRG_CODIGO, 
		CDENC_CODIGO, 
		CDCST_ESTADO, 
		CDCST_FECHA_INSERT, 
		CDCST_USUARIO_INSERT, 
		CDCST_FECHA_UPDATE, 
		CDCST_USUARIO_UPDATE
	FROM SII.CGG_DHU_CUESTIONARIO
	WHERE CDCST_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_DHU_CUESTIONARIO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT DISTINCT
		CT.CDCST_CODIGO, 
		CT.CDPRG_CODIGO, 
		PR.CDPRG_DESCRIPCION,
		CT.CDENC_CODIGO, 
		EN.CDENC_NOMBRE,
		CT.CDCST_ESTADO, 
		CT.CDCST_FECHA_INSERT, 
		CT.CDCST_USUARIO_INSERT, 
		CT.CDCST_FECHA_UPDATE, 
		CT.CDCST_USUARIO_UPDATE
	FROM SII.CGG_DHU_CUESTIONARIO CT
	INNER JOIN SII.CGG_DHU_ENCUESTA EN ON (EN.CDENC_CODIGO = CT.CDENC_CODIGO)
	INNER JOIN SII.CGG_DHU_PREGUNTA PR ON (PR.CDPRG_CODIGO = CT.CDPRG_CODIGO)
	INNER JOIN SII.CGG_DHU_PREGUNTA_RESPUESTA PRES ON(PRES.CDPRG_CODIGO = PR.CDPRG_CODIGO)
	WHERE CDCST_ESTADO = TRUE AND
	SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	COALESCE(PR.CDPRG_DESCRIPCION, '' '')||'' ''||
	COALESCE(EN.CDENC_NOMBRE, '' '')||'' ''||
	COALESCE(CT.CDCST_ESTADO, FALSE)||'' ''||
	COALESCE(CT.CDCST_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CT.CDCST_USUARIO_INSERT, '''')||'' ''||
	COALESCE(CT.CDCST_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||
	COALESCE(CT.CDCST_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_CUESTIONARIO.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_CUESTIONARIO CT
	INNER JOIN SII.CGG_DHU_ENCUESTA EN ON (EN.CDENC_CODIGO = CT.CDENC_CODIGO)
	INNER JOIN SII.CGG_DHU_PREGUNTA PR ON (PR.CDPRG_CODIGO = CT.CDPRG_CODIGO)
	WHERE CDCST_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_CUESTIONARIO.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_CUESTIONARIO CT
	INNER JOIN SII.CGG_DHU_ENCUESTA EN ON (EN.CDENC_CODIGO = CT.CDENC_CODIGO)
	INNER JOIN SII.CGG_DHU_PREGUNTA PR ON (PR.CDPRG_CODIGO = CT.CDPRG_CODIGO)
	WHERE CDCST_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,
	COALESCE(PR.CDPRG_DESCRIPCION, '')||' '||
	COALESCE(EN.CDENC_NOMBRE, '')||' '||
	COALESCE(CDCST_ESTADO, FALSE)||' '||
	COALESCE(CDCST_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||
	COALESCE(CDCST_USUARIO_INSERT, '''')||' '||
	COALESCE(CDCST_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||
	COALESCE(CDCST_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA SII.CGG_DHU_CUESTIONARIO.
* @param IN_CDCST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CUESTIONARIO.
* @param IN_CDPRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA PREGUNTA.
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION.
* @param IN_CDCST_ESTADO ESTADO DEL REGISTRO
* @param IN_CDCST_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_UPDATE(
IN IN_CDCST_CODIGO SII.CGG_DHU_CUESTIONARIO.CDCST_CODIGO%TYPE,
IN IN_CDPRG_CODIGO SII.CGG_DHU_CUESTIONARIO.CDPRG_CODIGO%TYPE,
IN IN_CDENC_CODIGO SII.CGG_DHU_CUESTIONARIO.CDENC_CODIGO%TYPE,
IN IN_CDCST_ESTADO SII.CGG_DHU_CUESTIONARIO.CDCST_ESTADO%TYPE,
IN IN_CDCST_USUARIO_UPDATE SII.CGG_DHU_CUESTIONARIO.CDCST_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CUESTIONARIO SET
		CDPRG_CODIGO = IN_CDPRG_CODIGO, 
		CDENC_CODIGO = IN_CDENC_CODIGO, 
		CDCST_ESTADO = IN_CDCST_ESTADO, 
		CDCST_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CDCST_USUARIO_UPDATE = IN_CDCST_USUARIO_UPDATE
	WHERE
		CDCST_CODIGO = IN_CDCST_CODIGO;
END$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_DHU_CUESTIONARIO.
* @param IN_CDCST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CUESTIONARIO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_SELECT(
IN IN_CDCST_CODIGO SII.CGG_DHU_CUESTIONARIO.CDCST_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCST_CODIGO, 
		CDPRG_CODIGO, 
		CDENC_CODIGO, 
		CDCST_ESTADO, 
		CDCST_FECHA_INSERT, 
		CDCST_USUARIO_INSERT, 
		CDCST_FECHA_UPDATE, 
		CDCST_USUARIO_UPDATE
	FROM SII.CGG_DHU_CUESTIONARIO
	WHERE CDCST_ESTADO = TRUE AND 
		CDCST_CODIGO = IN_CDCST_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_DHU_CUESTIONARIO.
* @param IN_CDCST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CUESTIONARIO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_DELETE(
IN IN_CDCST_CODIGO SII.CGG_DHU_CUESTIONARIO.CDCST_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_CUESTIONARIO
	WHERE
		CDCST_CODIGO = IN_CDCST_CODIGO;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_DHU_CUESTIONARIO.
* @param IN_CDCST_CODIGO IDENTIFICATIVO UNICO DE REGISTRO CUESTIONARIO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_DELETE_SOFT(
IN IN_CDCST_CODIGO SII.CGG_DHU_CUESTIONARIO.CDCST_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CUESTIONARIO SET
		CDCST_ESTADO = FALSE
	WHERE
		CDCST_CODIGO = IN_CDCST_CODIGO;
END$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_S_CGG_DHU_ENCUESTA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CUESTIONARIO QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_DHU_ENCUESTA.
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_S_CGG_DHU_ENCUESTA(
IN IN_CDENC_CODIGO SII.CGG_DHU_CUESTIONARIO.CDENC_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCST_CODIGO, 
		CDPRG_CODIGO, 
		CDENC_CODIGO, 
		CDCST_ESTADO, 
		CDCST_FECHA_INSERT, 
		CDCST_USUARIO_INSERT, 
		CDCST_FECHA_UPDATE, 
		CDCST_USUARIO_UPDATE
	FROM SII.CGG_DHU_CUESTIONARIO
	WHERE CDCST_ESTADO = TRUE AND 
		CDENC_CODIGO = IN_CDENC_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_D_CGG_DHU_ENCUESTA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CUESTIONARIO QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_DHU_ENCUESTA.
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_D_CGG_DHU_ENCUESTA(
IN IN_CDENC_CODIGO SII.CGG_DHU_CUESTIONARIO.CDENC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_CUESTIONARIO
	WHERE
		CDENC_CODIGO = IN_CDENC_CODIGO;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_D_CGG_DHU_ENCUESTA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CUESTIONARIO QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_DHU_ENCUESTA.
* @param IN_CDENC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE EVALUACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_DS_CGG_DHU_ENCUESTA(
IN IN_CDENC_CODIGO SII.CGG_DHU_CUESTIONARIO.CDENC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CUESTIONARIO SET
		CDCST_ESTADO = FALSE
	WHERE
		CDENC_CODIGO = IN_CDENC_CODIGO;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_S_CGG_DHU_PREGUNTA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CUESTIONARIO QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_DHU_PREGUNTA.
* @param IN_CDPRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA PREGUNTA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_S_CGG_DHU_PREGUNTA(
IN IN_CDPRG_CODIGO SII.CGG_DHU_CUESTIONARIO.CDPRG_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDCST_CODIGO, 
		CDPRG_CODIGO, 
		CDENC_CODIGO, 
		CDCST_ESTADO, 
		CDCST_FECHA_INSERT, 
		CDCST_USUARIO_INSERT, 
		CDCST_FECHA_UPDATE, 
		CDCST_USUARIO_UPDATE
	FROM SII.CGG_DHU_CUESTIONARIO
	WHERE CDCST_ESTADO = TRUE AND 
		CDPRG_CODIGO = IN_CDPRG_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_D_CGG_DHU_PREGUNTA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CUESTIONARIO QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_DHU_PREGUNTA.
* @param IN_CDPRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA PREGUNTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_D_CGG_DHU_PREGUNTA(
IN IN_CDPRG_CODIGO SII.CGG_DHU_CUESTIONARIO.CDPRG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_CUESTIONARIO
	WHERE
		CDPRG_CODIGO = IN_CDPRG_CODIGO;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_CUESTIONARIO_D_CGG_DHU_PREGUNTA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_CUESTIONARIO QUE ESTAN.
* RELACIONADOS CON LA TABLA SII.CGG_DHU_PREGUNTA.
* @param IN_CDPRG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE LA PREGUNTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_CUESTIONARIO_DS_CGG_DHU_PREGUNTA(
IN IN_CDPRG_CODIGO SII.CGG_DHU_CUESTIONARIO.CDPRG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_CUESTIONARIO SET
		CDCST_ESTADO = FALSE
	WHERE
		CDPRG_CODIGO = IN_CDPRG_CODIGO;
END
$$
LANGUAGE 'PLPGSQL' VOLATILE CALLED ON NULL INPUT;

