/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_INSERT
* SELECCIONA LA INFORMACION DE LA TABLA DE CGG_RES_REQUISITO_TRAMITE.
* @param CRRQT_CODIGO IDENTIFICATIVO UNICO DE REQUISITO DE TRAMITE.
* @param CRTRA_CODIGO IDENTIFICATIVO UNICO DE TRAMITE.
* @param CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REQUISITO DE TRAMITE.
* @param CRRQT_CUMPLE SI CUMPLE O NO EL REQUISITO.
* @param CRRQT_OBSERVACION OBSERVACION DEL REQUISITO.
* @param CRRQT_ESTADO EST5ADO DEL REQUISITO.
* @param CRRQT_USUARIO_INSERT NOMBRE DEL USUARIO QUE INSERTO LOS DATOS.
* @param CRRQT_USUARIO_UPDATE NOMBRE DEL USUARIO QUE ACTUALIZO LOS DATOS.
* @return VARCHAR
*/

CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_INSERT(
IN IN_CRRQT_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_CODIGO%TYPE, 
IN IN_CRTRA_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRTRA_CODIGO%TYPE, 
IN IN_CRSRQ_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRSRQ_CODIGO%TYPE, 
IN IN_CRRQT_CUMPLE SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_CUMPLE%TYPE, 
IN IN_CRRQT_OBSERVACION SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_OBSERVACION%TYPE, 
IN IN_CRRQT_ESTADO SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_ESTADO%TYPE, 
IN IN_CRRQT_USUARIO_INSERT SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_USUARIO_INSERT%TYPE, 
IN IN_CRRQT_USUARIO_UPDATE SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
TMP_REQUERIDO BOOLEAN;
BEGIN
	IF (UPPER(IN_CRRQT_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_REQUISITO_TRAMITE','CRRQT_CODIGO','CRRQT') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRRQT_CODIGO;
	END IF;
	SELECT CRSRQ_REQUERIDO INTO TMP_REQUERIDO FROM CGG_RES_SOLICITUD_REQUISITO WHERE CRSRQ_CODIGO = IN_CRSRQ_CODIGO;
	INSERT INTO SII.CGG_RES_REQUISITO_TRAMITE(
		CRRQT_CODIGO, 
		CRTRA_CODIGO, 
		CRSRQ_CODIGO, 
		CRRQT_REQUERIDO, 
		CRRQT_CUMPLE, 
		CRRQT_OBSERVACION, 
		CRRQT_ESTADO, 
		CRRQT_FECHA_INSERT, 
		CRRQT_USUARIO_INSERT, 
		CRRQT_FECHA_UPDATE, 
		CRRQT_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRTRA_CODIGO, 
		IN_CRSRQ_CODIGO, 
		TMP_REQUERIDO,
		IN_CRRQT_CUMPLE, 
		IN_CRRQT_OBSERVACION, 
		IN_CRRQT_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRRQT_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRRQT_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRRQT_CODIGO, 
		CRTRA_CODIGO, 
		CRSRQ_CODIGO, 
		CRRQT_CUMPLE, 
		CRRQT_OBSERVACION, 
		CRRQT_ESTADO, 
		CRRQT_FECHA_INSERT, 
		CRRQT_USUARIO_INSERT, 
		CRRQT_FECHA_UPDATE, 
		CRRQT_USUARIO_UPDATE
	FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE CRRQT_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRRQT_CODIGO, 
		CRTRA_CODIGO, 
		CRSRQ_CODIGO, 
		CRRQT_CUMPLE, 
		CRRQT_OBSERVACION, 
		CRRQT_ESTADO, 
		CRRQT_FECHA_INSERT, 
		CRRQT_USUARIO_INSERT, 
		CRRQT_FECHA_UPDATE, 
		CRRQT_USUARIO_UPDATE
	FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE CRRQT_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CRRQT_CUMPLE, FALSE)||'' ''||COALESCE(CRRQT_OBSERVACION, '''')||'' ''||COALESCE(CRRQT_ESTADO, FALSE)||'' ''||COALESCE(CRRQT_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRRQT_USUARIO_INSERT, '''')||'' ''||COALESCE(CRRQT_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRRQT_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE CRRQT_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE CRRQT_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRRQT_CUMPLE, FALSE)||' '||COALESCE(CRRQT_OBSERVACION, '''')||' '||COALESCE(CRRQT_ESTADO, FALSE)||' '||COALESCE(CRRQT_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRRQT_USUARIO_INSERT, '''')||' '||COALESCE(CRRQT_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRRQT_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_REQUISITO_TRAMITE
* @param IN_CRRQT_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @param IN_CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUISITO DE SOLICITUD DE TRAMITE
* @param IN_CRRQT_CUMPLE ESTADO DE CONTROL QUE DETERMINA LA INCORPORACION DEL REQUISITO EN EL TRAMITE
* @param IN_CRRQT_OBSERVACION OBSERVACION DEL REQUISITO-
* @param IN_CRRQT_ESTADO ESTADO DEL REGISTRO
* @param IN_CRRQT_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_UPDATE(
IN IN_CRRQT_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_CODIGO%TYPE, 
IN IN_CRTRA_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRTRA_CODIGO%TYPE, 
IN IN_CRSRQ_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRSRQ_CODIGO%TYPE, 
IN IN_CRRQT_CUMPLE SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_CUMPLE%TYPE, 
IN IN_CRRQT_OBSERVACION SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_OBSERVACION%TYPE, 
IN IN_CRRQT_ESTADO SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_ESTADO%TYPE, 
IN IN_CRRQT_USUARIO_UPDATE SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_REQUISITO_TRAMITE SET
		CRTRA_CODIGO = IN_CRTRA_CODIGO, 
		CRSRQ_CODIGO = IN_CRSRQ_CODIGO, 
		CRRQT_CUMPLE = IN_CRRQT_CUMPLE, 
		CRRQT_OBSERVACION = IN_CRRQT_OBSERVACION, 
		CRRQT_ESTADO = IN_CRRQT_ESTADO, 
		CRRQT_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRRQT_USUARIO_UPDATE = IN_CRRQT_USUARIO_UPDATE
	WHERE
		CRRQT_CODIGO = IN_CRRQT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_REQUISITO_TRAMITE
* @param IN_CRRQT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_SELECT(
IN IN_CRRQT_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRRQT_CODIGO, 
		CRTRA_CODIGO, 
		CRSRQ_CODIGO, 
		CRRQT_CUMPLE, 
		CRRQT_OBSERVACION, 
		CRRQT_ESTADO, 
		CRRQT_FECHA_INSERT, 
		CRRQT_USUARIO_INSERT, 
		CRRQT_FECHA_UPDATE, 
		CRRQT_USUARIO_UPDATE
	FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE CRRQT_ESTADO = TRUE AND 
		CRRQT_CODIGO = IN_CRRQT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_REQUISITO_TRAMITE
* @param IN_CRRQT_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_DELETE(
IN IN_CRRQT_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE
		CRRQT_CODIGO = IN_CRRQT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_REQUISITO_TRAMITE
* @param IN_CRRQT_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_DELETE_SOFT(
IN IN_CRRQT_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRRQT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_REQUISITO_TRAMITE SET
		CRRQT_ESTADO = FALSE
	WHERE
		CRRQT_CODIGO = IN_CRRQT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_S_CGG_RES_SOLICITUD_REQUISITO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO.
* @param IN_CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUISITO DE SOLICITUD DE TRAMITE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_S_CGG_RES_SOLICITUD_REQUISITO(
IN IN_CRSRQ_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRSRQ_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRRQT_CODIGO, 
		CRTRA_CODIGO, 
		CRSRQ_CODIGO, 
		CRRQT_CUMPLE, 
		CRRQT_OBSERVACION, 
		CRRQT_ESTADO, 
		CRRQT_FECHA_INSERT, 
		CRRQT_USUARIO_INSERT, 
		CRRQT_FECHA_UPDATE, 
		CRRQT_USUARIO_UPDATE
	FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE CRRQT_ESTADO = TRUE AND 
		CRSRQ_CODIGO = IN_CRSRQ_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_D_CGG_RES_SOLICITUD_REQUISITO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO.
* @param IN_CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUISITO DE SOLICITUD DE TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_D_CGG_RES_SOLICITUD_REQUISITO(
IN IN_CRSRQ_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRSRQ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE
		CRSRQ_CODIGO = IN_CRSRQ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_D_CGG_RES_SOLICITUD_REQUISITO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_SOLICITUD_REQUISITO.
* @param IN_CRSRQ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE REQUISITO DE SOLICITUD DE TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_DS_CGG_RES_SOLICITUD_REQUISITO(
IN IN_CRSRQ_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRSRQ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_REQUISITO_TRAMITE SET
		crrqt_estado = false
	WHERE
		CRSRQ_CODIGO = IN_CRSRQ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_S_CGG_RES_TRAMITE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TRAMITE.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_S_CGG_RES_TRAMITE(
IN IN_CRTRA_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRTRA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRRQT_CODIGO, 
		CRTRA_CODIGO, 
		CRSRQ_CODIGO, 
		CRRQT_CUMPLE, 
		CRRQT_OBSERVACION, 
		CRRQT_ESTADO, 
		CRRQT_FECHA_INSERT, 
		CRRQT_USUARIO_INSERT, 
		CRRQT_FECHA_UPDATE, 
		CRRQT_USUARIO_UPDATE
	FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE CRRQT_ESTADO = TRUE AND 
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_D_CGG_RES_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TRAMITE.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGSITRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_D_CGG_RES_TRAMITE(
IN IN_CRTRA_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRTRA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_REQUISITO_TRAMITE
	WHERE
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_REQUISITO_TRAMITE_D_CGG_RES_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_REQUISITO_TRAMITE QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TRAMITE.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_REQUISITO_TRAMITE_DS_CGG_RES_SOLICITUD_REQUISITO(
IN IN_CRSRQ_CODIGO SII.CGG_RES_REQUISITO_TRAMITE.CRSRQ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_REQUISITO_TRAMITE SET
		crrqt_estado = false
	WHERE
		CRSRQ_CODIGO = IN_CRSRQ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_SELECT_REQUISITOTIPOSOLICITUDTRAMITE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA TIPO_SOLICITUD_REQUISITO Y REQUISITO_TRAMITE CON UN JOIN LEFT PARA QUE SEAN SELECCIONADO O BIEN LO REGISTROS DE REQUISITOS DE LA SOLICITUD DEL TRAMITE O BIEN LOS REQUISITOS DEL TRAMITE.
* @param IN_CRTST_CODIGO CODIGO DE TIPO SOLICITUD DE TRAMITE.
* @param IN_CRTRA_CODIGO CODIGO DE TRAMITE.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_SELECT_REQUISITOTIPOSOLICITUDTRAMITE(
IN 
	IN_CRTST_CODIGO VARCHAR,
	IN_CRTRA_CODIGO VARCHAR	
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;	
BEGIN	 
	IF(IN_CRTRA_CODIGO IS NULL)THEN
		
	OPEN TMP_REF FOR
		SELECT 
		  CGG_RES_SOLICITUD_REQUISITO.CRSRQ_CODIGO,   
		  CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO, 
		  CGG_RES_SOLICITUD_REQUISITO.CRSRQ_DESCRIPCION, 
		  CGG_RES_SOLICITUD_REQUISITO.CRSRQ_REQUERIDO, 
		  CGG_RES_SOLICITUD_REQUISITO.CRSRQ_PARTICIPANTE, 
		  CGG_RES_REQUISITO.CRREQ_CODIGO, 
		  CGG_RES_REQUISITO.CRREQ_DESCRIPCION, 
		  ' ' AS CRTRA_CODIGO, 
		  ' ' AS CRRQT_CODIGO,   		  
		  false AS CRRQT_CUMPLE, 
		  ' ' AS CRRQT_OBSERVACION
		FROM 
		  SII.CGG_RES_SOLICITUD_REQUISITO INNER JOIN SII.CGG_RES_REQUISITO ON (CGG_RES_REQUISITO.CRREQ_CODIGO = CGG_RES_SOLICITUD_REQUISITO.CRREQ_CODIGO)		  
		  WHERE CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO = IN_CRTST_CODIGO;	
	
	ELSE
		OPEN TMP_REF FOR		  		  
		  SELECT 
		  CGG_RES_SOLICITUD_REQUISITO.CRSRQ_CODIGO,   
		  CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO, 
		  CGG_RES_SOLICITUD_REQUISITO.CRSRQ_DESCRIPCION, 
		  CGG_RES_REQUISITO_TRAMITE.CRRQT_REQUERIDO, 
		  CGG_RES_SOLICITUD_REQUISITO.CRSRQ_PARTICIPANTE, 
		  CGG_RES_REQUISITO.CRREQ_CODIGO, 
		  CGG_RES_REQUISITO.CRREQ_DESCRIPCION, 
		  CGG_RES_REQUISITO_TRAMITE.CRTRA_CODIGO, 
		  CGG_RES_REQUISITO_TRAMITE.CRRQT_CODIGO,   		  
		  CGG_RES_REQUISITO_TRAMITE.CRRQT_CUMPLE, 
		  CGG_RES_REQUISITO_TRAMITE.CRRQT_OBSERVACION
		FROM 
		  SII.CGG_RES_SOLICITUD_REQUISITO 
		  INNER JOIN SII.CGG_RES_REQUISITO ON (CGG_RES_REQUISITO.CRREQ_CODIGO = CGG_RES_SOLICITUD_REQUISITO.CRREQ_CODIGO)
		  INNER JOIN SII.CGG_RES_REQUISITO_TRAMITE  ON (CGG_RES_SOLICITUD_REQUISITO.CRSRQ_CODIGO = CGG_RES_REQUISITO_TRAMITE.CRSRQ_CODIGO)
		  WHERE CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO = IN_CRTST_CODIGO OR CGG_RES_REQUISITO_TRAMITE.CRTRA_CODIGO = IN_CRTRA_CODIGO
		  GROUP BY CGG_RES_SOLICITUD_REQUISITO.CRSRQ_CODIGO,   
		  CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO, 
		  CGG_RES_SOLICITUD_REQUISITO.CRSRQ_DESCRIPCION, 
		  CGG_RES_REQUISITO_TRAMITE.CRRQT_REQUERIDO, 
		  CGG_RES_SOLICITUD_REQUISITO.CRSRQ_PARTICIPANTE, 
		  CGG_RES_REQUISITO.CRREQ_CODIGO, 
		  CGG_RES_REQUISITO.CRREQ_DESCRIPCION, 
		  CGG_RES_REQUISITO_TRAMITE.CRTRA_CODIGO, 
		  CGG_RES_REQUISITO_TRAMITE.CRRQT_CODIGO,   		  
		  CGG_RES_REQUISITO_TRAMITE.CRRQT_CUMPLE, 
		  CGG_RES_REQUISITO_TRAMITE.CRRQT_OBSERVACION
		  HAVING CGG_RES_SOLICITUD_REQUISITO.CRTST_CODIGO = IN_CRTST_CODIGO AND  (CGG_RES_REQUISITO_TRAMITE.CRTRA_CODIGO = IN_CRTRA_CODIGO OR CGG_RES_REQUISITO_TRAMITE.CRTRA_CODIGO IS NULL);		  		  		  		  	
	END IF;	 
	RETURN NEXT TMP_REF;	
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

