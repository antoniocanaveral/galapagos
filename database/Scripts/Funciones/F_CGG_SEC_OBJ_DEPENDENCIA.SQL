/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA
* @param IN_CSBJD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DEPENDENCIA
* @param IN_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO DEPENDIENTE
* @param IN_CGG_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO
* @param IN_CSBJD_ESTADO ESTADO DEL REGISTRO
* @param IN_CSBJD_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CSBJD_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_INSERT(
IN IN_CSBJD_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSBJD_CODIGO%TYPE,
IN IN_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSOBJ_CODIGO%TYPE,
IN IN_CGG_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CGG_CSOBJ_CODIGO%TYPE,
IN IN_CSBJD_ESTADO SII.CGG_SEC_OBJ_DEPENDENCIA.CSBJD_ESTADO%TYPE,
IN IN_CSBJD_USUARIO_INSERT SII.CGG_SEC_OBJ_DEPENDENCIA.CSBJD_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CSBJD_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_SEC_OBJ_DEPENDENCIA','CSBJD_CODIGO','CSBJD') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CSBJD_CODIGO;
	END IF;
	INSERT INTO SII.CGG_SEC_OBJ_DEPENDENCIA(
		CSBJD_CODIGO, 
		CSOBJ_CODIGO, 
		CGG_CSOBJ_CODIGO, 
		CSBJD_ESTADO, 
		CSBJD_FECHA_INSERT, 
		CSBJD_USUARIO_INSERT, 
		CSBJD_FECHA_UPDATE, 
		CSBJD_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CSOBJ_CODIGO, 
		IN_CGG_CSOBJ_CODIGO, 
		IN_CSBJD_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CSBJD_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CSBJD_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE OBJETO.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_SELECT_AS(
IN IN_USER_NAME VARCHAR,
IN IN_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSOBJ_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CSBJD_CODIGO, 
		CSOBJ_CODIGO, 
		CGG_CSOBJ_CODIGO, 
		CSBJD_ESTADO, 
		CSBJD_FECHA_INSERT, 
		CSBJD_USUARIO_INSERT, 
		CSBJD_FECHA_UPDATE, 
		CSBJD_USUARIO_UPDATE
	FROM SII.CGG_SEC_OBJ_DEPENDENCIA
	WHERE CSBJD_ESTADO AND (IN_CSOBJ_CODIGO IS NULL OR LENGTH(IN_CSOBJ_CODIGO) OR CSOBJ_CODIGO = IN_CSOBJ_CODIGO);
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @param IN_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE OBJETO.
* @param IN_TYPE_OBJETC TIPO DE OBJETOS DEL SISTEMA. 0 - INTERFACE VISUAL, 1 - SERVICIOS WEB
* @param IN_SW VERIFICADOR DE VISUALIZACION.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_CSOBJ_CODIGO VARCHAR,
IN IN_TYPE_OBJECT INT,
IN IN_SW BOOLEAN
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
	TMP_SQL VARCHAR;
BEGIN
	IF (IN_SW) THEN
		TMP_SQL := 'SELECT
			BJ.CSOBJ_CODIGO, 
			BJ.CSOBJ_NOMBRE, 
			BJ.CSOBJ_RUTA, 
			BJ.CSOBJ_DESCRIPCION
		FROM SII.CGG_SEC_OBJETO BJ 
		WHERE CSOBJ_ESTADO AND 
			BJ.CSOBJ_TIPO = '||IN_TYPE_OBJECT||' AND 
			BJ.CSOBJ_CODIGO != '||QUOTE_LITERAL(IN_CSOBJ_CODIGO)||' AND 
			CSOBJ_CODIGO NOT IN (SELECT CGG_CSOBJ_CODIGO FROM SII.CGG_SEC_OBJ_DEPENDENCIA BJD WHERE BJD.CSOBJ_CODIGO = '||QUOTE_LITERAL(IN_CSOBJ_CODIGO)||') AND 
			SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(BJ.CSOBJ_NOMBRE,'''')||'' ''||COALESCE(BJ.CSOBJ_RUTA,'''')) = 1 
		ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
		' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	ELSE
		TMP_SQL := 'SELECT
			BJD.CSBJD_CODIGO, 
			BJD.CSOBJ_CODIGO, 
			BJD.CGG_CSOBJ_CODIGO, 
			BJ.CSOBJ_NOMBRE, 
			BJ.CSOBJ_RUTA, 
			BJ.CSOBJ_DESCRIPCION, 
			BJD.CSBJD_ESTADO, 
			BJD.CSBJD_FECHA_INSERT, 
			BJD.CSBJD_USUARIO_INSERT, 
			BJD.CSBJD_FECHA_UPDATE, 
			BJD.CSBJD_USUARIO_UPDATE
		FROM SII.CGG_SEC_OBJ_DEPENDENCIA BJD
		INNER JOIN SII.CGG_SEC_OBJETO BJ ON BJ.CSOBJ_TIPO = '||IN_TYPE_OBJECT||' AND BJ.CSOBJ_CODIGO = BJD.CGG_CSOBJ_CODIGO 
		WHERE CSBJD_ESTADO AND 
			BJD.CSOBJ_CODIGO = '||QUOTE_LITERAL(IN_CSOBJ_CODIGO)||' AND 
			SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(BJ.CSOBJ_NOMBRE,'''')||'' ''||COALESCE(BJ.CSOBJ_RUTA,'''')) = 1 
		ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
		' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	END IF;
	OPEN TMP_REF FOR EXECUTE
		TMP_SQL;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_SEC_OBJ_DEPENDENCIA
	WHERE CSBJD_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_CSOBJ_CODIGO VARCHAR,
IN IN_TYPE_OBJECT INT,
IN IN_SW BOOLEAN
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	IF (IN_SW) THEN
		SELECT COUNT(BJ.CSOBJ_CODIGO) INTO TMP_ROWS
		FROM SII.CGG_SEC_OBJETO BJ 
		WHERE CSOBJ_ESTADO AND 
			BJ.CSOBJ_TIPO = IN_TYPE_OBJECT AND 
			CSOBJ_CODIGO NOT IN (SELECT CGG_CSOBJ_CODIGO FROM SII.CGG_SEC_OBJ_DEPENDENCIA BJD WHERE BJD.CSOBJ_CODIGO = IN_CSOBJ_CODIGO) AND 
			SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(BJ.CSOBJ_NOMBRE,'')||' '||COALESCE(BJ.CSOBJ_RUTA,'')) = 1;
	ELSE
		SELECT COUNT(*) INTO TMP_ROWS
		FROM SII.CGG_SEC_OBJ_DEPENDENCIA BJD
		INNER JOIN SII.CGG_SEC_OBJETO BJ ON BJ.CSOBJ_TIPO = IN_TYPE_OBJECT AND BJ.CSOBJ_CODIGO = BJD.CGG_CSOBJ_CODIGO
		WHERE CSBJD_ESTADO AND 
			BJD.CSOBJ_CODIGO = IN_CSOBJ_CODIGO AND
			SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(BJ.CSOBJ_NOMBRE,'')||' '||COALESCE(BJ.CSOBJ_RUTA,'')) = 1;
	END IF;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_SEC_OBJ_DEPENDENCIA
* @param IN_CSBJD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DEPENDENCIA
* @param IN_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO DEPENDIENTE
* @param IN_CGG_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO
* @param IN_CSBJD_ESTADO ESTADO DEL REGISTRO
* @param IN_CSBJD_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_UPDATE(
IN IN_CSBJD_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSBJD_CODIGO%TYPE,
IN IN_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSOBJ_CODIGO%TYPE,
IN IN_CGG_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CGG_CSOBJ_CODIGO%TYPE,
IN IN_CSBJD_ESTADO SII.CGG_SEC_OBJ_DEPENDENCIA.CSBJD_ESTADO%TYPE,
IN IN_CSBJD_USUARIO_UPDATE SII.CGG_SEC_OBJ_DEPENDENCIA.CSBJD_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_SEC_OBJ_DEPENDENCIA SET
		CSOBJ_CODIGO = IN_CSOBJ_CODIGO, 
		CGG_CSOBJ_CODIGO = IN_CGG_CSOBJ_CODIGO, 
		CSBJD_ESTADO = IN_CSBJD_ESTADO, 
		CSBJD_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CSBJD_USUARIO_UPDATE = IN_CSBJD_USUARIO_UPDATE
	WHERE
		CSBJD_CODIGO = IN_CSBJD_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA
* @param IN_CSBJD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DEPENDENCIA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_SELECT(
IN IN_CSBJD_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSBJD_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CSBJD_CODIGO, 
		CSOBJ_CODIGO, 
		CGG_CSOBJ_CODIGO, 
		CSBJD_ESTADO, 
		CSBJD_FECHA_INSERT, 
		CSBJD_USUARIO_INSERT, 
		CSBJD_FECHA_UPDATE, 
		CSBJD_USUARIO_UPDATE
	FROM SII.CGG_SEC_OBJ_DEPENDENCIA
	WHERE CSBJD_ESTADO = TRUE AND 
		CSBJD_CODIGO = IN_CSBJD_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA
* @param IN_CSBJD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DEPENDENCIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_DELETE(
IN IN_CSBJD_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSBJD_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_SEC_OBJ_DEPENDENCIA
	WHERE
		CSBJD_CODIGO = IN_CSBJD_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA
* @param IN_CSBJD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE DEPENDENCIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_DELETE_SOFT(
IN IN_CSBJD_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSBJD_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_SEC_OBJ_DEPENDENCIA SET
		CSBJD_ESTADO = FALSE
	WHERE
		CSBJD_CODIGO = IN_CSBJD_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_S_CGG_SEC_OBJETO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SEC_OBJETO.
* @param IN_CGG_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO
* @param IN_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO DEPENDIENTE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_S_CGG_SEC_OBJETO(
IN IN_CGG_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CGG_CSOBJ_CODIGO%TYPE, 
IN IN_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSOBJ_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CSBJD_CODIGO, 
		CSOBJ_CODIGO, 
		CGG_CSOBJ_CODIGO, 
		CSBJD_ESTADO, 
		CSBJD_FECHA_INSERT, 
		CSBJD_USUARIO_INSERT, 
		CSBJD_FECHA_UPDATE, 
		CSBJD_USUARIO_UPDATE
	FROM SII.CGG_SEC_OBJ_DEPENDENCIA
	WHERE CSBJD_ESTADO = TRUE AND 
		CGG_CSOBJ_CODIGO = IN_CGG_CSOBJ_CODIGO AND 
		CSOBJ_CODIGO = IN_CSOBJ_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_D_CGG_SEC_OBJETO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SEC_OBJETO.
* @param IN_CGG_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO
* @param IN_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO DEPENDIENTE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_D_CGG_SEC_OBJETO(
IN IN_CGG_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CGG_CSOBJ_CODIGO%TYPE, 
IN IN_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSOBJ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_SEC_OBJ_DEPENDENCIA
	WHERE
		CGG_CSOBJ_CODIGO = IN_CGG_CSOBJ_CODIGO AND 
		CSOBJ_CODIGO = IN_CSOBJ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SEC_OBJ_DEPENDENCIA_D_CGG_SEC_OBJETO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_SEC_OBJ_DEPENDENCIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SEC_OBJETO.
* @param IN_CGG_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO
* @param IN_CSOBJ_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE OBJETO DEPENDIENTE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SEC_OBJ_DEPENDENCIA_DS_CGG_SEC_OBJETO(
IN IN_CGG_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CGG_CSOBJ_CODIGO%TYPE, 
IN IN_CSOBJ_CODIGO SII.CGG_SEC_OBJ_DEPENDENCIA.CSOBJ_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_SEC_OBJ_DEPENDENCIA SET
		csbjd_estado = false
	WHERE
		CGG_CSOBJ_CODIGO = IN_CGG_CSOBJ_CODIGO AND 
		CSOBJ_CODIGO = IN_CSOBJ_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

