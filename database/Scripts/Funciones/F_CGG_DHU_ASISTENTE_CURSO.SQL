/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_DHU_ASISTENTE_CURSO.
* @param IN_CDASC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ASISTENTES 
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO SECTOR PRODUCTIVO
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CDASC_ACTIVIDAD_REALIZADA ACTIVIDAD QUE SE HALLA REALIZANDO ACTUALMENTE
* @param IN_CDASC_NOTA_FINAL NOTA FINAL DEL CURSO RECIBIDO
* @param IN_CDASC_NUMERO_CERTIFICADO NUMERO DE CERTIFICADO
* @param IN_CDASC_FECHA_EMISION_CERTIFICADO CAMPO QUE REGISTRA LA EMISION DEL CERTIFICADO DEL CURSO
* @param IN_CDASC_ESTADO_INSCRIPCION ESTADO QUE IDENTIFICA LA INSCRIPCION AL CURSO
0 - PRE INSCRITO
1 - INSCRITO
* @param IN_CDASC_APROBADO ESTADO QUE DETERMINA SI LA PERSONA APROBO EL CURSO
0 - REPROBADO
1 - APROBADO
2 - RETIRADO
* @param IN_CDASC_ESTADO ESTADO DEL REGISTRO 

* @param IN_CDASC_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CDASC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_INSERT(
IN IN_CDASC_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CRPER_CODIGO%TYPE, 
IN IN_CDCUR_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDCUR_CODIGO%TYPE, 
IN IN_CSCTP_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CSCTP_CODIGO%TYPE, 
IN IN_CUSU_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CUSU_CODIGO%TYPE, 
IN IN_CDASC_ACTIVIDAD_REALIZADA SII.CGG_DHU_ASISTENTE_CURSO.CDASC_ACTIVIDAD_REALIZADA%TYPE, 
IN IN_CDASC_NOTA_FINAL SII.CGG_DHU_ASISTENTE_CURSO.CDASC_NOTA_FINAL%TYPE, 
IN IN_CDASC_NUMERO_CERTIFICADO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_NUMERO_CERTIFICADO%TYPE, 
IN IN_CDASC_FECHA_EMISION_CERTIFICADO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_FECHA_EMISION_CERTIFICADO%TYPE, 
IN IN_CDASC_ESTADO_INSCRIPCION SII.CGG_DHU_ASISTENTE_CURSO.CDASC_ESTADO_INSCRIPCION%TYPE, 
IN IN_CDASC_APROBADO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_APROBADO%TYPE, 
IN IN_CDASC_ESTADO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_ESTADO%TYPE, 
IN IN_CDASC_USUARIO_INSERT SII.CGG_DHU_ASISTENTE_CURSO.CDASC_USUARIO_INSERT%TYPE, 
IN IN_CDASC_USUARIO_UPDATE SII.CGG_DHU_ASISTENTE_CURSO.CDASC_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
TMP_COUNT INT;
BEGIN
	SELECT COUNT(IN_CRPER_CODIGO) INTO TMP_COUNT FROM SII.CGG_DHU_ASISTENTE_CURSO WHERE CDASC_ESTADO=TRUE AND CRPER_CODIGO= IN_CRPER_CODIGO AND CDCUR_CODIGO=IN_CDCUR_CODIGO;
	IF (TMP_COUNT > 0) THEN
		RAISE EXCEPTION 'No se puede inscribir al mismo curso mas de una ves.';
	END IF;
	IF (UPPER(IN_CDASC_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_DHU_ASISTENTE_CURSO','CDASC_CODIGO','CDASC') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CDASC_CODIGO;
	END IF;
	INSERT INTO SII.CGG_DHU_ASISTENTE_CURSO(
		CDASC_CODIGO, 
		CRPER_CODIGO, 
		CDCUR_CODIGO, 
		CSCTP_CODIGO, 
		CUSU_CODIGO, 
		CDASC_ACTIVIDAD_REALIZADA, 
		CDASC_NOTA_FINAL, 
		CDASC_NUMERO_CERTIFICADO, 
		CDASC_FECHA_EMISION_CERTIFICADO, 
		CDASC_ESTADO_INSCRIPCION, 
		CDASC_APROBADO, 
		CDASC_ESTADO, 
		CDASC_FECHA_INSERT, 
		CDASC_USUARIO_INSERT, 
		CDASC_FECHA_UPDATE, 
		CDASC_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRPER_CODIGO, 
		IN_CDCUR_CODIGO, 
		IN_CSCTP_CODIGO, 
		IN_CUSU_CODIGO, 
		IN_CDASC_ACTIVIDAD_REALIZADA, 
		IN_CDASC_NOTA_FINAL, 
		IN_CDASC_NUMERO_CERTIFICADO, 
		IN_CDASC_FECHA_EMISION_CERTIFICADO, 
		IN_CDASC_ESTADO_INSCRIPCION, 
		IN_CDASC_APROBADO, 
		IN_CDASC_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CDASC_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CDASC_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_SELECT_AS(
IN IN_USER_NAME varchar(50)
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDASC_CODIGO, 
		CRPER_CODIGO, 
		CDCUR_CODIGO, 
		CSCTP_CODIGO, 
		CUSU_CODIGO, 
		CDASC_ACTIVIDAD_REALIZADA, 
		CDASC_NOTA_FINAL, 
		CDASC_NUMERO_CERTIFICADO, 
		CDASC_FECHA_EMISION_CERTIFICADO, 
		CDASC_ESTADO_INSCRIPCION, 
		CDASC_APROBADO, 
		CDASC_ESTADO, 
		CDASC_FECHA_INSERT, 
		CDASC_USUARIO_INSERT, 
		CDASC_FECHA_UPDATE, 
		CDASC_USUARIO_UPDATE
	FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE CDASC_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO__SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_SELECT(
IN IN_USER_NAME varchar(50),
IN IN_START_INDEX int,
IN IN_LIMIT int,
IN IN_SORT_FIELD_NAME varchar,
IN IN_DIRECTION varchar,
IN IN_FIND_TEXT text
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CDASC_CODIGO, 
		CRPER_CODIGO, 
		CDCUR_CODIGO, 
		CSCTP_CODIGO, 
		CUSU_CODIGO, 
		CDASC_ACTIVIDAD_REALIZADA, 
		CDASC_NOTA_FINAL, 
		CDASC_NUMERO_CERTIFICADO, 
		CDASC_FECHA_EMISION_CERTIFICADO, 
		CDASC_ESTADO_INSCRIPCION, 
		CDASC_APROBADO, 
		CDASC_ESTADO, 
		CDASC_FECHA_INSERT, 
		CDASC_USUARIO_INSERT, 
		CDASC_FECHA_UPDATE, 
		CDASC_USUARIO_UPDATE
	FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE CDASC_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',CASE WHEN CDASC_CODIGO IS NULL THEN '''' ELSE CDASC_CODIGO END ||'' ''||CASE WHEN CRPER_CODIGO IS NULL THEN '''' ELSE CRPER_CODIGO END ||'' ''||CASE WHEN CDCUR_CODIGO IS NULL THEN '''' ELSE CDCUR_CODIGO END ||'' ''||CASE WHEN CSCTP_CODIGO IS NULL THEN '''' ELSE CSCTP_CODIGO END ||'' ''||CASE WHEN CUSU_CODIGO IS NULL THEN '''' ELSE CUSU_CODIGO END ||'' ''||CASE WHEN CDASC_ACTIVIDAD_REALIZADA IS NULL THEN '''' ELSE CDASC_ACTIVIDAD_REALIZADA END ||'' ''||CASE WHEN CDASC_NOTA_FINAL IS NULL THEN 0 ELSE CDASC_NOTA_FINAL END ||'' ''||CASE WHEN CDASC_NUMERO_CERTIFICADO IS NULL THEN '''' ELSE CDASC_NUMERO_CERTIFICADO END ||'' ''||CASE WHEN CDASC_FECHA_EMISION_CERTIFICADO IS NULL THEN CURRENT_TIMESTAMP ELSE CDASC_FECHA_EMISION_CERTIFICADO END ||'' ''||CASE WHEN CDASC_ESTADO_INSCRIPCION IS NULL THEN 0 ELSE CDASC_ESTADO_INSCRIPCION END ||'' ''||CASE WHEN CDASC_APROBADO IS NULL THEN 0 ELSE CDASC_APROBADO END ||'' ''||CASE WHEN CDASC_ESTADO IS NULL THEN FALSE ELSE CDASC_ESTADO END ||'' ''||CASE WHEN CDASC_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CDASC_FECHA_INSERT END ||'' ''||CASE WHEN CDASC_USUARIO_INSERT IS NULL THEN '''' ELSE CDASC_USUARIO_INSERT END ||'' ''||CASE WHEN CDASC_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CDASC_FECHA_UPDATE END ||'' ''||CASE WHEN CDASC_USUARIO_UPDATE IS NULL THEN '''' ELSE CDASC_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE CDASC_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO.
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_ASISTENTE_CURSO AC
   INNER JOIN SII.CGG_DHU_CURSO CR ON(AC.CDCUR_CODIGO=CR.CDCUR_CODIGO)
   INNER JOIN SII.CGG_RES_PERSONA PER ON(PER.CRPER_CODIGO=AC.CRPER_CODIGO)
   INNER JOIN SII.CGG_SECTOR_PRODUCTIVO SP ON(SP.CSCTP_CODIGO=AC.CSCTP_CODIGO)							
   INNER JOIN SII.CGG_RES_RESIDENCIA RS ON (RS.CRPER_CODIGO = PER.CRPER_CODIGO)
   INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON (TST.CRTST_CODIGO = RS.CRTST_CODIGO)	
   LEFT JOIN SII.CGG_RES_DOCUMENTO_IDENTIFICACIO TDI ON(TDI.CRDID_CODIGO=PER.CRDID_CODIGO)
   LEFT JOIN SII.CGG_RES_TRAMITE TRA ON(TRA.CRTRA_CODIGO=RS.CRTRA_CODIGO)
	WHERE AC.CDASC_ESTADO= TRUE 
	AND RS.CRRSD_VIGENTE = TRUE 
--	FROM SII.CGG_DHU_ASISTENTE_CURSO
	 AND --SII.F_STRING_IN(IN_FIND_TEXT,CASE WHEN CDASC_CODIGO IS NULL THEN '''' ELSE CDASC_CODIGO END ||' '||CASE WHEN CRPER_CODIGO IS NULL THEN '''' ELSE CRPER_CODIGO END ||' '||CASE WHEN CDCUR_CODIGO IS NULL THEN '''' ELSE CDCUR_CODIGO END ||' '||CASE WHEN CSCTP_CODIGO IS NULL THEN '''' ELSE CSCTP_CODIGO END ||' '||CASE WHEN CUSU_CODIGO IS NULL THEN '''' ELSE CUSU_CODIGO END ||' '||CASE WHEN CDASC_ACTIVIDAD_REALIZADA IS NULL THEN '''' ELSE CDASC_ACTIVIDAD_REALIZADA END ||' '||CASE WHEN CDASC_NOTA_FINAL IS NULL THEN 0 ELSE CDASC_NOTA_FINAL END ||' '||CASE WHEN CDASC_NUMERO_CERTIFICADO IS NULL THEN '''' ELSE CDASC_NUMERO_CERTIFICADO END ||' '||CASE WHEN CDASC_FECHA_EMISION_CERTIFICADO IS NULL THEN CURRENT_TIMESTAMP ELSE CDASC_FECHA_EMISION_CERTIFICADO END ||' '||CASE WHEN CDASC_ESTADO_INSCRIPCION IS NULL THEN 0 ELSE CDASC_ESTADO_INSCRIPCION END ||' '||CASE WHEN CDASC_APROBADO IS NULL THEN 0 ELSE CDASC_APROBADO END ||' '||CASE WHEN CDASC_ESTADO IS NULL THEN FALSE ELSE CDASC_ESTADO END ||' '||CASE WHEN CDASC_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CDASC_FECHA_INSERT END ||' '||CASE WHEN CDASC_USUARIO_INSERT IS NULL THEN '''' ELSE CDASC_USUARIO_INSERT END ||' '||CASE WHEN CDASC_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CDASC_FECHA_UPDATE END ||' '||CASE WHEN CDASC_USUARIO_UPDATE IS NULL THEN '''' ELSE CDASC_USUARIO_UPDATE END ) = 1;
	SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CR.CDCUR_DESCRIPCION, '''')||' '||COALESCE(PER.CRPER_NUM_DOC_IDENTIFIC, '''')||' '||COALESCE(PER.CRPER_NOMBRES, '''')||' '||COALESCE(PER.CRPER_APELLIDO_PATERNO, '''')||' '||COALESCE(PER.CRPER_APELLIDO_MATERNO, '''')||' '||COALESCE(CDASC_ACTIVIDAD_REALIZADA, '''')||' '||COALESCE(CDASC_NOTA_FINAL, 0)||' '||COALESCE(CDASC_NUMERO_CERTIFICADO, '''')||' '||COALESCE(CDASC_FECHA_EMISION_CERTIFICADO, CURRENT_TIMESTAMP)||' '||COALESCE(CDASC_ESTADO_INSCRIPCION, 0)||' '||COALESCE(CDASC_APROBADO, 0)||' '||COALESCE(CDASC_ESTADO, FALSE)||' '||COALESCE(CDASC_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CDASC_USUARIO_INSERT, '''')||' '||COALESCE(CDASC_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CDASC_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_DHU_ASISTENTE_CURSO.
* @param IN_CDASC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ASISTENTES 
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO SECTOR PRODUCTIVO
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CDASC_ACTIVIDAD_REALIZADA ACTIVIDAD QUE SE HALLA REALIZANDO ACTUALMENTE
* @param IN_CDASC_NOTA_FINAL NOTA FINAL DEL CURSO RECIBIDO
* @param IN_CDASC_NUMERO_CERTIFICADO NUMERO DE CERTIFICADO
* @param IN_CDASC_FECHA_EMISION_CERTIFICADO CAMPO QUE REGISTRA LA EMISION DEL CERTIFICADO DEL CURSO
* @param IN_CDASC_ESTADO_INSCRIPCION ESTADO QUE IDENTIFICA LA INSCRIPCION AL CURSO
0 - PRE INSCRITO
1 - INSCRITO
* @param IN_CDASC_APROBADO ESTADO QUE DETERMINA SI LA PERSONA APROBO EL CURSO
0 - REPROBADO
1 - APROBADO
2 - RETIRADO
* @param IN_CDASC_ESTADO ESTADO DEL REGISTRO 
* @param IN_CDASC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_UPDATE(
IN IN_CDASC_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CRPER_CODIGO%TYPE, 
IN IN_CDCUR_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDCUR_CODIGO%TYPE, 
IN IN_CSCTP_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CSCTP_CODIGO%TYPE, 
IN IN_CUSU_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CUSU_CODIGO%TYPE, 
IN IN_CDASC_ACTIVIDAD_REALIZADA SII.CGG_DHU_ASISTENTE_CURSO.CDASC_ACTIVIDAD_REALIZADA%TYPE, 
IN IN_CDASC_NOTA_FINAL SII.CGG_DHU_ASISTENTE_CURSO.CDASC_NOTA_FINAL%TYPE, 
IN IN_CDASC_NUMERO_CERTIFICADO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_NUMERO_CERTIFICADO%TYPE, 
IN IN_CDASC_FECHA_EMISION_CERTIFICADO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_FECHA_EMISION_CERTIFICADO%TYPE, 
IN IN_CDASC_ESTADO_INSCRIPCION SII.CGG_DHU_ASISTENTE_CURSO.CDASC_ESTADO_INSCRIPCION%TYPE, 
IN IN_CDASC_APROBADO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_APROBADO%TYPE, 
IN IN_CDASC_ESTADO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_ESTADO%TYPE, 
IN IN_CDASC_USUARIO_UPDATE SII.CGG_DHU_ASISTENTE_CURSO.CDASC_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_ASISTENTE_CURSO SET
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CDCUR_CODIGO = IN_CDCUR_CODIGO, 
		CSCTP_CODIGO = IN_CSCTP_CODIGO, 
		CUSU_CODIGO = IN_CUSU_CODIGO, 
		CDASC_ACTIVIDAD_REALIZADA = IN_CDASC_ACTIVIDAD_REALIZADA, 
		CDASC_NOTA_FINAL = IN_CDASC_NOTA_FINAL, 
		CDASC_NUMERO_CERTIFICADO = IN_CDASC_NUMERO_CERTIFICADO, 
		CDASC_FECHA_EMISION_CERTIFICADO = IN_CDASC_FECHA_EMISION_CERTIFICADO, 
		CDASC_ESTADO_INSCRIPCION = IN_CDASC_ESTADO_INSCRIPCION, 
		CDASC_APROBADO = IN_CDASC_APROBADO, 
		CDASC_ESTADO = IN_CDASC_ESTADO, 
		CDASC_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CDASC_USUARIO_UPDATE = IN_CDASC_USUARIO_UPDATE
	WHERE
		CDASC_CODIGO = IN_CDASC_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_DHU_ASISTENTE_CURSO.
* @param IN_CDASC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ASISTENTES 
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_SELECT(
IN IN_CDASC_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDASC_CODIGO, 
		CRPER_CODIGO, 
		CDCUR_CODIGO, 
		CSCTP_CODIGO, 
		CUSU_CODIGO, 
		CDASC_ACTIVIDAD_REALIZADA, 
		CDASC_NOTA_FINAL, 
		CDASC_NUMERO_CERTIFICADO, 
		CDASC_FECHA_EMISION_CERTIFICADO, 
		CDASC_ESTADO_INSCRIPCION, 
		CDASC_APROBADO, 
		CDASC_ESTADO, 
		CDASC_FECHA_INSERT, 
		CDASC_USUARIO_INSERT, 
		CDASC_FECHA_UPDATE, 
		CDASC_USUARIO_UPDATE
	FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE CDASC_ESTADO = TRUE AND 
		CDASC_CODIGO = IN_CDASC_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_DHU_ASISTENTE_CURSO.
* @param IN_CDASC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ASISTENTES 
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_DELETE(
IN IN_CDASC_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE
		CDASC_CODIGO = IN_CDASC_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_DHU_ASISTENTE_CURSO.
* @param IN_CDASC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO ASISTENTES 
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_DELETE_SOFT(
IN IN_CDASC_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDASC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_ASISTENTE_CURSO SET
		CDASC_ESTADO = FALSE
	WHERE
		CDASC_CODIGO = IN_CDASC_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_S_CGG_RES_PERSONA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_S_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDASC_CODIGO, 
		CRPER_CODIGO, 
		CDCUR_CODIGO, 
		CSCTP_CODIGO, 
		CUSU_CODIGO, 
		CDASC_ACTIVIDAD_REALIZADA, 
		CDASC_NOTA_FINAL, 
		CDASC_NUMERO_CERTIFICADO, 
		CDASC_FECHA_EMISION_CERTIFICADO, 
		CDASC_ESTADO_INSCRIPCION, 
		CDASC_APROBADO, 
		CDASC_ESTADO, 
		CDASC_FECHA_INSERT, 
		CDASC_USUARIO_INSERT, 
		CDASC_FECHA_UPDATE, 
		CDASC_USUARIO_UPDATE
	FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE CDASC_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_DS_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_ASISTENTE_CURSO SET
		cdasc_estado = false
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_S_CGG_DHU_CURSO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CURSO.
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_S_CGG_DHU_CURSO(
IN IN_CDCUR_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDCUR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDASC_CODIGO, 
		CRPER_CODIGO, 
		CDCUR_CODIGO, 
		CSCTP_CODIGO, 
		CUSU_CODIGO, 
		CDASC_ACTIVIDAD_REALIZADA, 
		CDASC_NOTA_FINAL, 
		CDASC_NUMERO_CERTIFICADO, 
		CDASC_FECHA_EMISION_CERTIFICADO, 
		CDASC_ESTADO_INSCRIPCION, 
		CDASC_APROBADO, 
		CDASC_ESTADO, 
		CDASC_FECHA_INSERT, 
		CDASC_USUARIO_INSERT, 
		CDASC_FECHA_UPDATE, 
		CDASC_USUARIO_UPDATE
	FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE CDASC_ESTADO = TRUE AND 
		CDCUR_CODIGO = IN_CDCUR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_DHU_CURSO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CURSO.
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_DHU_CURSO(
IN IN_CDCUR_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDCUR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE
		CDCUR_CODIGO = IN_CDCUR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_DHU_CURSO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CURSO.
* @param IN_CDCUR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE CURSO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_DS_CGG_DHU_CURSO(
IN IN_CDCUR_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CDCUR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_ASISTENTE_CURSO SET
		cdasc_estado = false
	WHERE
		CDCUR_CODIGO = IN_CDCUR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_S_CGG_USUARIO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_USUARIO.
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_S_CGG_USUARIO(
IN IN_CUSU_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CUSU_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDASC_CODIGO, 
		CRPER_CODIGO, 
		CDCUR_CODIGO, 
		CSCTP_CODIGO, 
		CUSU_CODIGO, 
		CDASC_ACTIVIDAD_REALIZADA, 
		CDASC_NOTA_FINAL, 
		CDASC_NUMERO_CERTIFICADO, 
		CDASC_FECHA_EMISION_CERTIFICADO, 
		CDASC_ESTADO_INSCRIPCION, 
		CDASC_APROBADO, 
		CDASC_ESTADO, 
		CDASC_FECHA_INSERT, 
		CDASC_USUARIO_INSERT, 
		CDASC_FECHA_UPDATE, 
		CDASC_USUARIO_UPDATE
	FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE CDASC_ESTADO = TRUE AND 
		CUSU_CODIGO = IN_CUSU_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_USUARIO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_USUARIO.
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_USUARIO(
IN IN_CUSU_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CUSU_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE
		CUSU_CODIGO = IN_CUSU_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_USUARIO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_USUARIO.
* @param IN_CUSU_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_DS_CGG_USUARIO(
IN IN_CUSU_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CUSU_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_ASISTENTE_CURSO SET
		cdasc_estado = false
	WHERE
		CUSU_CODIGO = IN_CUSU_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_S_CGG_SECTOR_PRODUCTIVO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO SECTOR PRODUCTIVO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_S_CGG_SECTOR_PRODUCTIVO(
IN IN_CSCTP_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CSCTP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDASC_CODIGO, 
		CRPER_CODIGO, 
		CDCUR_CODIGO, 
		CSCTP_CODIGO, 
		CUSU_CODIGO, 
		CDASC_ACTIVIDAD_REALIZADA, 
		CDASC_NOTA_FINAL, 
		CDASC_NUMERO_CERTIFICADO, 
		CDASC_FECHA_EMISION_CERTIFICADO, 
		CDASC_ESTADO_INSCRIPCION, 
		CDASC_APROBADO, 
		CDASC_ESTADO, 
		CDASC_FECHA_INSERT, 
		CDASC_USUARIO_INSERT, 
		CDASC_FECHA_UPDATE, 
		CDASC_USUARIO_UPDATE
	FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE CDASC_ESTADO = TRUE AND 
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_SECTOR_PRODUCTIVO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO SECTOR PRODUCTIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_SECTOR_PRODUCTIVO(
IN IN_CSCTP_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_ASISTENTE_CURSO
	WHERE
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_ASISTENTE_CURSO_D_CGG_SECTOR_PRODUCTIVO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_ASISTENTE_CURSO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO SECTOR PRODUCTIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_ASISTENTE_CURSO_DS_CGG_SECTOR_PRODUCTIVO(
IN IN_CSCTP_CODIGO SII.CGG_DHU_ASISTENTE_CURSO.CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_ASISTENTE_CURSO SET
		cdasc_estado = false
	WHERE
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

