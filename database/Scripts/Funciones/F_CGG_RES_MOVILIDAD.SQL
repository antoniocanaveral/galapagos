/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_MOVILIDAD
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE PARTIDA
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE ARRIVO
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @param IN_CTREG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TCT
* @param IN_CRRSD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE RESIDENCIA
* @param IN_CRMOV_FECHA_VIAJE FECHA DE VIAJE
* @param IN_CRMOV_TIPO_OPERACION TIPO DE OPERACION
0 - ENTRADA
1 - SALIDA    
* @param IN_CRMOV_NUMERO_VUELO NUMERO DE VUELO
* @param IN_CRMOV_OBSERVACION DESCRIPCION CORTA DE LA OPERACION
* @param IN_CRMOV_TIPO_SALIDA TIPO DE SALIDA DE LA PROVINCIA
0.-  NORMAL
1.- ESPECIAL
* @param IN_CRMOV_FILTRO_INTERNO IDENTIFICAR SI LA PERSONA PASO POR EL CONTROL DE NACIONAL O EXTRANJERO
* @param IN_CRMOV_SOPORTE INDICADOR DEL REGISTRO FUE CREADO COMO INDICADOR DE CADUCIDAD DE UNA RESIDENCIA
* @param IN_CRMOV_ESTADO ESTADO DEL REGISTRO
* @param IN_CRMOV_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRMOV_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INSERT(
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD.CRMOV_CODIGO%TYPE,
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD.CRALN_CODIGO%TYPE,
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CARPT_CODIGO%TYPE,
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CGG_CARPT_CODIGO%TYPE,
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD.CRPER_CODIGO%TYPE,
IN IN_CTREG_CODIGO SII.CGG_RES_MOVILIDAD.CTREG_CODIGO%TYPE,
IN IN_CRRSD_CODIGO SII.CGG_RES_MOVILIDAD.CRRSD_CODIGO%TYPE,
IN IN_CRMOV_FECHA_VIAJE SII.CGG_RES_MOVILIDAD.CRMOV_FECHA_VIAJE%TYPE,
IN IN_CRMOV_TIPO_OPERACION SII.CGG_RES_MOVILIDAD.CRMOV_TIPO_OPERACION%TYPE,
IN IN_CRMOV_NUMERO_VUELO SII.CGG_RES_MOVILIDAD.CRMOV_NUMERO_VUELO%TYPE,
IN IN_CRMOV_OBSERVACION SII.CGG_RES_MOVILIDAD.CRMOV_OBSERVACION%TYPE,
IN IN_CRMOV_TIPO_SALIDA SII.CGG_RES_MOVILIDAD.CRMOV_TIPO_SALIDA%TYPE,
IN IN_CRMOV_FILTRO_INTERNO SII.CGG_RES_MOVILIDAD.CRMOV_FILTRO_INTERNO%TYPE,
IN IN_CRMOV_SOPORTE SII.CGG_RES_MOVILIDAD.CRMOV_SOPORTE%TYPE,
IN IN_CRMOV_ESTADO SII.CGG_RES_MOVILIDAD.CRMOV_ESTADO%TYPE,
IN IN_CRMOV_USUARIO_INSERT SII.CGG_RES_MOVILIDAD.CRMOV_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
TMP_COUNT INT;
BEGIN

	SELECT COUNT(CRMOV_CODIGO) INTO TMP_COUNT
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO AND 
		CRPER_CODIGO = IN_CRPER_CODIGO AND
		CRMOV_TIPO_OPERACION = IN_CRMOV_TIPO_OPERACION AND
		CTREG_CODIGO = IN_CTREG_CODIGO;
		
	IF (TMP_COUNT > 0) THEN
		RAISE EXCEPTION 'La persona ya esta registrada. '||IN_CRPER_CODIGO;
	END IF;
	
	IF (UPPER(IN_CRMOV_CODIGO) = 'KEYGEN') THEN
		OUT_KEY = 'CRMOV'||NEXTVAL('scn_cgg_res_movilidad');
		--SELECT SII.F_KEYGEN('CGG_RES_MOVILIDAD','CRMOV_CODIGO','CRMOV') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRMOV_CODIGO;
	END IF;
	
	INSERT INTO SII.CGG_RES_MOVILIDAD(
		CRMOV_CODIGO, 
		CRALN_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRPER_CODIGO, 
		CTREG_CODIGO, 
		CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE, 
		CRMOV_ESTADO, 
		CRMOV_FECHA_INSERT, 
		CRMOV_USUARIO_INSERT, 
		CRMOV_FECHA_UPDATE, 
		CRMOV_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRALN_CODIGO, 
		IN_CARPT_CODIGO, 
		IN_CGG_CARPT_CODIGO, 
		IN_CRPER_CODIGO, 
		IN_CTREG_CODIGO, 
		IN_CRRSD_CODIGO, 
		IN_CRMOV_FECHA_VIAJE, 
		IN_CRMOV_TIPO_OPERACION, 
		IN_CRMOV_NUMERO_VUELO, 
		IN_CRMOV_OBSERVACION, 
		IN_CRMOV_TIPO_SALIDA, 
		IN_CRMOV_FILTRO_INTERNO, 
		IN_CRMOV_SOPORTE, 
		IN_CRMOV_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRMOV_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRMOV_USUARIO_INSERT
	);
	IF (IN_CTREG_CODIGO IS NOT NULL AND IN_CRMOV_TIPO_OPERACION = 1) THEN
		UPDATE SII.CGG_TCT_REGISTRO SET 
			CTREG_COMPLETO = TRUE,
			CTREG_USUARIO_UPDATE = IN_CRMOV_USUARIO_INSERT,
			CTREG_FECHA_UPDATE = CURRENT_TIMESTAMP
		WHERE CTREG_CODIGO = IN_CTREG_CODIGO;
	END IF;
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMOV_CODIGO, 
		CRALN_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRPER_CODIGO, 
		CTREG_CODIGO, 
		CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE, 
		CRMOV_ESTADO, 
		CRMOV_FECHA_INSERT, 
		CRMOV_USUARIO_INSERT, 
		CRMOV_FECHA_UPDATE, 
		CRMOV_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT	
		MV.CRMOV_CODIGO, 		
		RG.CTREG_CODIGO, 		
		PR.CRPER_CODIGO,
		RG.CTREG_CODIGO_BARRAS,
		RG.CRALN_CODIGO, 
		(SELECT CRALN_NOMBRE FROM  CGG_RES_AEROLINEA AL WHERE AL.CRALN_CODIGO = RG.CRALN_CODIGO) AEROLINEA,		
		RG.CARPT_CODIGO, 
		(SELECT CARPT_NOMBRE FROM  CGG_RES_AEROPUERTO AR WHERE AR.CARPT_CODIGO = RG.CARPT_CODIGO) AEROPUER_ORIGEN,
		RG.CGG_CARPT_CODIGO, 
		(SELECT CARPT_NOMBRE FROM  CGG_RES_AEROPUERTO AR WHERE AR.CARPT_CODIGO = RG.CGG_CARPT_CODIGO) AEROPUER_DESTINO,
		RG.CTREG_FECHA_INGRESO, 		
		RG.CTREG_FECHA_SALIDA, 			
		PR.CRDID_CODIGO,
		(SELECT CRDID_DESCRIPCION FROM  CGG_RES_DOCUMENTO_IDENTIFICACIO DI WHERE DI.CRDID_CODIGO = PR.CRDID_CODIGO) DOCUMENTO,
		PR.CRPER_NUM_DOC_IDENTIFIC,
		PR.CRPER_NOMBRES,
		PR.CRPER_APELLIDO_PATERNO,
		PR.CRPER_GENERO,
		PR.CRPER_FECHA_NACIMIENTO,
		PR.CGNCN_CODIGO,
		(SELECT CGNCN_NACIONALIDAD FROM  CGG_NACIONALIDAD NC WHERE NC.CGNCN_CODIGO = PR.CGNCN_CODIGO) NACIONALIDAD,
		RG.CRTRA_CODIGO,		
		MV.CRMOV_FECHA_VIAJE, 
		MV.CRMOV_TIPO_OPERACION, 
		MV.CRMOV_TIPO_SALIDA, 
		MV.CRMOV_NUMERO_VUELO, 
		MV.CRMOV_OBSERVACION, 		
		RG.CTREG_ESTADO_REGISTRO		
	FROM SII.CGG_RES_MOVILIDAD MV	
	LEFT JOIN SII.CGG_TCT_REGISTRO RG ON (RG.CTREG_CODIGO = MV.CTREG_CODIGO)
	LEFT JOIN SII.CGG_RES_PERSONA PR ON (PR.CRPER_CODIGO = RG.CRPER_CODIGO)
	WHERE CRMOV_ESTADO AND (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN("'||IN_FIND_TEXT||''',
	CASE WHEN RG.CTREG_FECHA_INGRESO IS NULL THEN CURRENT_TIMESTAMP ELSE RG.CTREG_FECHA_INGRESO END ||'' ''||
	CASE WHEN RG.CTREG_FECHA_SALIDA IS NULL THEN CURRENT_TIMESTAMP ELSE RG.CTREG_FECHA_SALIDA END ||'' ''||	
	CASE WHEN PR.CRPER_NUM_DOC_IDENTIFIC IS NULL THEN '''' ELSE PR.CRPER_NUM_DOC_IDENTIFIC END ||'' ''||
	CASE WHEN PR.CRPER_NOMBRES IS NULL THEN '''' ELSE PR.CRPER_NOMBRES END ||'' ''||
	CASE WHEN PR.CRPER_APELLIDO_PATERNO IS NULL THEN '''' ELSE PR.CRPER_APELLIDO_PATERNO END ||'' ''||
	CASE WHEN PR.CRPER_GENERO IS NULL THEN 0 ELSE PR.CRPER_GENERO END ||'' ''||
	CASE WHEN PR.CRPER_FECHA_NACIMIENTO IS NULL THEN CURRENT_TIMESTAMP ELSE PR.CRPER_FECHA_NACIMIENTO END ||'' ''||	
	CASE WHEN MV.CRMOV_FECHA_VIAJE IS NULL THEN CURRENT_TIMESTAMP ELSE MV.CRMOV_FECHA_VIAJE END ||'' ''||
	CASE WHEN MV.CRMOV_TIPO_OPERACION IS NULL THEN 0 ELSE MV.CRMOV_TIPO_OPERACION END ||'' ''||
	CASE WHEN MV.CRMOV_NUMERO_VUELO IS NULL THEN '''' ELSE MV.CRMOV_NUMERO_VUELO END ||'' ''||
	CASE WHEN MV.CRMOV_OBSERVACION IS NULL THEN '''' ELSE MV.CRMOV_OBSERVACION END ) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_MOVILIDAD
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRMOV_FECHA_VIAJE, CURRENT_TIMESTAMP)||' '||COALESCE(CRMOV_TIPO_OPERACION, 0)||' '||COALESCE(CRMOV_NUMERO_VUELO, '''')||' '||COALESCE(CRMOV_OBSERVACION, '''')||' '||COALESCE(CRMOV_TIPO_SALIDA, 0)||' '||COALESCE(CRMOV_FILTRO_INTERNO, FALSE)||' '||COALESCE(CRMOV_SOPORTE, FALSE)||' '||COALESCE(CRMOV_ESTADO, FALSE)||' '||COALESCE(CRMOV_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRMOV_USUARIO_INSERT, '''')||' '||COALESCE(CRMOV_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRMOV_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_MOVILIDAD
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE PARTIDA
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE ARRIVO
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @param IN_CTREG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TCT
* @param IN_CRRSD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE RESIDENCIA
* @param IN_CRMOV_FECHA_VIAJE FECHA DE VIAJE
* @param IN_CRMOV_TIPO_OPERACION TIPO DE OPERACION
0 - ENTRADA
1 - SALIDA    
* @param IN_CRMOV_NUMERO_VUELO NUMERO DE VUELO
* @param IN_CRMOV_OBSERVACION DESCRIPCION CORTA DE LA OPERACION
* @param IN_CRMOV_TIPO_SALIDA TIPO DE SALIDA DE LA PROVINCIA
0.-  NORMAL
1.- ESPECIAL
* @param IN_CRMOV_FILTRO_INTERNO IDENTIFICAR SI LA PERSONA PASO POR EL CONTROL DE NACIONAL O EXTRANJERO
* @param IN_CRMOV_SOPORTE INDICADOR DEL REGISTRO FUE CREADO COMO INDICADOR DE CADUCIDAD DE UNA RESIDENCIA
* @param IN_CRMOV_ESTADO ESTADO DEL REGISTRO
* @param IN_CRMOV_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_UPDATE(
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD.CRMOV_CODIGO%TYPE,
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD.CRALN_CODIGO%TYPE,
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CARPT_CODIGO%TYPE,
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CGG_CARPT_CODIGO%TYPE,
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD.CRPER_CODIGO%TYPE,
IN IN_CTREG_CODIGO SII.CGG_RES_MOVILIDAD.CTREG_CODIGO%TYPE,
IN IN_CRRSD_CODIGO SII.CGG_RES_MOVILIDAD.CRRSD_CODIGO%TYPE,
IN IN_CRMOV_FECHA_VIAJE SII.CGG_RES_MOVILIDAD.CRMOV_FECHA_VIAJE%TYPE,
IN IN_CRMOV_TIPO_OPERACION SII.CGG_RES_MOVILIDAD.CRMOV_TIPO_OPERACION%TYPE,
IN IN_CRMOV_NUMERO_VUELO SII.CGG_RES_MOVILIDAD.CRMOV_NUMERO_VUELO%TYPE,
IN IN_CRMOV_OBSERVACION SII.CGG_RES_MOVILIDAD.CRMOV_OBSERVACION%TYPE,
IN IN_CRMOV_TIPO_SALIDA SII.CGG_RES_MOVILIDAD.CRMOV_TIPO_SALIDA%TYPE,
IN IN_CRMOV_FILTRO_INTERNO SII.CGG_RES_MOVILIDAD.CRMOV_FILTRO_INTERNO%TYPE,
IN IN_CRMOV_SOPORTE SII.CGG_RES_MOVILIDAD.CRMOV_SOPORTE%TYPE,
IN IN_CRMOV_ESTADO SII.CGG_RES_MOVILIDAD.CRMOV_ESTADO%TYPE,
IN IN_CRMOV_USUARIO_UPDATE SII.CGG_RES_MOVILIDAD.CRMOV_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD SET
		CRALN_CODIGO = IN_CRALN_CODIGO, 
		CARPT_CODIGO = IN_CARPT_CODIGO, 
		CGG_CARPT_CODIGO = IN_CGG_CARPT_CODIGO, 
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CTREG_CODIGO = IN_CTREG_CODIGO, 
		CRRSD_CODIGO = IN_CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE = IN_CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION = IN_CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO = IN_CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION = IN_CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA = IN_CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO = IN_CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE = IN_CRMOV_SOPORTE, 
		CRMOV_ESTADO = IN_CRMOV_ESTADO, 
		CRMOV_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRMOV_USUARIO_UPDATE = IN_CRMOV_USUARIO_UPDATE
	WHERE
		CRMOV_CODIGO = IN_CRMOV_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_MOVILIDAD
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_SELECT(
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD.CRMOV_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMOV_CODIGO, 
		CRALN_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRPER_CODIGO, 
		CTREG_CODIGO, 
		CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE, 
		CRMOV_ESTADO, 
		CRMOV_FECHA_INSERT, 
		CRMOV_USUARIO_INSERT, 
		CRMOV_FECHA_UPDATE, 
		CRMOV_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO = TRUE AND 
		CRMOV_CODIGO = IN_CRMOV_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_MOVILIDAD
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_DELETE(
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD.CRMOV_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD
	WHERE
		CRMOV_CODIGO = IN_CRMOV_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_MOVILIDAD
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_DELETE_SOFT(
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD.CRMOV_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD SET
		CRMOV_ESTADO = FALSE
	WHERE
		CRMOV_CODIGO = IN_CRMOV_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_S_CGG_RES_AEROLINEA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROLINEA.
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_S_CGG_RES_AEROLINEA(
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD.CRALN_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMOV_CODIGO, 
		CRALN_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRPER_CODIGO, 
		CTREG_CODIGO, 
		CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE, 
		CRMOV_ESTADO, 
		CRMOV_FECHA_INSERT, 
		CRMOV_USUARIO_INSERT, 
		CRMOV_FECHA_UPDATE, 
		CRMOV_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO = TRUE AND 
		CRALN_CODIGO = IN_CRALN_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_AEROLINEA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROLINEA.
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_AEROLINEA(
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD.CRALN_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD
	WHERE
		CRALN_CODIGO = IN_CRALN_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_AEROLINEA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROLINEA.
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_DS_CGG_RES_AEROLINEA(
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD.CRALN_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD SET
		crmov_estado = false
	WHERE
		CRALN_CODIGO = IN_CRALN_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_S_CGG_RES_AEROPUERTO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROPUERTO.
* @param IN_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE PARTIDA
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE ARRIVO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_S_CGG_RES_AEROPUERTO(
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CARPT_CODIGO%TYPE, 
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CGG_CARPT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMOV_CODIGO, 
		CRALN_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRPER_CODIGO, 
		CTREG_CODIGO, 
		CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE, 
		CRMOV_ESTADO, 
		CRMOV_FECHA_INSERT, 
		CRMOV_USUARIO_INSERT, 
		CRMOV_FECHA_UPDATE, 
		CRMOV_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO = TRUE AND 
		CARPT_CODIGO = IN_CARPT_CODIGO AND 
		CGG_CARPT_CODIGO = IN_CGG_CARPT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_AEROPUERTO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROPUERTO.
* @param IN_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE PARTIDA
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE ARRIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_AEROPUERTO(
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CARPT_CODIGO%TYPE, 
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CGG_CARPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD
	WHERE
		CARPT_CODIGO = IN_CARPT_CODIGO AND 
		CGG_CARPT_CODIGO = IN_CGG_CARPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_AEROPUERTO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_AEROPUERTO.
* @param IN_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE PARTIDA
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE ARRIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_DS_CGG_RES_AEROPUERTO(
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CARPT_CODIGO%TYPE, 
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CGG_CARPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD SET
		crmov_estado = false
	WHERE
		CARPT_CODIGO = IN_CARPT_CODIGO AND 
		CGG_CARPT_CODIGO = IN_CGG_CARPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_S_CGG_RES_PERSONA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_S_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMOV_CODIGO, 
		CRALN_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRPER_CODIGO, 
		CTREG_CODIGO, 
		CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE, 
		CRMOV_ESTADO, 
		CRMOV_FECHA_INSERT, 
		CRMOV_USUARIO_INSERT, 
		CRMOV_FECHA_UPDATE, 
		CRMOV_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO IDENTIFICATIVO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_DS_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD SET
		crmov_estado = false
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_S_CGG_RES_RESIDENCIA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_RESIDENCIA.
* @param IN_CRRSD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE RESIDENCIA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_S_CGG_RES_RESIDENCIA(
IN IN_CRRSD_CODIGO SII.CGG_RES_MOVILIDAD.CRRSD_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMOV_CODIGO, 
		CRALN_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRPER_CODIGO, 
		CTREG_CODIGO, 
		CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE, 
		CRMOV_ESTADO, 
		CRMOV_FECHA_INSERT, 
		CRMOV_USUARIO_INSERT, 
		CRMOV_FECHA_UPDATE, 
		CRMOV_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO = TRUE AND 
		CRRSD_CODIGO = IN_CRRSD_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_RESIDENCIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_RESIDENCIA.
* @param IN_CRRSD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE RESIDENCIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_RESIDENCIA(
IN IN_CRRSD_CODIGO SII.CGG_RES_MOVILIDAD.CRRSD_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD
	WHERE
		CRRSD_CODIGO = IN_CRRSD_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_RES_RESIDENCIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_RESIDENCIA.
* @param IN_CRRSD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE RESIDENCIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_DS_CGG_RES_RESIDENCIA(
IN IN_CRRSD_CODIGO SII.CGG_RES_MOVILIDAD.CRRSD_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD SET
		crmov_estado = false
	WHERE
		CRRSD_CODIGO = IN_CRRSD_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_S_CGG_TCT_REGISTRO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_TCT_REGISTRO.
* @param IN_CTREG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TCT
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_S_CGG_TCT_REGISTRO(
IN IN_CTREG_CODIGO SII.CGG_RES_MOVILIDAD.CTREG_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRMOV_CODIGO, 
		CRALN_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRPER_CODIGO, 
		CTREG_CODIGO, 
		CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE, 
		CRMOV_ESTADO, 
		CRMOV_FECHA_INSERT, 
		CRMOV_USUARIO_INSERT, 
		CRMOV_FECHA_UPDATE, 
		CRMOV_USUARIO_UPDATE
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO = TRUE AND 
		CTREG_CODIGO = IN_CTREG_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_TCT_REGISTRO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_TCT_REGISTRO.
* @param IN_CTREG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TCT
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_D_CGG_TCT_REGISTRO(
IN IN_CTREG_CODIGO SII.CGG_RES_MOVILIDAD.CTREG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_MOVILIDAD
	WHERE
		CTREG_CODIGO = IN_CTREG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_D_CGG_TCT_REGISTRO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_MOVILIDAD QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_TCT_REGISTRO.
* @param IN_CTREG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TCT
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_DS_CGG_TCT_REGISTRO(
IN IN_CTREG_CODIGO SII.CGG_RES_MOVILIDAD.CTREG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_MOVILIDAD SET
		crmov_estado = false
	WHERE
		CTREG_CODIGO = IN_CTREG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_RES_MOVILIDAD_INSERT1
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_MOVILIDAD
* @param IN_CRMOV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRALN_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE PARTIDA
* @param IN_CGG_CARPT_CODIGO IDENTIFICATIVO AEROPUERTO DE ARRIVO
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @param IN_CTREG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TCT
* @param IN_CRRSD_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TIPO DE RESIDENCIA
* @param IN_CRMOV_FECHA_VIAJE FECHA DE VIAJE
* @param IN_CRMOV_TIPO_OPERACION TIPO DE OPERACION
0 - ENTRADA
1 - SALIDA    
* @param IN_CRMOV_NUMERO_VUELO NUMERO DE VUELO
* @param IN_CRMOV_OBSERVACION DESCRIPCION CORTA DE LA OPERACION
* @param IN_CRMOV_TIPO_SALIDA TIPO DE SALIDA DE LA PROVINCIA
0.-  NORMAL
1.- ESPECIAL
* @param IN_CRMOV_FILTRO_INTERNO IDENTIFICAR SI LA PERSONA PASO POR EL CONTROL DE NACIONAL O EXTRANJERO
* @param IN_CRMOV_SOPORTE INDICADOR DEL REGISTRO FUE CREADO COMO INDICADOR DE CADUCIDAD DE UNA RESIDENCIA
* @param IN_CRMOV_ESTADO ESTADO DEL REGISTRO
* @param IN_CRMOV_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRMOV_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @param IN_CTREG_CODIGO_BARRAS  IDENTIFICATIVO UNICO DE REGISTRO DE INGRESO
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_MOVILIDAD_INSERT1(
IN IN_CRMOV_CODIGO SII.CGG_RES_MOVILIDAD.CRMOV_CODIGO%TYPE,
IN IN_CRALN_CODIGO SII.CGG_RES_MOVILIDAD.CRALN_CODIGO%TYPE,
IN IN_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CARPT_CODIGO%TYPE,
IN IN_CGG_CARPT_CODIGO SII.CGG_RES_MOVILIDAD.CGG_CARPT_CODIGO%TYPE,
IN IN_CRPER_CODIGO SII.CGG_RES_MOVILIDAD.CRPER_CODIGO%TYPE,
IN IN_CTREG_CODIGO SII.CGG_RES_MOVILIDAD.CTREG_CODIGO%TYPE,
IN IN_CRRSD_CODIGO SII.CGG_RES_MOVILIDAD.CRRSD_CODIGO%TYPE,
IN IN_CRMOV_FECHA_VIAJE SII.CGG_RES_MOVILIDAD.CRMOV_FECHA_VIAJE%TYPE,
IN IN_CRMOV_TIPO_OPERACION SII.CGG_RES_MOVILIDAD.CRMOV_TIPO_OPERACION%TYPE,
IN IN_CRMOV_NUMERO_VUELO SII.CGG_RES_MOVILIDAD.CRMOV_NUMERO_VUELO%TYPE,
IN IN_CRMOV_OBSERVACION SII.CGG_RES_MOVILIDAD.CRMOV_OBSERVACION%TYPE,
IN IN_CRMOV_TIPO_SALIDA SII.CGG_RES_MOVILIDAD.CRMOV_TIPO_SALIDA%TYPE,
IN IN_CRMOV_FILTRO_INTERNO SII.CGG_RES_MOVILIDAD.CRMOV_FILTRO_INTERNO%TYPE,
IN IN_CRMOV_SOPORTE SII.CGG_RES_MOVILIDAD.CRMOV_SOPORTE%TYPE,
IN IN_CRMOV_ESTADO SII.CGG_RES_MOVILIDAD.CRMOV_ESTADO%TYPE,
IN IN_CRMOV_USUARIO_INSERT SII.CGG_RES_MOVILIDAD.CRMOV_USUARIO_INSERT%TYPE,
IN IN_CTREG_CODIGO_BARRAS SII.CGG_TCT_REGISTRO.CTREG_CODIGO_BARRAS%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
TMP_CRPER_CODIGO VARCHAR;
TMP_CTREG_CODIGO VARCHAR;
TMP_CTGTR_CODIGO VARCHAR;
TMP_CODIGO VARCHAR;
TMP_COUNT INT;
TMP_ACTIVIDAD RECORD;
TMP_HOSPEDAJE RECORD;
TMP_CRRSD_CODIGO VARCHAR;
BEGIN
	TMP_CRRSD_CODIGO := IN_CRRSD_CODIGO;
	SELECT CRPER_CODIGO,CTREG_CODIGO,CTGTR_CODIGO 
	INTO TMP_CRPER_CODIGO,TMP_CTREG_CODIGO,TMP_CTGTR_CODIGO 
	FROM CGG_TCT_REGISTRO WHERE CTREG_CODIGO_BARRAS = IN_CTREG_CODIGO_BARRAS;
	
	SELECT COUNT(CRMOV_CODIGO) INTO TMP_COUNT
	FROM SII.CGG_RES_MOVILIDAD
	WHERE CRMOV_ESTADO AND 
		CRPER_CODIGO = TMP_CRPER_CODIGO AND
		CRMOV_TIPO_OPERACION = IN_CRMOV_TIPO_OPERACION AND
		CTREG_CODIGO = TMP_CTREG_CODIGO;
	IF (TMP_COUNT > 0) THEN
		RAISE EXCEPTION 'La persona ya esta registrada.';
	END IF;
	IF (IN_CRMOV_TIPO_OPERACION = 1) THEN
	--SELECCIONA LA RESIDENCIA VIGENTE DE UN PERSONA
		SELECT CRRSD_CODIGO
		INTO TMP_CRRSD_CODIGO
		FROM SII.CGG_RES_RESIDENCIA 
		WHERE CRRSD_ESTADO AND 
			CRRSD_VIGENTE AND
			NOT CRRSD_TRAMITE_PENDIENTE AND
		CRPER_CODIGO = TMP_CRPER_CODIGO;
	END IF;
	
	IF (UPPER(IN_CRMOV_CODIGO) = 'KEYGEN') THEN
		OUT_KEY = 'CRMOV'||NEXTVAL('scn_cgg_res_movilidad');
		--SELECT SII.F_KEYGEN('CGG_RES_MOVILIDAD','CRMOV_CODIGO','CRMOV') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRMOV_CODIGO;
	END IF;
	
	INSERT INTO SII.CGG_RES_MOVILIDAD(
		CRMOV_CODIGO, 
		CRALN_CODIGO, 
		CARPT_CODIGO, 
		CGG_CARPT_CODIGO, 
		CRPER_CODIGO, 
		CTREG_CODIGO, 
		CRRSD_CODIGO, 
		CRMOV_FECHA_VIAJE, 
		CRMOV_TIPO_OPERACION, 
		CRMOV_NUMERO_VUELO, 
		CRMOV_OBSERVACION, 
		CRMOV_TIPO_SALIDA, 
		CRMOV_FILTRO_INTERNO, 
		CRMOV_SOPORTE, 
		CRMOV_ESTADO, 
		CRMOV_FECHA_INSERT, 
		CRMOV_USUARIO_INSERT, 
		CRMOV_FECHA_UPDATE, 
		CRMOV_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRALN_CODIGO, 
		IN_CARPT_CODIGO, 
		IN_CGG_CARPT_CODIGO, 
		TMP_CRPER_CODIGO, 
		TMP_CTREG_CODIGO, 
		TMP_CRRSD_CODIGO, 
		IN_CRMOV_FECHA_VIAJE,
		IN_CRMOV_TIPO_OPERACION, 
		IN_CRMOV_NUMERO_VUELO, 
		IN_CRMOV_OBSERVACION, 
		IN_CRMOV_TIPO_SALIDA, 
		IN_CRMOV_FILTRO_INTERNO, 
		IN_CRMOV_SOPORTE, 
		IN_CRMOV_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRMOV_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRMOV_USUARIO_INSERT
	);
	IF (IN_CRMOV_TIPO_OPERACION = 0) THEN
		--SELECCIONAR LAS ACTIVIDADES DEL PRE-REGISTRO
		FOR TMP_ACTIVIDAD IN 
			SELECT CTACT_CODIGO
			FROM CGG_TCT_GRUPO_ACTIVIDAD 
			WHERE CTGTR_CODIGO = TMP_CTGTR_CODIGO
		LOOP
		SELECT SII.F_CGG_TCT_MOVILIDAD_ACTIVIDAD_INSERT(
				'KEYGEN'::VARCHAR,
				TMP_ACTIVIDAD.CTACT_CODIGO,
				OUT_KEY,
				TRUE,
				IN_CRMOV_USUARIO_INSERT
			)INTO TMP_CODIGO;
		END LOOP;
	
		--SELECCIONAR EL HOSPEDAJE DEL PRE-REGISTRO
		FOR TMP_HOSPEDAJE IN 
			SELECT CTTHJ_CODIGO
			FROM CGG_TCT_GRUPO_HOSPEDAJE 
			WHERE CTGTR_CODIGO = TMP_CTGTR_CODIGO
		LOOP
		SELECT SII.F_CGG_TCT_MOVILIDAD_HOSPEDAJE_INSERT(
				'KEYGEN'::VARCHAR,
				TMP_HOSPEDAJE.CTTHJ_CODIGO,
				OUT_KEY,
				TRUE,
				IN_CRMOV_USUARIO_INSERT
			)INTO TMP_CODIGO;
		END LOOP;
	END IF;
	SELECT SII.F_CGG_RES_RESIDENCIA_CONTROL(OUT_KEY,TMP_CRPER_CODIGO,IN_CRMOV_USUARIO_INSERT) INTO TMP_CODIGO;
	IF (TMP_CTREG_CODIGO IS NOT NULL AND IN_CRMOV_TIPO_OPERACION = 1) THEN
		UPDATE SII.CGG_TCT_REGISTRO SET 
			CTREG_COMPLETO = TRUE,
			CTREG_USUARIO_UPDATE = IN_CRMOV_USUARIO_INSERT,
			CTREG_FECHA_UPDATE = CURRENT_TIMESTAMP
		WHERE CTREG_CODIGO = TMP_CTREG_CODIGO;
	END IF;
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
*SELECT UN CONJUNTO DE DATOS DE ENTRADA SALIDA PARA MANIPULACION EN OFFLINE.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_MOVILIDAD_INGRESO_SELECT_OFFLINE(IN_USER_NAME CHARACTER VARYING)
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
	TMP TEXT;
	DIAS NUMERIC;
BEGIN

	DIAS :=0;		
	SELECT CGCNF_VALOR_NUMERICO INTO DIAS FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = '28';
	
	TMP := 'WITH REGISTRO AS(
				SELECT 	CTREG_CODIGO, 		
					CTGTR_CODIGO	,
					CTREG_CODIGO_BARRAS,	
					CRALN_CODIGO, 		
					CARPT_CODIGO, 		
					CGG_CARPT_CODIGO, 
					CTREG_FECHA_INGRESO, 		
					CTREG_FECHA_SALIDA, 								
					CTREG_ESTADO_REGISTRO,
					CRPER_CODIGO				
				FROM SII.CGG_TCT_REGISTRO 
				WHERE CTREG_ESTADO_REGISTRO IN(0,1) 
					  AND NOT CTREG_COMPLETO 
					  AND CTREG_ESTADO	
					  AND CTREG_FECHA_INGRESO BETWEEN CURRENT_DATE - '||DIAS||' AND CURRENT_DATE
			),
			GRUPO AS(
				SELECT DISTINCT GT.CTGTR_CODIGO FROM CGG_TCT_GRUPO_TURISTA GT
				INNER JOIN REGISTRO R ON (R.CTGTR_CODIGO = GT.CTGTR_CODIGO)
			),
			GRUPO_HOSPEDAJE AS(
				   SELECT * FROM (
					  SELECT GH.CTGHJ_CODIGO,
					  GH.CTTHJ_CODIGO,
					  GH.CTGTR_CODIGO,
					  ROW_NUMBER() OVER(PARTITION BY GH.CTGTR_CODIGO) AS RANK 
					  FROM SII.CGG_TCT_GRUPO_HOSPEDAJE GH WHERE GH.CTGTR_CODIGO IN (SELECT CTGTR_CODIGO FROM GRUPO)
					  ) AS CH
				   WHERE CH.RANK = 1 
				   ),
			GRUPO_ACTIVIDAD AS(
				   SELECT * FROM (
					  SELECT GA.CTGAC_CODIGO,
					  GA.CTGTR_CODIGO,
					  GA.CTACT_CODIGO, 
					  ROW_NUMBER() OVER(PARTITION BY GA.CTGTR_CODIGO) AS RANK 
					  FROM SII.CGG_TCT_GRUPO_ACTIVIDAD GA WHERE GA.CTGTR_CODIGO IN (SELECT CTGTR_CODIGO FROM GRUPO)
					  ) AS CA
				   WHERE CA.RANK = 1 
			),			
		PERSONA AS(			
			SELECT 
				P.CRPER_CODIGO,	
				P.CRDID_CODIGO,															
				P.CRPER_NUM_DOC_IDENTIFIC,
				P.CRPER_NOMBRES,
				P.CRPER_APELLIDO_PATERNO,
				P.CRPER_APELLIDO_MATERNO,
				P.CRPER_GENERO,
				P.CRPER_FECHA_NACIMIENTO,
				P.CPAIS_CODIGO,
				P.CGG_CPAIS_CODIGO,			
				P.CGNCN_CODIGO,
				DI.CRDID_DESCRIPCION,
				PS.CPAIS_NOMBRE,
				NC.CGNCN_NACIONALIDAD,
				RS.CRRSD_CODIGO,
				RS.CRTST_CODIGO,
				RS.CRTRA_CODIGO		
			FROM SII.CGG_RES_PERSONA P
			INNER JOIN SII.CGG_RES_DOCUMENTO_IDENTIFICACIO DI ON (DI.CRDID_CODIGO = P.CRDID_CODIGO AND DI.CRDID_ESTADO)
			INNER JOIN SII.CGG_PAIS PS ON (PS.CPAIS_CODIGO = P.CGG_CPAIS_CODIGO AND PS.CPAIS_ESTADO )
			INNER JOIN SII.CGG_NACIONALIDAD NC ON (NC.CGNCN_CODIGO = P.CGNCN_CODIGO AND NC.CGNCN_ESTADO)
			LEFT JOIN SII.CGG_RES_RESIDENCIA RS ON (RS.CRPER_CODIGO = P.CRPER_CODIGO AND RS.CRRSD_ESTADO AND RS.CRRSD_VIGENTE)					
			WHERE P.CRPER_CODIGO IN (SELECT CRPER_CODIGO FROM REGISTRO) 
			AND P.CRPER_ESTADO
		)		
		SELECT
		RG.CTREG_CODIGO, 		
		RG.CTGTR_CODIGO	,	
		PR.CRPER_CODIGO,		
		PR.CRDID_CODIGO,
		RG.CTREG_CODIGO_BARRAS,
		RG.CRALN_CODIGO, 			
		RG.CARPT_CODIGO, 		
		RG.CGG_CARPT_CODIGO, 
		RG.CTREG_FECHA_INGRESO, 		
		RG.CTREG_FECHA_SALIDA, 				
		PR.CRDID_DESCRIPCION,
		PR.CRPER_NUM_DOC_IDENTIFIC,
		PR.CRPER_NOMBRES,
		PR.CRPER_APELLIDO_PATERNO,
		PR.CRPER_APELLIDO_MATERNO,
		PR.CRPER_GENERO,
		PR.CRPER_FECHA_NACIMIENTO,
		PR.CPAIS_CODIGO,
		PR.CGG_CPAIS_CODIGO,
		PR.CPAIS_NOMBRE,
		PR.CGNCN_CODIGO,
		PR.CGNCN_NACIONALIDAD,
		TRM.CRTRA_CODIGO,
		TRM.CRTRA_NUMERO,
		PR.CRRSD_CODIGO,
		COALESCE(TST.CRTST_DESCRIPCION,''Turista'') TIPO_RESIDENCIA,	
		RG.CTREG_ESTADO_REGISTRO,
		(SELECT GA.CTGAC_CODIGO FROM GRUPO_ACTIVIDAD GA WHERE GA.CTGTR_CODIGO = RG.CTGTR_CODIGO) CTGAC_CODIGO,
		(SELECT GA.CTACT_CODIGO FROM GRUPO_ACTIVIDAD GA WHERE GA.CTGTR_CODIGO = RG.CTGTR_CODIGO) CTACT_CODIGO,
		(SELECT GH.CTGHJ_CODIGO FROM GRUPO_HOSPEDAJE GH WHERE GH.CTGTR_CODIGO = RG.CTGTR_CODIGO) CTGHJ_CODIGO,
		(SELECT GH.CTTHJ_CODIGO FROM GRUPO_HOSPEDAJE GH WHERE GH.CTGTR_CODIGO = RG.CTGTR_CODIGO) CTTHJ_CODIGO 		
	FROM REGISTRO RG 	
	INNER JOIN PERSONA PR ON (PR.CRPER_CODIGO = RG.CRPER_CODIGO)	
	LEFT JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = PR.CRTST_CODIGO AND TST.CRTST_ESTADO	
	LEFT JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = PR.CRTRA_CODIGO AND TRM.CRTRA_ESTADO';
	
	OPEN TMP_REF FOR EXECUTE TMP;
	RETURN NEXT TMP_REF;	
		
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE;

/**
*SELECIONA UN CONJUNTO DE DATOS DE TODAS LAS PERSONAS QUE TIENE SALIDAS PENDIENTES DE GALAPAGOS PARA OFFLINE.
*@param IN_USER_NAME NOMBRE DE USUARIO.
*@return REFCURSOR.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_MOVILIDAD_SALIDA_SELECT_OFFLINE(IN_USER_NAME CHARACTER VARYING)
  RETURNS SETOF REFCURSOR AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
	TMP TEXT;
	DIAS NUMERIC;
BEGIN

	DIAS :=0;		
	SELECT CGCNF_VALOR_NUMERICO INTO DIAS FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = '28';

	TMP :='
		WITH TURITRANS AS(WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
			SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE (CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
		FROM CGG_CONFIGURACION
		WHERE CGCNF_CODIGO = ''05'') OR CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
		FROM CGG_CONFIGURACION
		WHERE CGCNF_CODIGO = ''06'')) UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION 
		FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
		WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO) SELECT CRTST_CODIGO  FROM TIPO
	),
	MOVILIDAD AS(
		SELECT 			
			MOV.CRMOV_FECHA_VIAJE,
			MOV.CRMOV_TIPO_OPERACION,
			MOV.CRPER_CODIGO,
			MOV.CTREG_CODIGO,
			MOV.CARPT_CODIGO,
			MOV.CGG_CARPT_CODIGO 
		FROM SII.CGG_RES_MOVILIDAD MOV 
		INNER JOIN SII.CGG_RES_RESIDENCIA RS ON (RS.CRRSD_CODIGO=MOV.CRRSD_CODIGO AND RS.CRRSD_VIGENTE=TRUE)
		WHERE MOV.CRMOV_TIPO_OPERACION = 0  
		AND MOV.CRMOV_ESTADO 			
		AND MOV.CTREG_CODIGO IS NOT NULL
		AND RS.CRTST_CODIGO IN (SELECT CRTST_CODIGO  FROM TURITRANS) 
		AND MOV.CRMOV_FECHA_VIAJE BETWEEN CURRENT_DATE - '||DIAS||' AND CURRENT_DATE		
	),	
	PERSONA AS(		
		SELECT 
			PR.CRPER_CODIGO,		
			PR.CRDID_CODIGO,			
			PR.CRPER_NUM_DOC_IDENTIFIC,
			PR.CRPER_NOMBRES,
			PR.CRPER_APELLIDO_PATERNO,
			PR.CRPER_APELLIDO_MATERNO,
			PR.CRPER_GENERO,
			PR.CRPER_FECHA_NACIMIENTO,		
			PR.CPAIS_CODIGO,
			PR.CGG_CPAIS_CODIGO,		
			PR.CGNCN_CODIGO		
		FROM SII.CGG_RES_PERSONA PR 
		WHERE PR.CRPER_CODIGO IN (SELECT CRPER_CODIGO FROM MOVILIDAD)
		AND PR.CRPER_ESTADO
	)	
	SELECT
		RG.CTREG_CODIGO, 		
		RG.CTGTR_CODIGO	,	
		PR.CRPER_CODIGO,		
		PR.CRDID_CODIGO,
		RG.CTREG_CODIGO_BARRAS,
		RG.CRALN_CODIGO, 		
		RG.CARPT_CODIGO, 		
		RG.CGG_CARPT_CODIGO, 		
		RG.CTREG_FECHA_INGRESO, 		
		RG.CTREG_FECHA_SALIDA, 						
		PR.CRPER_NUM_DOC_IDENTIFIC,
		PR.CRPER_NOMBRES,
		PR.CRPER_APELLIDO_PATERNO,
		PR.CRPER_APELLIDO_MATERNO,
		PR.CRPER_GENERO,
		PR.CRPER_FECHA_NACIMIENTO,
		TRM.CRTRA_CODIGO,
		TRM.CRTRA_NUMERO,
		PR.CPAIS_CODIGO,
		PR.CGG_CPAIS_CODIGO,		
		PR.CGNCN_CODIGO,		
		RS.CRRSD_CODIGO,
		SII.F_TRAMITE_TIPO(RS.CRTST_CODIGO) TIPO_RESIDENCIA,	
		MV.CRMOV_FECHA_VIAJE
	FROM MOVILIDAD MV	
	INNER JOIN PERSONA PR ON (PR.CRPER_CODIGO = MV.CRPER_CODIGO) 
	INNER JOIN SII.CGG_RES_RESIDENCIA RS ON RS.CRPER_CODIGO = PR.CRPER_CODIGO AND RS.CRRSD_ESTADO
	LEFT JOIN SII.CGG_TCT_REGISTRO RG ON RG.CTREG_CODIGO = MV.CTREG_CODIGO AND RG.CTREG_ESTADO		
	LEFT JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = RS.CRTRA_CODIGO';
	
	/*TMP := 'WITH REGISTRO AS(
		SELECT * FROM SII.CGG_RES_MOVILIDAD MOV 
		INNER JOIN SII.CGG_RES_RESIDENCIA RS ON RS.CRRSD_CODIGO=MOV.CRRSD_CODIGO AND MOV.CTREG_CODIGO IS NOT NULL
		WHERE MOV.CRMOV_TIPO_OPERACION = 0  AND MOV.CRMOV_ESTADO 	
		  AND RS.CRRSD_VIGENTE=TRUE
		)
	SELECT
		RG.CTREG_CODIGO, 		
		RG.CTGTR_CODIGO	,	
		PR.CRPER_CODIGO,		
		PR.CRDID_CODIGO,
		RG.CTREG_CODIGO_BARRAS,
		RG.CRALN_CODIGO, 
		(SELECT CRALN_NOMBRE FROM  CGG_RES_AEROLINEA AL WHERE AL.CRALN_CODIGO = RG.CRALN_CODIGO) AEROLINEA,		
		RG.CARPT_CODIGO, 
		(SELECT CARPT_NOMBRE FROM  CGG_RES_AEROPUERTO AR WHERE AR.CARPT_CODIGO = RG.CARPT_CODIGO) AEROPUER_ORIGEN,
		RG.CGG_CARPT_CODIGO, 
		CASE WHEN MV.CRMOV_TIPO_OPERACION = 0 THEN ARPS.CARPT_NOMBRE ELSE (SELECT CARPT_NOMBRE FROM SII.CGG_RES_AEROPUERTO AR WHERE AR.CARPT_CODIGO = RG.CGG_CARPT_CODIGO) END AEROPUER_DESTINO,
		RG.CTREG_FECHA_INGRESO, 		
		RG.CTREG_FECHA_SALIDA, 				
		(SELECT CRDID_DESCRIPCION FROM SII.CGG_RES_DOCUMENTO_IDENTIFICACIO DI WHERE DI.CRDID_CODIGO = PR.CRDID_CODIGO) DOCUMENTO,
		PR.CRPER_NUM_DOC_IDENTIFIC,
		PR.CRPER_NOMBRES,
		PR.CRPER_APELLIDO_PATERNO,
		PR.CRPER_APELLIDO_MATERNO,
		PR.CRPER_GENERO,
		PR.CRPER_FECHA_NACIMIENTO,
		TRM.CRTRA_CODIGO,
		TRM.CRTRA_NUMERO,
		PR.CPAIS_CODIGO,
		PR.CGG_CPAIS_CODIGO,
		(SELECT CPAIS_NOMBRE FROM SII.CGG_PAIS PS WHERE PS.CPAIS_CODIGO = PR.CGG_CPAIS_CODIGO) PAIS_RESIDENCIA,
		PR.CGNCN_CODIGO,
		(SELECT CGNCN_NACIONALIDAD FROM SII.CGG_NACIONALIDAD NC WHERE NC.CGNCN_CODIGO = PR.CGNCN_CODIGO) NACIONALIDAD,
		RS.CRRSD_CODIGO,
		(SII.F_TRAMITE_TIPO(RS.CRTST_CODIGO))TIPO_RESIDENCIA,	
		MV.CRMOV_FECHA_VIAJE
	FROM SII.CGG_RES_MOVILIDAD MV
	INNER JOIN REGISTRO RGT ON RGT.CRMOV_CODIGO = MV.CRMOV_CODIGO
	INNER JOIN SII.CGG_RES_PERSONA PR ON (PR.CRPER_CODIGO = MV.CRPER_CODIGO) AND PR.CRPER_ESTADO
	LEFT JOIN SII.CGG_RES_RESIDENCIA RS ON RS.CRPER_CODIGO = PR.CRPER_CODIGO AND RS.CRRSD_ESTADO
	LEFT JOIN SII.CGG_TCT_REGISTRO RG ON RG.CTREG_CODIGO = MV.CTREG_CODIGO AND RG.CTREG_ESTADO
	LEFT JOIN SII.CGG_RES_AEROPUERTO ARPI ON ARPI.CARPT_CODIGO = MV.CARPT_CODIGO AND ARPI.CARPT_ESTADO
	LEFT JOIN SII.CGG_RES_AEROPUERTO ARPS ON ARPS.CARPT_CODIGO = MV.CGG_CARPT_CODIGO AND ARPS.CARPT_ESTADO 
	LEFT JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = RS.CRTRA_CODIGO
	WHERE CTREG_ESTADO   AND RS.CRRSD_VIGENTE=TRUE
		AND	RS.CRTST_CODIGO IN 
	(WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
		SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE (CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
	FROM CGG_CONFIGURACION
	WHERE CGCNF_CODIGO = ''05'') OR CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
	FROM CGG_CONFIGURACION
	WHERE CGCNF_CODIGO = ''06''))  UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION 
	FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
	WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO) SELECT CRTST_CODIGO  FROM TIPO)';*/
	
	OPEN TMP_REF FOR EXECUTE TMP;
	RETURN NEXT TMP_REF;	
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE ;

/**
*SELECCIONA LAS PERSONAS RESIDENTES DE GALAPAGOS PARA TRATAMIENTO EN OFFLINE.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_MOVILIDAD_RESIDENCIA_SELECT_OFF(
	IN_USER_NAME CHARACTER VARYING,
	IN_CANTON CHARACTER VARYING,
	IN_FORMATO INT
	)
  RETURNS TEXT AS
$BODY$
DECLARE	
	TMP TEXT;
	FILA RECORD;
	RES TEXT;
	C INT;
BEGIN

/*AND R.CRTST_CODIGO IN (WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
					SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO IN (SELECT CGCNF_VALOR_CADENA
					FROM CGG_CONFIGURACION
					WHERE CGCNF_CODIGO IN (''03'',''04'')) 
					UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
					WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
				) SELECT CRTST_CODIGO  FROM TIPO) 		
		)*/
		
	C:=0;
	RES := '';
	TMP := 'WITH RESIDENCIA AS(
		SELECT 
			CRRSD_CODIGO,
			CRTST_DESCRIPCION,
			CRPER_CODIGO,
			CRRSD_FECHA_INICIO,
		    CRRSD_FECHA_CADUCIDAD			
		FROM SII.CGG_RES_RESIDENCIA R
		INNER JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON (TST.CRTST_CODIGO = R.CRTST_CODIGO AND TST.CRTST_ESTADO)
		WHERE R.CRRSD_VIGENTE = TRUE 
		AND R.CRRSD_ESTADO)		
	SELECT
		PR.CRPER_CODIGO,
		PR.CRDID_CODIGO,
		DI.CRDID_DESCRIPCION,		
		PR.CRPER_NUM_DOC_IDENTIFIC,
		PR.CRPER_NUMERO_RESIDENCIA,
		PR.CRPER_NOMBRES,
		PR.CRPER_APELLIDO_PATERNO,
		PR.CRPER_APELLIDO_MATERNO,
		COALESCE(PR.CRPER_GENERO,0) CRPER_GENERO,
		PR.CRPER_FECHA_NACIMIENTO,
		PR.CGNCN_CODIGO,		
		NC.CGNCN_NACIONALIDAD,						
		RS.CRRSD_CODIGO,
		RS.CRTST_DESCRIPCION TIPO_RESIDENCIA,
	    RS.CRRSD_FECHA_INICIO,
		RS.CRRSD_FECHA_CADUCIDAD
	FROM RESIDENCIA RS	
	INNER JOIN SII.CGG_RES_PERSONA PR ON PR.CRPER_CODIGO = RS.CRPER_CODIGO AND PR.CRPER_ESTADO 
	INNER JOIN SII.CGG_RES_DOCUMENTO_IDENTIFICACIO DI ON(DI.CRDID_CODIGO=PR.CRDID_CODIGO) AND DI.CRDID_ESTADO
	INNER JOIN SII.CGG_NACIONALIDAD NC ON NC.CGNCN_CODIGO = PR.CGNCN_CODIGO AND NC.CGNCN_ESTADO
	WHERE LENGTH(TRIM('||QUOTE_LITERAL(IN_CANTON)||'))= 0 OR PR.CCTN_CODIGO = '||QUOTE_LITERAL(IN_CANTON);
	--||' LIMIT 1000'; 
	
	IF(IN_FORMATO = 0)THEN
			FOR FILA IN EXECUTE TMP LOOP
			IF(C = 1)THEN
					RES := RES||',';				
			END IF;
			C := 1;
			RES := RES ||'{"CRPER_CODIGO":"'||COALESCE(FILA.CRPER_CODIGO,'')||'",'||
								  '"CRDID_CODIGO":"'||COALESCE(FILA.CRDID_CODIGO,'')||'",'||
								  '"CRDID_DESCRIPCION":"'||COALESCE(FILA.CRDID_DESCRIPCION,'')||'",'||
								  '"CRPER_NUM_DOC_IDENTIFIC":"'||COALESCE(FILA.CRPER_NUM_DOC_IDENTIFIC,'')||'",'||
								  '"CRPER_NUMERO_RESIDENCIA":"'||COALESCE(FILA.CRPER_NUMERO_RESIDENCIA,'')||'",'||
								  '"CRPER_NOMBRES":"'||COALESCE(FILA.CRPER_NOMBRES,'')||'",'||
								  '"CRPER_APELLIDO_PATERNO":"'||COALESCE(FILA.CRPER_APELLIDO_PATERNO,'')||'",'||			
								  '"CRPER_APELLIDO_MATERNO":"'||COALESCE(FILA.CRPER_APELLIDO_MATERNO,'')||'",'||		
								  '"CRPER_GENERO":"'||COALESCE(FILA.CRPER_GENERO,0)||'",'||	
								  '"CRPER_FECHA_NACIMIENTO":"'||COALESCE(FILA.CRPER_FECHA_NACIMIENTO,CURRENT_TIMESTAMP)||'",'||	
								  '"CGNCN_CODIGO":"'||COALESCE(FILA.CGNCN_CODIGO,'')||'",'||
								  '"CGNCN_NACIONALIDAD":"'||COALESCE(FILA.CGNCN_NACIONALIDAD,'')||'",'||
								  '"CRRSD_CODIGO":"'||COALESCE(FILA.CRRSD_CODIGO,'')||'",'||
								  '"TIPO_RESIDENCIA":"'||COALESCE(FILA.TIPO_RESIDENCIA,'')||'",'||
								  '"CRRSD_FECHA_INICIO":"'||COALESCE(FILA.CRRSD_FECHA_INICIO, CURRENT_TIMESTAMP)||'",'||
								  '"CRRSD_FECHA_CADUCIDAD":"'||COALESCE(FILA.CRRSD_FECHA_CADUCIDAD,CURRENT_TIMESTAMP)||'"}';		
		END LOOP;			
		RES := '['||RES||']';
	ELSE
		RES := QUERY_TO_XML(TMP,TRUE, FALSE,'sii.cgg_res_residencia');		
	END IF;
			
	RETURN RES;
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE;
  
  /**
  *SELECCION EL FORMATO PARA EXPORTACION DE LA TABLA SII.CGG_RESIDENCIA_FORMATO, PREVIAMENTE GENERADOS EN UN JOB.
  *@param IN_USER_NAME NOMBRE DE USUARIO.
  *@param IN_FORMATO TIPO DE FORMATO DE SALIDA.
  @return CADENA DE DATOS EN FORMATO ESPECIFICADO.
  */
  CREATE OR REPLACE FUNCTION SII.F_CGG_MOVILIDAD_SELECT_RESIDENCIA_FORMATO(
	IN_USER_NAME CHARACTER VARYING,	
	IN_FORMATO NUMERIC
	)
  RETURNS TEXT AS
$BODY$
DECLARE	
	RES TEXT;
BEGIN
	RES := '';		
	SELECT  CRFOR_CONTENIDO INTO RES FROM SII.CGG_RESIDENCIA_FORMATO	   
	WHERE CRFOR_FORMATO = IN_FORMATO AND 
	CRFOR_FECHA_GENERACION = (SELECT MAX(F.CRFOR_FECHA_GENERACION) FROM SII.CGG_RESIDENCIA_FORMATO F WHERE F.CRFOR_FORMATO = IN_FORMATO);
	 RETURN RES;	   
	 
END
$BODY$
  LANGUAGE 'PLPGSQL' VOLATILE;