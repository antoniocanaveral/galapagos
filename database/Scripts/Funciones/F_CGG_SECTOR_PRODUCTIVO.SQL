/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_SECTOR_PRODUCTIVO
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @param IN_CGG_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO RELACIONADO
* @param IN_CSCTP_NOMBRE NOMBRE DEL SECTOR PRODUCTIVO
* @param IN_CSCTP_DESCRIPCION ALMACENA LA DESCRIPCION DEL SECTOR PRODUCTIVO
* @param IN_CSCTP_ESTADO ESTADO DEL REGISTRO
* @param IN_CSCTP_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CSCTP_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_INSERT(
IN IN_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CSCTP_CODIGO%TYPE,
IN IN_CGG_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CGG_CSCTP_CODIGO%TYPE,
IN IN_CSCTP_NOMBRE SII.CGG_SECTOR_PRODUCTIVO.CSCTP_NOMBRE%TYPE,
IN IN_CSCTP_DESCRIPCION SII.CGG_SECTOR_PRODUCTIVO.CSCTP_DESCRIPCION%TYPE,
IN IN_CSCTP_ESTADO SII.CGG_SECTOR_PRODUCTIVO.CSCTP_ESTADO%TYPE,
IN IN_CSCTP_USUARIO_INSERT SII.CGG_SECTOR_PRODUCTIVO.CSCTP_USUARIO_INSERT%TYPE,
IN IN_CSCTP_USUARIO_UPDATE SII.CGG_SECTOR_PRODUCTIVO.CSCTP_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CSCTP_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_SECTOR_PRODUCTIVO','CSCTP_CODIGO','CSCTP') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CSCTP_CODIGO;
	END IF;
	INSERT INTO SII.CGG_SECTOR_PRODUCTIVO(
		CSCTP_CODIGO, 
		CGG_CSCTP_CODIGO, 
		CSCTP_NOMBRE, 
		CSCTP_DESCRIPCION, 
		CSCTP_ESTADO, 
		CSCTP_FECHA_INSERT, 
		CSCTP_USUARIO_INSERT, 
		CSCTP_FECHA_UPDATE, 
		CSCTP_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CGG_CSCTP_CODIGO, 
		IN_CSCTP_NOMBRE, 
		IN_CSCTP_DESCRIPCION, 
		IN_CSCTP_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CSCTP_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CSCTP_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_SECTOR_PRODUCTIVO
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CSCTP_CODIGO, 
		CGG_CSCTP_CODIGO, 
		CSCTP_NOMBRE, 
		CSCTP_DESCRIPCION, 
		CSCTP_ESTADO, 
		CSCTP_FECHA_INSERT, 
		CSCTP_USUARIO_INSERT, 
		CSCTP_FECHA_UPDATE, 
		CSCTP_USUARIO_UPDATE
	FROM SII.CGG_SECTOR_PRODUCTIVO
	WHERE CSCTP_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_SECTOR_PRODUCTIVO
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CSCTP_CODIGO, 
		CGG_CSCTP_CODIGO, 
		CSCTP_NOMBRE, 
		CSCTP_DESCRIPCION, 
		CSCTP_ESTADO, 
		CSCTP_FECHA_INSERT, 
		CSCTP_USUARIO_INSERT, 
		CSCTP_FECHA_UPDATE, 
		CSCTP_USUARIO_UPDATE
	FROM SII.CGG_SECTOR_PRODUCTIVO
	WHERE CSCTP_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CSCTP_NOMBRE, '''')||'' ''||COALESCE(CSCTP_DESCRIPCION, '''')||'' ''||COALESCE(CSCTP_ESTADO, FALSE)||'' ''||COALESCE(CSCTP_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CSCTP_USUARIO_INSERT, '''')||'' ''||COALESCE(CSCTP_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CSCTP_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_SECTOR_PRODUCTIVO
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_SECTOR_PRODUCTIVO
	WHERE CSCTP_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_SECTOR_PRODUCTIVO
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_SECTOR_PRODUCTIVO
	WHERE CSCTP_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CSCTP_NOMBRE, '''')||' '||COALESCE(CSCTP_DESCRIPCION, '''')||' '||COALESCE(CSCTP_ESTADO, FALSE)||' '||COALESCE(CSCTP_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CSCTP_USUARIO_INSERT, '''')||' '||COALESCE(CSCTP_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CSCTP_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_SECTOR_PRODUCTIVO
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @param IN_CGG_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO RELACIONADO
* @param IN_CSCTP_NOMBRE NOMBRE DEL SECTOR PRODUCTIVO
* @param IN_CSCTP_DESCRIPCION ALMACENA LA DESCRIPCION DEL SECTOR PRODUCTIVO
* @param IN_CSCTP_ESTADO ESTADO DEL REGISTRO
* @param IN_CSCTP_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_UPDATE(
IN IN_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CSCTP_CODIGO%TYPE,
IN IN_CGG_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CGG_CSCTP_CODIGO%TYPE,
IN IN_CSCTP_NOMBRE SII.CGG_SECTOR_PRODUCTIVO.CSCTP_NOMBRE%TYPE,
IN IN_CSCTP_DESCRIPCION SII.CGG_SECTOR_PRODUCTIVO.CSCTP_DESCRIPCION%TYPE,
IN IN_CSCTP_ESTADO SII.CGG_SECTOR_PRODUCTIVO.CSCTP_ESTADO%TYPE,
IN IN_CSCTP_USUARIO_UPDATE SII.CGG_SECTOR_PRODUCTIVO.CSCTP_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_SECTOR_PRODUCTIVO SET
		CGG_CSCTP_CODIGO = IN_CGG_CSCTP_CODIGO, 
		CSCTP_NOMBRE = IN_CSCTP_NOMBRE, 
		CSCTP_DESCRIPCION = IN_CSCTP_DESCRIPCION, 
		CSCTP_ESTADO = IN_CSCTP_ESTADO, 
		CSCTP_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CSCTP_USUARIO_UPDATE = IN_CSCTP_USUARIO_UPDATE
	WHERE
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_SECTOR_PRODUCTIVO
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_SELECT(
IN IN_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CSCTP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CSCTP_CODIGO, 
		CGG_CSCTP_CODIGO, 
		CSCTP_NOMBRE, 
		CSCTP_DESCRIPCION, 
		CSCTP_ESTADO, 
		CSCTP_FECHA_INSERT, 
		CSCTP_USUARIO_INSERT, 
		CSCTP_FECHA_UPDATE, 
		CSCTP_USUARIO_UPDATE
	FROM SII.CGG_SECTOR_PRODUCTIVO
	WHERE CSCTP_ESTADO = TRUE AND 
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_SECTOR_PRODUCTIVO
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_DELETE(
IN IN_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_SECTOR_PRODUCTIVO
	WHERE
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_SECTOR_PRODUCTIVO
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_DELETE_SOFT(
IN IN_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_SECTOR_PRODUCTIVO SET
		CSCTP_ESTADO = FALSE
	WHERE
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_S_CGG_SECTOR_PRODUCTIVO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_SECTOR_PRODUCTIVO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CGG_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO RELACIONADO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_S_CGG_SECTOR_PRODUCTIVO(
IN IN_CGG_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CGG_CSCTP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CSCTP_CODIGO, 
		CGG_CSCTP_CODIGO, 
		CSCTP_NOMBRE, 
		CSCTP_DESCRIPCION, 
		CSCTP_ESTADO, 
		CSCTP_FECHA_INSERT, 
		CSCTP_USUARIO_INSERT, 
		CSCTP_FECHA_UPDATE, 
		CSCTP_USUARIO_UPDATE
	FROM SII.CGG_SECTOR_PRODUCTIVO
	WHERE CSCTP_ESTADO = TRUE AND 
		CGG_CSCTP_CODIGO = IN_CGG_CSCTP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_D_CGG_SECTOR_PRODUCTIVO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_SECTOR_PRODUCTIVO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CGG_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO RELACIONADO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_D_CGG_SECTOR_PRODUCTIVO(
IN IN_CGG_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CGG_CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_SECTOR_PRODUCTIVO
	WHERE
		CGG_CSCTP_CODIGO = IN_CGG_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_SECTOR_PRODUCTIVO_D_CGG_SECTOR_PRODUCTIVO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_SECTOR_PRODUCTIVO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CGG_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO RELACIONADO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_SECTOR_PRODUCTIVO_DS_CGG_SECTOR_PRODUCTIVO(
IN IN_CGG_CSCTP_CODIGO SII.CGG_SECTOR_PRODUCTIVO.CGG_CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_SECTOR_PRODUCTIVO SET
		csctp_estado = false
	WHERE
		CGG_CSCTP_CODIGO = IN_CGG_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

