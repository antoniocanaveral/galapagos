/**
* FUNCION SII.F_CGG_BUZON_CORREO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_BUZON_CORREO.
* @param IN_CBZC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO BUZON DE CORREO DE SALIDA
* @param IN_CBZC_DESTINATARIO INFORMACION DEL DESTINATARIO DEL CORREO ELECTRONICO
* @param IN_CBZC_ASUNTO ASUNTO DEL CORREO ELECTRONICO
* @param IN_CBZC_MENSAJE CUERPO O CONTENIDO DEL CORREO ELECTRONICO
* @param IN_CBZC_TIPO_CONTENIDO TIPO DE CONTENIDO PAAR EL CUERPO DEL MENSAJE
0 .- TEXTO PLANO
1 .- CONTENIDO HTML
* @param IN_CBZC_NUMERO_INTENTOS CANTIDAD DE PRUEBAS DE ENVIO FALLIDAS 
* @param IN_CBZC_ENVIADO INDICADOR SI EL CORREO FUE ENVIADO
* @param IN_CBZC_ESTADO ESTADO DEL REGISTRO
* @param IN_CBZC_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CBZC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_INSERT(
IN IN_CBZC_CODIGO SII.CGG_BUZON_CORREO.CBZC_CODIGO%TYPE,
IN IN_CBZC_DESTINATARIO SII.CGG_BUZON_CORREO.CBZC_DESTINATARIO%TYPE,
IN IN_CBZC_ASUNTO SII.CGG_BUZON_CORREO.CBZC_ASUNTO%TYPE,
IN IN_CBZC_MENSAJE SII.CGG_BUZON_CORREO.CBZC_MENSAJE%TYPE,
IN IN_CBZC_TIPO_CONTENIDO SII.CGG_BUZON_CORREO.CBZC_TIPO_CONTENIDO%TYPE,
IN IN_CBZC_NUMERO_INTENTOS SII.CGG_BUZON_CORREO.CBZC_NUMERO_INTENTOS%TYPE,
IN IN_CBZC_ENVIADO SII.CGG_BUZON_CORREO.CBZC_ENVIADO%TYPE,
IN IN_CBZC_ESTADO SII.CGG_BUZON_CORREO.CBZC_ESTADO%TYPE,
IN IN_CBZC_USUARIO_INSERT SII.CGG_BUZON_CORREO.CBZC_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CBZC_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_BUZON_CORREO','CBZC_CODIGO','CBZC') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CBZC_CODIGO;
	END IF;
	INSERT INTO SII.CGG_BUZON_CORREO(
		CBZC_CODIGO, 
		CBZC_DESTINATARIO, 
		CBZC_ASUNTO, 
		CBZC_MENSAJE, 
		CBZC_TIPO_CONTENIDO, 
		CBZC_NUMERO_INTENTOS, 
		CBZC_ENVIADO, 
		CBZC_ESTADO, 
		CBZC_FECHA_INSERT, 
		CBZC_USUARIO_INSERT, 
		CBZC_FECHA_UPDATE, 
		CBZC_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CBZC_DESTINATARIO, 
		IN_CBZC_ASUNTO, 
		IN_CBZC_MENSAJE, 
		IN_CBZC_TIPO_CONTENIDO, 
		IN_CBZC_NUMERO_INTENTOS, 
		IN_CBZC_ENVIADO, 
		IN_CBZC_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CBZC_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CBZC_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_BUZON_CORREO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_BUZON_CORREO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CBZC_CODIGO, 
		CBZC_DESTINATARIO, 
		CBZC_ASUNTO, 
		CBZC_MENSAJE, 
		CBZC_TIPO_CONTENIDO, 
		CBZC_NUMERO_INTENTOS, 
		CBZC_ENVIADO, 
		CBZC_ESTADO, 
		CBZC_FECHA_INSERT, 
		CBZC_USUARIO_INSERT, 
		CBZC_FECHA_UPDATE, 
		CBZC_USUARIO_UPDATE
	FROM SII.CGG_BUZON_CORREO
	WHERE CBZC_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_BUZON_CORREO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_BUZON_CORREO QUE NO HAN SIDO ENVIADOS.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_SELECT_AS(
IN IN_USER_NAME VARCHAR,
IN IN_CBZC_ENVIADO BOOLEAN
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CBZC_CODIGO, 
		CBZC_DESTINATARIO, 
		CBZC_ASUNTO, 
		CBZC_MENSAJE, 
		CBZC_TIPO_CONTENIDO, 
		CBZC_NUMERO_INTENTOS, 
		CBZC_ENVIADO, 
		CBZC_ESTADO, 
		CBZC_FECHA_INSERT, 
		CBZC_USUARIO_INSERT, 
		CBZC_FECHA_UPDATE, 
		CBZC_USUARIO_UPDATE
	FROM SII.CGG_BUZON_CORREO
	WHERE CBZC_ESTADO AND CBZC_ENVIADO = IN_CBZC_ENVIADO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_BUZON_CORREO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_BUZON_CORREO.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CBZC_CODIGO, 
		CBZC_DESTINATARIO, 
		CBZC_ASUNTO, 
		NULL,
		CBZC_TIPO_CONTENIDO, 
		CBZC_NUMERO_INTENTOS, 
		CBZC_ENVIADO, 
		CBZC_ESTADO, 
		CBZC_FECHA_INSERT, 
		CBZC_USUARIO_INSERT, 
		CBZC_FECHA_UPDATE, 
		CBZC_USUARIO_UPDATE
	FROM SII.CGG_BUZON_CORREO
	WHERE CBZC_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CBZC_DESTINATARIO, '''')||'' ''||COALESCE(CBZC_ASUNTO, '''')||'' ''||COALESCE(CBZC_MENSAJE, '''')||'' ''||COALESCE(CBZC_TIPO_CONTENIDO, '''')||'' ''||COALESCE(CBZC_NUMERO_INTENTOS, 0)||'' ''||COALESCE(CBZC_ENVIADO, FALSE)) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_BUZON_CORREO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_BUZON_CORREO.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_BUZON_CORREO
	WHERE CBZC_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_BUZON_CORREO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_BUZON_CORREO
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_BUZON_CORREO
	WHERE CBZC_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CBZC_DESTINATARIO, '')||' '||COALESCE(CBZC_ASUNTO, '''')||' '||COALESCE(CBZC_MENSAJE, '')||' '||COALESCE(CBZC_TIPO_CONTENIDO, '')||' '||COALESCE(CBZC_NUMERO_INTENTOS, 0)||' '||COALESCE(CBZC_ENVIADO, FALSE)) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_BUZON_CORREO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_BUZON_CORREO.
* @param IN_CBZC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO BUZON DE CORREO DE SALIDA
* @param IN_CBZC_DESTINATARIO INFORMACION DEL DESTINATARIO DEL CORREO ELECTRONICO
* @param IN_CBZC_ASUNTO ASUNTO DEL CORREO ELECTRONICO
* @param IN_CBZC_MENSAJE CUERPO O CONTENIDO DEL CORREO ELECTRONICO
* @param IN_CBZC_TIPO_CONTENIDO TIPO DE CONTENIDO PAAR EL CUERPO DEL MENSAJE
0 .- TEXTO PLANO
1 .- CONTENIDO HTML
* @param IN_CBZC_NUMERO_INTENTOS CANTIDAD DE PRUEBAS DE ENVIO FALLIDAS 
* @param IN_CBZC_ENVIADO INDICADOR SI EL CORREO FUE ENVIADO
* @param IN_CBZC_ESTADO ESTADO DEL REGISTRO
* @param IN_CBZC_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_UPDATE(
IN IN_CBZC_CODIGO SII.CGG_BUZON_CORREO.CBZC_CODIGO%TYPE,
IN IN_CBZC_DESTINATARIO SII.CGG_BUZON_CORREO.CBZC_DESTINATARIO%TYPE,
IN IN_CBZC_ASUNTO SII.CGG_BUZON_CORREO.CBZC_ASUNTO%TYPE,
IN IN_CBZC_MENSAJE SII.CGG_BUZON_CORREO.CBZC_MENSAJE%TYPE,
IN IN_CBZC_TIPO_CONTENIDO SII.CGG_BUZON_CORREO.CBZC_TIPO_CONTENIDO%TYPE,
IN IN_CBZC_NUMERO_INTENTOS SII.CGG_BUZON_CORREO.CBZC_NUMERO_INTENTOS%TYPE,
IN IN_CBZC_ENVIADO SII.CGG_BUZON_CORREO.CBZC_ENVIADO%TYPE,
IN IN_CBZC_ESTADO SII.CGG_BUZON_CORREO.CBZC_ESTADO%TYPE,
IN IN_CBZC_USUARIO_UPDATE SII.CGG_BUZON_CORREO.CBZC_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_BUZON_CORREO SET
		CBZC_DESTINATARIO = IN_CBZC_DESTINATARIO, 
		CBZC_ASUNTO = IN_CBZC_ASUNTO, 
		CBZC_MENSAJE = IN_CBZC_MENSAJE, 
		CBZC_TIPO_CONTENIDO = IN_CBZC_TIPO_CONTENIDO, 
		CBZC_NUMERO_INTENTOS = IN_CBZC_NUMERO_INTENTOS, 
		CBZC_ENVIADO = IN_CBZC_ENVIADO, 
		CBZC_ESTADO = IN_CBZC_ESTADO, 
		CBZC_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CBZC_USUARIO_UPDATE = IN_CBZC_USUARIO_UPDATE
	WHERE
		CBZC_CODIGO = IN_CBZC_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_BUZON_CORREO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_BUZON_CORREO.
* @param IN_CBZC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO BUZON DE CORREO DE SALIDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_SELECT(
IN IN_CBZC_CODIGO SII.CGG_BUZON_CORREO.CBZC_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CBZC_CODIGO, 
		CBZC_DESTINATARIO, 
		CBZC_ASUNTO, 
		CBZC_MENSAJE, 
		CBZC_TIPO_CONTENIDO, 
		CBZC_NUMERO_INTENTOS, 
		CBZC_ENVIADO, 
		CBZC_ESTADO, 
		CBZC_FECHA_INSERT, 
		CBZC_USUARIO_INSERT, 
		CBZC_FECHA_UPDATE, 
		CBZC_USUARIO_UPDATE
	FROM SII.CGG_BUZON_CORREO
	WHERE CBZC_ESTADO = TRUE AND 
		CBZC_CODIGO = IN_CBZC_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_BUZON_CORREO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_BUZON_CORREO.
* @param IN_CBZC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO BUZON DE CORREO DE SALIDA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_DELETE(
IN IN_CBZC_CODIGO SII.CGG_BUZON_CORREO.CBZC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_BUZON_CORREO
	WHERE
		CBZC_CODIGO = IN_CBZC_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_BUZON_CORREO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_BUZON_CORREO.
* @param IN_CBZC_CODIGO IDENTIFICATIVO UNICO DE REGISTRO BUZON DE CORREO DE SALIDA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_BUZON_CORREO_DELETE_SOFT(
IN IN_CBZC_CODIGO SII.CGG_BUZON_CORREO.CBZC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_BUZON_CORREO SET
		CBZC_ESTADO = FALSE
	WHERE
		CBZC_CODIGO = IN_CBZC_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

