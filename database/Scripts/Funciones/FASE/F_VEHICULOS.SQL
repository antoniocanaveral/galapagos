/**
* FUNCION SII.F_VEHICULO_INGRESO
* ASIGNACION DE UN VEHICULO A UN PERSONA CUANDO FINALIZA UN TRAMITE DE INGRESO DE VEHICULO.
* @param IN_CRSEG_CODIGO CODIGO DEL SEGUIMIENTO QUE LLAMA A LA FUNCION.
* @param IN_USER_NAME USUARIO DEL SERVIDOR DE APLICACIONES.
* @returns MENSAJE INFORMATIVO
*/
CREATE OR REPLACE FUNCTION SII.F_VEHICULO_INGRESO(
IN IN_CRSEG_CODIGO SII.CGG_RES_SEGUIMIENTO.CRSEG_CODIGO%TYPE, 
IN IN_USER_NAME VARCHAR
)RETURNS VARCHAR AS
$$
DECLARE
TMP_RESULT INT;
TMP_VEHICULO VARCHAR;
TMP_MOTOR VARCHAR;
TMP_CRPER_CODIGO VARCHAR;
TMP_CRPJR_CODIGO VARCHAR;
TMP_NUMERO INT;
TMP_DIAS INT;
TMP_FECHA_SALIDA TIMESTAMP WITH TIME ZONE;
--FECHA DE DESPACHO DEL SEGUIMIENTO
TMP_FECHA_DESPACHO TIMESTAMP WITH TIME ZONE;
TMP_CODIGO VARCHAR;
--FECHA DE CONFIRMACION DE ASIGNACION UN MOTOR A UN VEHICULO
TMP_FECHA_ASIGNACION TIMESTAMP WITH TIME ZONE;
BEGIN
	SELECT SGM.CRSEG_TIPO_RESPUESTA, 
		SGM.CRSEG_FECHA_DESPACHO,
		TRM.CVVEH_CODIGO, 
		TRM.CVMTR_CODIGO,
		TRM.CRPER_CODIGO,
		TRM.CRPJR_CODIGO,
		TRM.CRTRA_NUMERO,
		TRM.CRTRA_DIAS_PERMANENCIA,
		TRM.CRTRA_FECHA_SALIDA
	INTO TMP_RESULT, 
		TMP_FECHA_DESPACHO,
		TMP_VEHICULO, 
		TMP_MOTOR,
		TMP_CRPER_CODIGO,
		TMP_CRPJR_CODIGO,
		TMP_NUMERO,
		TMP_DIAS,
		TMP_FECHA_SALIDA
	FROM SII.CGG_RES_SEGUIMIENTO SGM 
	INNER JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = SGM.CRTRA_CODIGO
	WHERE CRSEG_CODIGO = IN_CRSEG_CODIGO;
	
	--EL TRAMITE DE INGRESO DEL VEHICULO O MOTOR HA SIDO APROBADO
	IF (TMP_RESULT = 1) THEN
		--TRAMITE DE MOTOR
		IF (TMP_MOTOR IS NOT NULL AND TMP_VEHICULO IS NOT NULL) THEN
			SELECT SII.F_CGG_VEH_VEHICULO_MOTOR_INSERT(
				'KEYGEN'::VARCHAR,
				TMP_VEHICULO,
				TMP_MOTOR,
				CURRENT_TIMESTAMP,
				('Tramite No. '||TMP_NUMERO)::VARCHAR,
				TRUE,
				IN_USER_NAME
			) INTO TMP_CODIGO;
		--TRAMITE DE VEHICULO
		ELSIF (TMP_MOTOR IS NULL AND TMP_VEHICULO IS NOT NULL) THEN
			SELECT SII.F_CGG_VEH_HISTORIAL_INSERT(
				'KEYGEN', 
				TMP_VEHICULO,
				TMP_CRPER_CODIGO,
				TMP_CRPJR_CODIGO,
				CURRENT_TIMESTAMP,
				TRUE,
				'LEGALIZACION POR TRAMITE N. '||TMP_NUMERO,
				'',
				TRUE,
				IN_USER_NAME
			) INTO TMP_CODIGO;
			IF (TMP_FECHA_SALIDA IS NOT NULL) THEN
				TMP_DIAS := TMP_FECHA_SALIDA::DATE - TMP_FECHA_DESPACHO::DATE;
			END IF;
			UPDATE SII.CGG_VEH_VEHICULO SET 
				CVVEH_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CVVEH_USUARIO_UPDATE = IN_USER_NAME,
				CVVEH_TIPO_INGRESO = CASE WHEN TMP_DIAS = 0 THEN 0 ELSE 1 END,
				CVVEH_TIEMPO_ESTADIA = TMP_DIAS
			WHERE CVVEH_CODIGO = TMP_VEHICULO;
			
			UPDATE SII.CGG_RES_PERSONA SET 
				CRPER_CUPO_VEHICULAR = FALSE,
				CRPER_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CRPER_USUARIO_UPDATE = IN_USER_NAME
			WHERE CRPER_CODIGO = TMP_CRPER_CODIGO;
		END IF;
	END IF;
	RETURN 'EL vehiculo ha sido registrado y legalizado.';
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_VEHICULO_SALIDA
* ASIGNACION DE UN VEHICULO A UN PERSONA CUANDO FINALIZA UN TRAMITE DE INGRESO DE VEHICULO.
* @param IN_CRSEG_CODIGO CODIGO DEL SEGUIMIENTO QUE LLAMA A LA FUNCION.
* @param IN_USER_NAME USUARIO DEL SERVIDOR DE APLICACIONES.
* @returns MENSAJE INFORMATIVO
*/
CREATE OR REPLACE FUNCTION SII.F_VEHICULO_SALIDA(
IN IN_CRSEG_CODIGO SII.CGG_RES_SEGUIMIENTO.CRSEG_CODIGO%TYPE, 
IN IN_USER_NAME VARCHAR
)RETURNS VARCHAR AS
$$
DECLARE
TMP_RESULT INT;
TMP_VEHICULO VARCHAR;
TMP_MOTOR VARCHAR;
TMP_CRPER_CODIGO VARCHAR;
TMP_CRPJR_CODIGO VARCHAR;
TMP_NUMERO INT;
TMP_DIAS INT;
TMP_FECHA_SALIDA TIMESTAMP WITH TIME ZONE;
TMP_FECHA_DESPACHO TIMESTAMP WITH TIME ZONE;
TMP_MSG VARCHAR;
BEGIN
	
	SELECT SGM.CRSEG_TIPO_RESPUESTA, 
		SGM.CRSEG_FECHA_DESPACHO,
		TRM.CVVEH_CODIGO, 
		TRM.CVMTR_CODIGO,
		TRM.CRPER_CODIGO,
		TRM.CRPJR_CODIGO,
		TRM.CRTRA_NUMERO,
		TRM.CRTRA_DIAS_PERMANENCIA,
		TRM.CRTRA_FECHA_SALIDA
	INTO TMP_RESULT, 
		TMP_FECHA_DESPACHO,
		TMP_VEHICULO, 
		TMP_MOTOR,
		TMP_CRPER_CODIGO,
		TMP_CRPJR_CODIGO,
		TMP_NUMERO,
		TMP_DIAS,
		TMP_FECHA_SALIDA
	FROM SII.CGG_RES_SEGUIMIENTO SGM 
	INNER JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = SGM.CRTRA_CODIGO
	WHERE CRSEG_CODIGO = IN_CRSEG_CODIGO;
	
	TMP_MSG :='Procesando salida del vehiculo ...';
	
	--EL TRAMITE DE SALIDA DEL VEHICULO HA SIDO APROBADO
	IF (TMP_RESULT = 1) THEN
		--TRAMITE DE MOTOR
		IF (TMP_MOTOR IS NOT NULL AND TMP_VEHICULO IS NOT NULL) THEN
			UPDATE SII.CGG_VEH_MOTOR SET 
				CVMTR_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CVMTR_USUARIO_UPDATE = IN_USER_NAME,
				CVMTR_SALIO = TRUE,
				CVMTR_FECHA_SALIDA = TMP_FECHA_SALIDA
			WHERE CVMTR_CODIGO = TMP_MOTOR;
			TMP_MSG := 'Se ha registrado la salida del motor.';
		--TRAMITE DE VEHICULO
		ELSIF (TMP_MOTOR IS NULL AND TMP_VEHICULO IS NOT NULL) THEN
			UPDATE SII.CGG_VEH_HISTORIAL SET CVHST_PROPIETARIO = FALSE,
				CVHST_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CVHST_USUARIO_UPDATE = IN_USER_NAME
			WHERE CVHST_PROPIETARIO AND 
				CRPER_CODIGO = TMP_CRPER_CODIGO AND
				CVVEH_CODIGO = TMP_VEHICULO;
				
			UPDATE SII.CGG_VEH_VEHICULO SET 
				CVVEH_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CVVEH_USUARIO_UPDATE = IN_USER_NAME,
				CVVEH_SALIO = TRUE,
				CVVEH_FECHA_SALIDA = TMP_FECHA_SALIDA
			WHERE CVVEH_CODIGO = TMP_VEHICULO;
			
			UPDATE SII.CGG_RES_PERSONA SET CRPER_CUPO_VEHICULAR = TRUE,
				CRPER_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CRPER_USUARIO_UPDATE = IN_USER_NAME
			WHERE CRPER_CODIGO = TMP_CRPER_CODIGO;
			TMP_MSG := 'Se ha registrado la salida del vehiculo.';
		END IF;
	END IF;
	RETURN TMP_MSG;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_VEHICULO_TRASPASO
* ASIGNACION DE UN VEHICULO A UN PERSONA CUANDO FINALIZA UN TRAMITE DE INGRESO DE VEHICULO.
* @param IN_CRSEG_CODIGO CODIGO DEL SEGUIMIENTO QUE LLAMA A LA FUNCION.
* @param IN_USER_NAME USUARIO DEL SERVIDOR DE APLICACIONES.
* @returns MENSAJE INFORMATIVO
*/
CREATE OR REPLACE FUNCTION SII.F_VEHICULO_TRASPASO(
IN IN_CRSEG_CODIGO SII.CGG_RES_SEGUIMIENTO.CRSEG_CODIGO%TYPE, 
IN IN_USER_NAME VARCHAR
)RETURNS VARCHAR AS
$$
DECLARE
TMP_RESULT INT;
TMP_VEHICULO VARCHAR;
TMP_MOTOR VARCHAR;
TMP_AUSPICIANTE VARCHAR;
TMP_CRPJR_CODIGO VARCHAR;
TMP_NUMERO INT;
TMP_DIAS INT;
TMP_FECHA_SALIDA TIMESTAMP WITH TIME ZONE;
TMP_FECHA_DESPACHO TIMESTAMP WITH TIME ZONE;
TMP_BENEFICIARIO VARCHAR;
TMP_MSG VARCHAR;
TMP_CODIGO VARCHAR;
BEGIN
	SELECT SGM.CRSEG_TIPO_RESPUESTA, 
		SGM.CRSEG_FECHA_DESPACHO,
		TRM.CVVEH_CODIGO, 
		TRM.CVMTR_CODIGO,
		TRM.CRPER_CODIGO,
		TRM.CGG_CRPER_CODIGO,
		TRM.CRPJR_CODIGO,
		TRM.CRTRA_NUMERO,
		TRM.CRTRA_DIAS_PERMANENCIA,
		TRM.CRTRA_FECHA_SALIDA
	INTO TMP_RESULT, 
		TMP_FECHA_DESPACHO,
		TMP_VEHICULO, 
		TMP_MOTOR,
		TMP_AUSPICIANTE,
		TMP_BENEFICIARIO,
		TMP_CRPJR_CODIGO,
		TMP_NUMERO,
		TMP_DIAS,
		TMP_FECHA_SALIDA
	FROM SII.CGG_RES_SEGUIMIENTO SGM 
	INNER JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = SGM.CRTRA_CODIGO
	WHERE CRSEG_CODIGO = IN_CRSEG_CODIGO;
	
	TMP_MSG :='Procesando traspaso del vehiculo ...';
	--EL TRAMITE DE INGRESO DEL VEHICULO HA SIDO APROBADO
	IF (TMP_RESULT = 1) THEN
		--TRAMITE DE MOTOR
		IF (TMP_MOTOR IS NOT NULL AND TMP_VEHICULO IS NOT NULL) THEN
		--TRAMITE DE VEHICULO
		ELSIF (TMP_BENEFICIARIO IS NOT NULL AND TMP_MOTOR IS NULL AND TMP_VEHICULO IS NOT NULL) THEN
			SELECT SII.F_CGG_VEH_HISTORIAL_INSERT(
				'KEYGEN', 
				TMP_VEHICULO,
				TMP_BENEFICIARIO,
				TMP_CRPJR_CODIGO,
				CURRENT_TIMESTAMP,
				TRUE,
				'Traspaso por tramite No. '||TMP_NUMERO,
				'',
				TRUE,
				IN_USER_NAME
			) INTO TMP_CODIGO;
			UPDATE SII.CGG_VEH_HISTORIAL SET CVHST_PROPIETARIO = FALSE,
				CVHST_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CVHST_USUARIO_UPDATE = IN_USER_NAME
			WHERE CVVEH_CODIGO = TMP_VEHICULO AND CRPER_CODIGO = TMP_AUSPICIANTE;
			
			UPDATE SII.CGG_RES_PERSONA SET CRPER_CUPO_VEHICULAR = FALSE,
				CRPER_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CRPER_USUARIO_UPDATE = IN_USER_NAME
			WHERE CRPER_CODIGO = TMP_BENEFICIARIO;
			
			UPDATE SII.CGG_RES_PERSONA SET CRPER_CUPO_VEHICULAR = TRUE,
				CRPER_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CRPER_USUARIO_UPDATE = IN_USER_NAME
			WHERE CRPER_CODIGO = TMP_AUSPICIANTE;
			
			TMP_MSG :='Traspaso del vehiculo realizado.';
		END IF;
	END IF;
	RETURN TMP_MSG;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_VEHICULO_REEMPLAZO
* REEMPLAZO DE UN VEHICULO O MOTOR DE UNA PERSONA CUANDO FINALIZA UN TRAMITE.
* @param IN_CRSEG_CODIGO CODIGO DEL SEGUIMIENTO QUE LLAMA A LA FUNCION.
* @param IN_USER_NAME USUARIO DEL SERVIDOR DE APLICACIONES.
* @returns MENSAJE INFORMATIVO
*/
CREATE OR REPLACE FUNCTION SII.F_VEHICULO_REEMPLAZO(
IN IN_CRSEG_CODIGO SII.CGG_RES_SEGUIMIENTO.CRSEG_CODIGO%TYPE, 
IN IN_USER_NAME VARCHAR
)RETURNS VARCHAR AS
$$
DECLARE
TMP_RESULT INT;
TMP_VEHICULO VARCHAR;
TMP_MOTOR VARCHAR;
TMP_CRPER_CODIGO VARCHAR;
TMP_CRPJR_CODIGO VARCHAR;
TMP_NUMERO INT;
TMP_DIAS INT;
TMP_FECHA_SALIDA TIMESTAMP WITH TIME ZONE;
--FECHA DE DESPACHO DEL SEGUIMIENTO
TMP_FECHA_DESPACHO TIMESTAMP WITH TIME ZONE;
TMP_CODIGO VARCHAR;
--FECHA DE CONFIRMACION DE ASIGNACION UN MOTOR A UN VEHICULO
TMP_FECHA_ASIGNACION TIMESTAMP WITH TIME ZONE;
--CODIGO DEL MOTOR REEMPLAZADO
TMP_CGG_CVMTR_CODIGO VARCHAR;
--CODIGO DEL VEHICULO REEMPLAZADO
TMP_CGG_CVVEH_CODIGO VARCHAR;
BEGIN
	SELECT SGM.CRSEG_TIPO_RESPUESTA, 
		SGM.CRSEG_FECHA_DESPACHO,
		TRM.CVVEH_CODIGO, 
		TRM.CVMTR_CODIGO,
		TRM.CRPER_CODIGO,
		TRM.CRPJR_CODIGO,
		TRM.CRTRA_NUMERO,
		TRM.CRTRA_DIAS_PERMANENCIA,
		TRM.CRTRA_FECHA_SALIDA,
		TRM.CGG_CVMTR_CODIGO,
		TRM.CGG_CVVEH_CODIGO
	INTO TMP_RESULT, 
		TMP_FECHA_DESPACHO,
		TMP_VEHICULO, 
		TMP_MOTOR,
		TMP_CRPER_CODIGO,
		TMP_CRPJR_CODIGO,
		TMP_NUMERO,
		TMP_DIAS,
		TMP_FECHA_SALIDA,
		TMP_CGG_CVMTR_CODIGO,
		TMP_CGG_CVVEH_CODIGO
	FROM SII.CGG_RES_SEGUIMIENTO SGM 
	INNER JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = SGM.CRTRA_CODIGO
	WHERE CRSEG_CODIGO = IN_CRSEG_CODIGO;
	
	--EL TRAMITE DE INGRESO DEL VEHICULO O MOTOR HA SIDO APROBADO
	IF (TMP_RESULT = 1) THEN
		--TRAMITE DE MOTOR
		IF (TMP_MOTOR IS NOT NULL AND TMP_VEHICULO IS NOT NULL) THEN
			SELECT SII.F_CGG_VEH_VEHICULO_MOTOR_INSERT(
				'KEYGEN'::VARCHAR,
				TMP_VEHICULO,
				TMP_MOTOR,
				CURRENT_TIMESTAMP,
				('Tramite No. '||TMP_NUMERO)::VARCHAR,
				TRUE,
				IN_USER_NAME
			) INTO TMP_CODIGO;
			
			UPDATE SII.CGG_VEH_MOTOR SET 
				CVMTR_SALIO = TRUE,
				CVMTR_FECHA_SALIDA = CURRENT_TIMESTAMP,
				CVMTR_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CVMTR_USUARIO_UPDATE = IN_USER_NAME
			WHERE CGG_CVMTR_CODIGO = TMP_CGG_CVMTR_CODIGO;
		--TRAMITE DE VEHICULO
		ELSIF (TMP_MOTOR IS NULL AND TMP_VEHICULO IS NOT NULL) THEN
			SELECT SII.F_CGG_VEH_HISTORIAL_INSERT(
				'KEYGEN', 
				TMP_VEHICULO,
				TMP_CRPER_CODIGO,
				TMP_CRPJR_CODIGO,
				CURRENT_TIMESTAMP,
				TRUE,
				'Tramite No. '||TMP_NUMERO,
				'',
				TRUE,
				IN_USER_NAME
			) INTO TMP_CODIGO;
			IF (TMP_FECHA_SALIDA IS NOT NULL) THEN
				TMP_DIAS := TMP_FECHA_SALIDA::DATE - TMP_FECHA_DESPACHO::DATE;
			END IF;
			UPDATE SII.CGG_VEH_VEHICULO SET 
				CVVEH_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CVVEH_USUARIO_UPDATE = IN_USER_NAME,
				CVVEH_TIPO_INGRESO = CASE WHEN TMP_DIAS = 0 THEN 0 ELSE 1 END,
				CVVEH_TIEMPO_ESTADIA = TMP_DIAS
			WHERE CVVEH_CODIGO = TMP_VEHICULO;
			
			UPDATE SII.CGG_RES_PERSONA SET 
				CRPER_CUPO_VEHICULAR = FALSE,
				CRPER_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CRPER_USUARIO_UPDATE = IN_USER_NAME
			WHERE CRPER_CODIGO = TMP_CRPER_CODIGO;
			
			UPDATE SII.CGG_VEH_VEHICULO SET 
				CVVEH_SALIO = TRUE,
				CVVEH_FECHA_SALIDA = CURRENT_TIMESTAMP,
				CVVEH_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CVVEH_USUARIO_UPDATE = IN_USER_NAME
			WHERE CVVEH_CODIGO = TMP_CGG_CVVEH_CODIGO;
			
			UPDATE SII.CGG_VEH_HISTORIAL SET CVHST_PROPIETARIO = FALSE,
				CVHST_FECHA_UPDATE = CURRENT_TIMESTAMP,
				CVHST_USUARIO_UPDATE = IN_USER_NAME
			WHERE CVVEH_CODIGO = TMP_CGG_CVVEH_CODIGO AND 
				CRPER_CODIGO = TMP_CRPER_CODIGO;
		END IF;
	END IF;
	RETURN 'Se ha registrado el reemplazo del vehiculo.';
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;