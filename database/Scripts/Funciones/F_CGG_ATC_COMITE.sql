/**
* F_CGG_ATC_COMITE_MIEMBROS
* SELECCIONA LOS MIEMBROS DEL COMITE
* @param IN_CRCOM_CODIGO CODIGO CORRESPONDIENTE A COMITE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION sii.F_CGG_ATC_COMITE_MIEMBROS(
	IN IN_CRCOM_CODIGO VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR 
	SELECT 	
		SII.F_CGG_NOMBRE_USUARIO_BY_ID( CUSU_CODIGO ,'0' ) AS NOMBRE_PERSONA,
		CRMBC_TITULAR,
		CRMBC_AUTORIZADO
	FROM CGG_RES_CARGO_COMITE CRG
	INNER JOIN SII.CGG_RES_MIEMBRO_COMITE M ON (CRG.CRCRG_CODIGO = M.CRCRG_CODIGO)
	WHERE CRG.CRCOM_CODIGO = IN_CRCOM_CODIGO AND CRCRG_ESTADO AND CRMBC_ESTADO
	ORDER BY CRMBC_TITULAR DESC,NOMBRE_PERSONA ASC;
	RETURN NEXT TMP_REF;
END;
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* F_CGG_ATC_COMITE_RESOLUCIONES_COUNT
* OBTIENE EL TOTAL DE REGISTROS DE RESOLUCIONES DEL COMITE
* @param IN_CRCOM_CODIGO CODIGO CORRESPONDIENTE A COMITE
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION sii.F_CGG_ATC_COMITE_RESOLUCIONES_COUNT(
	IN IN_CRCOM_CODIGO VARCHAR,
	IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
	TMP_COUNT INT;
BEGIN
	IF (LENGTH( TRIM(IN_FIND_TEXT)) = 0) THEN
		SELECT 
			COUNT(CRCOM_CODIGO) INTO TMP_COUNT
		FROM CGG_RES_SESION_COMITE S
		INNER JOIN SII.CGG_RES_RESOLUCION R ON (S.CRSSC_CODIGO = R.CRSSC_CODIGO)
		WHERE CRCOM_CODIGO = IN_CRCOM_CODIGO AND CRSSC_ESTADO AND CRRES_ESTADO_RESOLUCION IN (0,1,2);
	ELSE
		SELECT 
			COUNT(CRCOM_CODIGO) INTO TMP_COUNT
		FROM CGG_RES_SESION_COMITE S
		INNER JOIN SII.CGG_RES_RESOLUCION R ON (S.CRSSC_CODIGO = R.CRSSC_CODIGO)
		WHERE CRCOM_CODIGO = IN_CRCOM_CODIGO AND CRSSC_ESTADO AND CRRES_ESTADO_RESOLUCION IN (0,1,2)
		AND SII.F_STRING_IN(IN_FIND_TEXT,
			COALESCE(CRRES_NUMERO_RESOLUCION, '')||' '||
			COALESCE(CRRES_EXTRACTO_RESOLUCION, '')
		) = 1;
	END IF;
	RETURN TMP_COUNT;
END;
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* F_CGG_ATC_COMITE_RESOLUCIONES
* SELECCIONA LAS RESOLUCIONES DEL COMITE
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION sii.F_CGG_ATC_COMITE_RESOLUCIONES(
	IN IN_CRCOM_CODIGO VARCHAR,
	IN IN_START_INDEX INT,
	IN IN_LIMIT INT,
	IN IN_SORT_FIELD_NAME VARCHAR,
	IN IN_DIRECTION VARCHAR,
	IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT 
		CISLA.CISLA_NOMBRE,
		CRSSC_FECHA_REUNION::DATE,
		CRSSC_FECHA_FINALIZACION::DATE,
		CRRES_NUMERO_RESOLUCION,
		CRRES_FECHA_EJECUCION::DATE,
		CRRES_EXTRACTO_RESOLUCION,
		CRRES_ESTADO_RESOLUCION
	FROM SII.CGG_RES_SESION_COMITE CRRES
	INNER JOIN SII.CGG_ISLA CISLA ON (CISLA.CISLA_CODIGO = CRRES.CISLA_CODIGO)
	INNER JOIN SII.CGG_RES_RESOLUCION R ON (CRRES.CRSSC_CODIGO = R.CRSSC_CODIGO)
	WHERE CRCOM_CODIGO = '''||IN_CRCOM_CODIGO||''' AND CRSSC_ESTADO AND CRRES_ESTADO_RESOLUCION IN (0,1,2)
	AND CRRES_NUMERO_RESOLUCION IS NOT NULL
	AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
		COALESCE(CRRES_NUMERO_RESOLUCION, '''')||'' ''||
		COALESCE(CISLA_NOMBRE, '''')||'' ''||
		COALESCE(CRRES_EXTRACTO_RESOLUCION, '''')
	) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END;
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;
