/**
* FUNCION SII.F_CGG_KDX_ANULACION_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_KDX_ANULACION.
* @param IN_CKANL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE UNA ANULACION
* @param IN_CKASG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ASIGNACION
* @param IN_CKUPV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO PUNTO DE VENTA
* @param IN_CKANL_NUMERO_ANULACION NUMERO SECUENCIAL UNICO DE IDENTIFICACION DE LA ASIGNACION
* @param IN_CKANL_FECHA_ANULACION FECHA DE RECEPCION DE LAS ESPECIES
* @param IN_CKANL_CANTIDAD CANTIDAD DE ESPECIES
* @param IN_CKANL_PRECIO_UNITARIO PRECIO DE VENTA DE LA ESPECIE
* @param IN_CKANL_PRECIO_TOTAL VALOR TOTAL DE LA ANULACION
* @param IN_CKANL_SERIE_INICIO SERIE DE INICIO DE LAS ESPECIES
* @param IN_CKANL_SERIE_FIN SERIE DE FIN DE LAS ESPECIES
* @param IN_CKANL_OBSERVACION COMENTARIO AFIN A LA ASIGNACION
* @param IN_CKANL_JUSTIFICACION DESCRIPCION DE LA JUSTIFICACION QUE MOTIVO LA ANULACION
* @param IN_CKANL_TIPO_ANULACION TIPO DE ANULACION:
0.- DEFECTO FABRICA
1.- OTRAS
* @param IN_CKANL_ESTADO_ANULACION ESTADO DEL REGISTRO DE VENTA UTILIZADO PARA OPERACIONES
0.-  REGISTRADA
1.-  CONFIRMADA
* @param IN_CKANL_ESTADO ESTADO DEL REGISTRO
* @param IN_CKANL_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CKANL_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_INSERT(
IN IN_CKANL_CODIGO SII.CGG_KDX_ANULACION.CKANL_CODIGO%TYPE,
IN IN_CKASG_CODIGO SII.CGG_KDX_ANULACION.CKASG_CODIGO%TYPE,
IN IN_CKUPV_CODIGO SII.CGG_KDX_ANULACION.CKUPV_CODIGO%TYPE,
IN IN_CKANL_NUMERO_ANULACION SII.CGG_KDX_ANULACION.CKANL_NUMERO_ANULACION%TYPE,
IN IN_CKANL_FECHA_ANULACION SII.CGG_KDX_ANULACION.CKANL_FECHA_ANULACION%TYPE,
IN IN_CKANL_CANTIDAD SII.CGG_KDX_ANULACION.CKANL_CANTIDAD%TYPE,
IN IN_CKANL_PRECIO_UNITARIO SII.CGG_KDX_ANULACION.CKANL_PRECIO_UNITARIO%TYPE,
IN IN_CKANL_PRECIO_TOTAL SII.CGG_KDX_ANULACION.CKANL_PRECIO_TOTAL%TYPE,
IN IN_CKANL_SERIE_INICIO SII.CGG_KDX_ANULACION.CKANL_SERIE_INICIO%TYPE,
IN IN_CKANL_SERIE_FIN SII.CGG_KDX_ANULACION.CKANL_SERIE_FIN%TYPE,
IN IN_CKANL_OBSERVACION SII.CGG_KDX_ANULACION.CKANL_OBSERVACION%TYPE,
IN IN_CKANL_JUSTIFICACION SII.CGG_KDX_ANULACION.CKANL_JUSTIFICACION%TYPE,
IN IN_CKANL_TIPO_ANULACION SII.CGG_KDX_ANULACION.CKANL_TIPO_ANULACION%TYPE,
IN IN_CKANL_ESTADO_ANULACION SII.CGG_KDX_ANULACION.CKANL_ESTADO_ANULACION%TYPE,
IN IN_CKANL_ESTADO SII.CGG_KDX_ANULACION.CKANL_ESTADO%TYPE,
IN IN_CKANL_USUARIO_INSERT SII.CGG_KDX_ANULACION.CKANL_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CKANL_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_KDX_ANULACION','CKANL_CODIGO','CKANL') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CKANL_CODIGO;
	END IF;
	INSERT INTO SII.CGG_KDX_ANULACION(
		CKANL_CODIGO, 
		CKASG_CODIGO, 
		CKUPV_CODIGO, 
		CKANL_NUMERO_ANULACION, 
		CKANL_FECHA_ANULACION, 
		CKANL_CANTIDAD, 
		CKANL_PRECIO_UNITARIO, 
		CKANL_PRECIO_TOTAL, 
		CKANL_SERIE_INICIO, 
		CKANL_SERIE_FIN, 
		CKANL_OBSERVACION, 
		CKANL_JUSTIFICACION, 
		CKANL_TIPO_ANULACION, 
		CKANL_ESTADO_ANULACION, 
		CKANL_ESTADO, 
		CKANL_FECHA_INSERT, 
		CKANL_USUARIO_INSERT, 
		CKANL_FECHA_UPDATE, 
		CKANL_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CKASG_CODIGO, 
		IN_CKUPV_CODIGO, 
		IN_CKANL_NUMERO_ANULACION, 
		IN_CKANL_FECHA_ANULACION, 
		IN_CKANL_CANTIDAD, 
		IN_CKANL_PRECIO_UNITARIO, 
		IN_CKANL_PRECIO_TOTAL, 
		IN_CKANL_SERIE_INICIO, 
		IN_CKANL_SERIE_FIN, 
		IN_CKANL_OBSERVACION, 
		IN_CKANL_JUSTIFICACION, 
		IN_CKANL_TIPO_ANULACION, 
		IN_CKANL_ESTADO_ANULACION, 
		IN_CKANL_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CKANL_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CKANL_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_KDX_ANULACION.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKANL_CODIGO, 
		CKASG_CODIGO, 
		CKUPV_CODIGO, 
		CKANL_NUMERO_ANULACION, 
		CKANL_FECHA_ANULACION, 
		CKANL_CANTIDAD, 
		CKANL_PRECIO_UNITARIO, 
		CKANL_PRECIO_TOTAL, 
		CKANL_SERIE_INICIO, 
		CKANL_SERIE_FIN, 
		CKANL_OBSERVACION, 
		CKANL_JUSTIFICACION, 
		CKANL_TIPO_ANULACION, 
		CKANL_ESTADO_ANULACION, 
		CKANL_ESTADO, 
		CKANL_FECHA_INSERT, 
		CKANL_USUARIO_INSERT, 
		CKANL_FECHA_UPDATE, 
		CKANL_USUARIO_UPDATE
	FROM SII.CGG_KDX_ANULACION
	WHERE CKANL_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_KDX_ANULACION.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CKANL_CODIGO, 
		CKASG_CODIGO, 
		CKUPV_CODIGO, 
		CKANL_NUMERO_ANULACION, 
		CKANL_FECHA_ANULACION, 
		CKANL_CANTIDAD, 
		CKANL_PRECIO_UNITARIO, 
		CKANL_PRECIO_TOTAL, 
		CKANL_SERIE_INICIO, 
		CKANL_SERIE_FIN, 
		CKANL_OBSERVACION, 
		CKANL_JUSTIFICACION, 
		CKANL_TIPO_ANULACION, 
		CKANL_ESTADO_ANULACION, 
		CKANL_ESTADO, 
		CKANL_FECHA_INSERT, 
		CKANL_USUARIO_INSERT, 
		CKANL_FECHA_UPDATE, 
		CKANL_USUARIO_UPDATE
	FROM SII.CGG_KDX_ANULACION
	WHERE CKANL_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CKANL_NUMERO_ANULACION, '''')||'' ''||COALESCE(CKANL_FECHA_ANULACION, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKANL_CANTIDAD, 0)||'' ''||COALESCE(CKANL_PRECIO_UNITARIO, 0)||'' ''||COALESCE(CKANL_PRECIO_TOTAL, 0)||'' ''||COALESCE(CKANL_SERIE_INICIO, 0)||'' ''||COALESCE(CKANL_SERIE_FIN, 0)||'' ''||COALESCE(CKANL_OBSERVACION, '''')||'' ''||COALESCE(CKANL_JUSTIFICACION, '''')||'' ''||COALESCE(CKANL_TIPO_ANULACION, 0)||'' ''||COALESCE(CKANL_ESTADO_ANULACION, 0)||'' ''||COALESCE(CKANL_ESTADO, FALSE)||'' ''||COALESCE(CKANL_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKANL_USUARIO_INSERT, '''')||'' ''||COALESCE(CKANL_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CKANL_USUARIO_UPDATE, '''')) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_KDX_ANULACION.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_KDX_ANULACION
	WHERE CKANL_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_KDX_ANULACION
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_KDX_ANULACION
	WHERE CKANL_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CKANL_NUMERO_ANULACION, '''')||' '||COALESCE(CKANL_FECHA_ANULACION, CURRENT_TIMESTAMP)||' '||COALESCE(CKANL_CANTIDAD, 0)||' '||COALESCE(CKANL_PRECIO_UNITARIO, 0)||' '||COALESCE(CKANL_PRECIO_TOTAL, 0)||' '||COALESCE(CKANL_SERIE_INICIO, 0)||' '||COALESCE(CKANL_SERIE_FIN, 0)||' '||COALESCE(CKANL_OBSERVACION, '''')||' '||COALESCE(CKANL_JUSTIFICACION, '''')||' '||COALESCE(CKANL_TIPO_ANULACION, 0)||' '||COALESCE(CKANL_ESTADO_ANULACION, 0)||' '||COALESCE(CKANL_ESTADO, FALSE)||' '||COALESCE(CKANL_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CKANL_USUARIO_INSERT, '''')||' '||COALESCE(CKANL_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CKANL_USUARIO_UPDATE, '''')) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_KDX_ANULACION.
* @param IN_CKANL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE UNA ANULACION
* @param IN_CKASG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ASIGNACION
* @param IN_CKUPV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO PUNTO DE VENTA
* @param IN_CKANL_NUMERO_ANULACION NUMERO SECUENCIAL UNICO DE IDENTIFICACION DE LA ASIGNACION
* @param IN_CKANL_FECHA_ANULACION FECHA DE RECEPCION DE LAS ESPECIES
* @param IN_CKANL_CANTIDAD CANTIDAD DE ESPECIES
* @param IN_CKANL_PRECIO_UNITARIO PRECIO DE VENTA DE LA ESPECIE
* @param IN_CKANL_PRECIO_TOTAL VALOR TOTAL DE LA ANULACION
* @param IN_CKANL_SERIE_INICIO SERIE DE INICIO DE LAS ESPECIES
* @param IN_CKANL_SERIE_FIN SERIE DE FIN DE LAS ESPECIES
* @param IN_CKANL_OBSERVACION COMENTARIO AFIN A LA ASIGNACION
* @param IN_CKANL_JUSTIFICACION DESCRIPCION DE LA JUSTIFICACION QUE MOTIVO LA ANULACION
* @param IN_CKANL_TIPO_ANULACION TIPO DE ANULACION:
0.- DEFECTO FABRICA
1.- OTRAS
* @param IN_CKANL_ESTADO_ANULACION ESTADO DEL REGISTRO DE VENTA UTILIZADO PARA OPERACIONES
0.-  REGISTRADA
1.-  CONFIRMADA
* @param IN_CKANL_ESTADO ESTADO DEL REGISTRO
* @param IN_CKANL_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_UPDATE(
IN IN_CKANL_CODIGO SII.CGG_KDX_ANULACION.CKANL_CODIGO%TYPE,
IN IN_CKASG_CODIGO SII.CGG_KDX_ANULACION.CKASG_CODIGO%TYPE,
IN IN_CKUPV_CODIGO SII.CGG_KDX_ANULACION.CKUPV_CODIGO%TYPE,
IN IN_CKANL_NUMERO_ANULACION SII.CGG_KDX_ANULACION.CKANL_NUMERO_ANULACION%TYPE,
IN IN_CKANL_FECHA_ANULACION SII.CGG_KDX_ANULACION.CKANL_FECHA_ANULACION%TYPE,
IN IN_CKANL_CANTIDAD SII.CGG_KDX_ANULACION.CKANL_CANTIDAD%TYPE,
IN IN_CKANL_PRECIO_UNITARIO SII.CGG_KDX_ANULACION.CKANL_PRECIO_UNITARIO%TYPE,
IN IN_CKANL_PRECIO_TOTAL SII.CGG_KDX_ANULACION.CKANL_PRECIO_TOTAL%TYPE,
IN IN_CKANL_SERIE_INICIO SII.CGG_KDX_ANULACION.CKANL_SERIE_INICIO%TYPE,
IN IN_CKANL_SERIE_FIN SII.CGG_KDX_ANULACION.CKANL_SERIE_FIN%TYPE,
IN IN_CKANL_OBSERVACION SII.CGG_KDX_ANULACION.CKANL_OBSERVACION%TYPE,
IN IN_CKANL_JUSTIFICACION SII.CGG_KDX_ANULACION.CKANL_JUSTIFICACION%TYPE,
IN IN_CKANL_TIPO_ANULACION SII.CGG_KDX_ANULACION.CKANL_TIPO_ANULACION%TYPE,
IN IN_CKANL_ESTADO_ANULACION SII.CGG_KDX_ANULACION.CKANL_ESTADO_ANULACION%TYPE,
IN IN_CKANL_ESTADO SII.CGG_KDX_ANULACION.CKANL_ESTADO%TYPE,
IN IN_CKANL_USUARIO_UPDATE SII.CGG_KDX_ANULACION.CKANL_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_KDX_ANULACION SET
		CKASG_CODIGO = IN_CKASG_CODIGO, 
		CKUPV_CODIGO = IN_CKUPV_CODIGO, 
		CKANL_NUMERO_ANULACION = IN_CKANL_NUMERO_ANULACION, 
		CKANL_FECHA_ANULACION = IN_CKANL_FECHA_ANULACION, 
		CKANL_CANTIDAD = IN_CKANL_CANTIDAD, 
		CKANL_PRECIO_UNITARIO = IN_CKANL_PRECIO_UNITARIO, 
		CKANL_PRECIO_TOTAL = IN_CKANL_PRECIO_TOTAL, 
		CKANL_SERIE_INICIO = IN_CKANL_SERIE_INICIO, 
		CKANL_SERIE_FIN = IN_CKANL_SERIE_FIN, 
		CKANL_OBSERVACION = IN_CKANL_OBSERVACION, 
		CKANL_JUSTIFICACION = IN_CKANL_JUSTIFICACION, 
		CKANL_TIPO_ANULACION = IN_CKANL_TIPO_ANULACION, 
		CKANL_ESTADO_ANULACION = IN_CKANL_ESTADO_ANULACION, 
		CKANL_ESTADO = IN_CKANL_ESTADO, 
		CKANL_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CKANL_USUARIO_UPDATE = IN_CKANL_USUARIO_UPDATE
	WHERE
		CKANL_CODIGO = IN_CKANL_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_KDX_ANULACION
* @param IN_CKANL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE UNA ANULACION
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_SELECT(
IN IN_CKANL_CODIGO SII.CGG_KDX_ANULACION.CKANL_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKANL_CODIGO, 
		CKASG_CODIGO, 
		CKUPV_CODIGO, 
		CKANL_NUMERO_ANULACION, 
		CKANL_FECHA_ANULACION, 
		CKANL_CANTIDAD, 
		CKANL_PRECIO_UNITARIO, 
		CKANL_PRECIO_TOTAL, 
		CKANL_SERIE_INICIO, 
		CKANL_SERIE_FIN, 
		CKANL_OBSERVACION, 
		CKANL_JUSTIFICACION, 
		CKANL_TIPO_ANULACION, 
		CKANL_ESTADO_ANULACION, 
		CKANL_ESTADO, 
		CKANL_FECHA_INSERT, 
		CKANL_USUARIO_INSERT, 
		CKANL_FECHA_UPDATE, 
		CKANL_USUARIO_UPDATE
	FROM SII.CGG_KDX_ANULACION
	WHERE CKANL_ESTADO = TRUE AND 
		CKANL_CODIGO = IN_CKANL_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_KDX_ANULACION.
* @param IN_CKANL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE UNA ANULACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_DELETE(
IN IN_CKANL_CODIGO SII.CGG_KDX_ANULACION.CKANL_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_KDX_ANULACION
	WHERE
		CKANL_CODIGO = IN_CKANL_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_KDX_ANULACION.
* @param IN_CKANL_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE UNA ANULACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_DELETE_SOFT(
IN IN_CKANL_CODIGO SII.CGG_KDX_ANULACION.CKANL_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_KDX_ANULACION SET
		CKANL_ESTADO = FALSE
	WHERE
		CKANL_CODIGO = IN_CKANL_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_S_CGG_KDX_ASIGNACION
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_ANULACION QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_ASIGNACION.
* @param IN_CKASG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ASIGNACION
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_S_CGG_KDX_ASIGNACION(
IN IN_CKASG_CODIGO SII.CGG_KDX_ANULACION.CKASG_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKANL_CODIGO, 
		CKASG_CODIGO, 
		CKUPV_CODIGO, 
		CKANL_NUMERO_ANULACION, 
		CKANL_FECHA_ANULACION, 
		CKANL_CANTIDAD, 
		CKANL_PRECIO_UNITARIO, 
		CKANL_PRECIO_TOTAL, 
		CKANL_SERIE_INICIO, 
		CKANL_SERIE_FIN, 
		CKANL_OBSERVACION, 
		CKANL_JUSTIFICACION, 
		CKANL_TIPO_ANULACION, 
		CKANL_ESTADO_ANULACION, 
		CKANL_ESTADO, 
		CKANL_FECHA_INSERT, 
		CKANL_USUARIO_INSERT, 
		CKANL_FECHA_UPDATE, 
		CKANL_USUARIO_UPDATE
	FROM SII.CGG_KDX_ANULACION
	WHERE CKANL_ESTADO = TRUE AND 
		CKASG_CODIGO = IN_CKASG_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_D_CGG_KDX_ASIGNACION
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_ANULACION QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_ASIGNACION.
* @param IN_CKASG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ASIGNACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_D_CGG_KDX_ASIGNACION(
IN IN_CKASG_CODIGO SII.CGG_KDX_ANULACION.CKASG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_KDX_ANULACION
	WHERE
		CKASG_CODIGO = IN_CKASG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_D_CGG_KDX_ASIGNACION
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_ANULACION QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_ASIGNACION.
* @param IN_CKASG_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE ASIGNACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_DS_CGG_KDX_ASIGNACION(
IN IN_CKASG_CODIGO SII.CGG_KDX_ANULACION.CKASG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_KDX_ANULACION SET
		ckanl_estado = false
	WHERE
		CKASG_CODIGO = IN_CKASG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_S_CGG_KDX_USUARIO_PV
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_ANULACION QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_USUARIO_PV.
* @param IN_CKUPV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO PUNTO DE VENTA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_S_CGG_KDX_USUARIO_PV(
IN IN_CKUPV_CODIGO SII.CGG_KDX_ANULACION.CKUPV_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CKANL_CODIGO, 
		CKASG_CODIGO, 
		CKUPV_CODIGO, 
		CKANL_NUMERO_ANULACION, 
		CKANL_FECHA_ANULACION, 
		CKANL_CANTIDAD, 
		CKANL_PRECIO_UNITARIO, 
		CKANL_PRECIO_TOTAL, 
		CKANL_SERIE_INICIO, 
		CKANL_SERIE_FIN, 
		CKANL_OBSERVACION, 
		CKANL_JUSTIFICACION, 
		CKANL_TIPO_ANULACION, 
		CKANL_ESTADO_ANULACION, 
		CKANL_ESTADO, 
		CKANL_FECHA_INSERT, 
		CKANL_USUARIO_INSERT, 
		CKANL_FECHA_UPDATE, 
		CKANL_USUARIO_UPDATE
	FROM SII.CGG_KDX_ANULACION
	WHERE CKANL_ESTADO = TRUE AND 
		CKUPV_CODIGO = IN_CKUPV_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_D_CGG_KDX_USUARIO_PV
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_ANULACION QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_USUARIO_PV.
* @param IN_CKUPV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO PUNTO DE VENTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_D_CGG_KDX_USUARIO_PV(
IN IN_CKUPV_CODIGO SII.CGG_KDX_ANULACION.CKUPV_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_KDX_ANULACION
	WHERE
		CKUPV_CODIGO = IN_CKUPV_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_KDX_ANULACION_D_CGG_KDX_USUARIO_PV
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_KDX_ANULACION QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_KDX_USUARIO_PV.
* @param IN_CKUPV_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE USUARIO PUNTO DE VENTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_KDX_ANULACION_DS_CGG_KDX_USUARIO_PV(
IN IN_CKUPV_CODIGO SII.CGG_KDX_ANULACION.CKUPV_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_KDX_ANULACION SET
		ckanl_estado = false
	WHERE
		CKUPV_CODIGO = IN_CKUPV_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

