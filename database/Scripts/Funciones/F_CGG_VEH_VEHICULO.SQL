/**
* FUNCION SII.F_CGG_VEH_VEHICULO_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_VEH_VEHICULO
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @param IN_CVMRC_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE MARCA
* @param IN_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 1
* @param IN_CVCTG_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE CATEGORIA.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @param IN_CVSCT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR
* @param IN_CGG_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 2
* @param IN_CVVEH_NOMBRE NOMBRE DE LA EMBARCACION (APLICA SOLO A VEHICULOS MARITIMOS)
* @param IN_CVVEH_MODELO NOMBRE DEL MODELO DEL VEHICULO
* @param IN_CVVEH_TIPO TIPO DE VEHICULO
0 - TERRESTRE
1 - MARITIMO
2 - AEREO
* @param IN_CVVEH_ANIO_PRODUCCION ANIO DE FABRICACION DEL VEHICULO
* @param IN_CVVEH_CHASIS SERIE DEL CHASIS DEL VEHICULO
* @param IN_CVVEH_PLACA PLACA DEL VEHICULO
* @param IN_CVVEH_FOTO FOTO DEL VEHICULO
* @param IN_CVVEH_ESLORA INFORMACION DE VEHICULOS MARITIMOS (METROS)
* @param IN_CVVEH_MANGA INFORMACION DE VEHICULOS MARITIMOS (METROS)
* @param IN_CVVEH_PUNTAL INFORMACION DE VEHICULOS MARITIMOS (METROS)
* @param IN_CVVEH_MATERIAL MATERIAL DE CONSTRUCCION PARA VEHICULOS MARITIMOS
* @param IN_CVVEH_INGRESO IDENTIFICA SI EL VEHICULO ESTA DENTRO DE LA PROVINCIA
* @param IN_CVVEH_FECHA_INGRESO FECHA CUANDO EL VEHICULO INGRESO A LA PROVINCIA.
* @param IN_CVVEH_TIPO_INGRESO MODALIDAD DE INGRESO DE VEHICULO
0 - PERMANENTE
1 - TEMPORAL
* @param IN_CVVEH_TIEMPO_ESTADIA PERIODO DE TIEMPO EN DIAS DE PERMANENCIA DEL VEHICULO DENTRO DE LA PROVINCIA
* @param IN_CVVEH_SALIO SI EL VALIO NO ESTA DENTRO DE LA PROVINCIA
* @param IN_CVVEH_FECHA_SALIDA FECHA CUANDO EL VEHICULO SALIO
* @param IN_CVVEH_OBSERVACION INFORMACION ADICIONAL
* @param IN_CVVEH_ESTADO ESTADO DEL REGISTRO
* @param IN_CVVEH_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CVVEH_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_INSERT(
IN IN_CVVEH_CODIGO SII.CGG_VEH_VEHICULO.CVVEH_CODIGO%TYPE,
IN IN_CVMRC_CODIGO SII.CGG_VEH_VEHICULO.CVMRC_CODIGO%TYPE,
IN IN_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CVCLR_CODIGO%TYPE,
IN IN_CVCTG_CODIGO SII.CGG_VEH_VEHICULO.CVCTG_CODIGO%TYPE,
IN IN_CSCTP_CODIGO SII.CGG_VEH_VEHICULO.CSCTP_CODIGO%TYPE,
IN IN_CVSCT_CODIGO SII.CGG_VEH_VEHICULO.CVSCT_CODIGO%TYPE,
IN IN_CGG_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CGG_CVCLR_CODIGO%TYPE,
IN IN_CVVEH_NOMBRE SII.CGG_VEH_VEHICULO.CVVEH_NOMBRE%TYPE,
IN IN_CVVEH_MODELO SII.CGG_VEH_VEHICULO.CVVEH_MODELO%TYPE,
IN IN_CVVEH_TIPO SII.CGG_VEH_VEHICULO.CVVEH_TIPO%TYPE,
IN IN_CVVEH_ANIO_PRODUCCION SII.CGG_VEH_VEHICULO.CVVEH_ANIO_PRODUCCION%TYPE,
IN IN_CVVEH_CHASIS SII.CGG_VEH_VEHICULO.CVVEH_CHASIS%TYPE,
IN IN_CVVEH_PLACA SII.CGG_VEH_VEHICULO.CVVEH_PLACA%TYPE,
IN IN_CVVEH_FOTO SII.CGG_VEH_VEHICULO.CVVEH_FOTO%TYPE,
IN IN_CVVEH_ESLORA SII.CGG_VEH_VEHICULO.CVVEH_ESLORA%TYPE,
IN IN_CVVEH_MANGA SII.CGG_VEH_VEHICULO.CVVEH_MANGA%TYPE,
IN IN_CVVEH_PUNTAL SII.CGG_VEH_VEHICULO.CVVEH_PUNTAL%TYPE,
IN IN_CVVEH_MATERIAL SII.CGG_VEH_VEHICULO.CVVEH_MATERIAL%TYPE,
IN IN_CVVEH_INGRESO SII.CGG_VEH_VEHICULO.CVVEH_INGRESO%TYPE,
IN IN_CVVEH_FECHA_INGRESO SII.CGG_VEH_VEHICULO.CVVEH_FECHA_INGRESO%TYPE,
IN IN_CVVEH_TIPO_INGRESO SII.CGG_VEH_VEHICULO.CVVEH_TIPO_INGRESO%TYPE,
IN IN_CVVEH_TIEMPO_ESTADIA SII.CGG_VEH_VEHICULO.CVVEH_TIEMPO_ESTADIA%TYPE,
IN IN_CVVEH_SALIO SII.CGG_VEH_VEHICULO.CVVEH_SALIO%TYPE,
IN IN_CVVEH_FECHA_SALIDA SII.CGG_VEH_VEHICULO.CVVEH_FECHA_SALIDA%TYPE,
IN IN_CVVEH_OBSERVACION SII.CGG_VEH_VEHICULO.CVVEH_OBSERVACION%TYPE,
IN IN_CVVEH_ESTADO SII.CGG_VEH_VEHICULO.CVVEH_ESTADO%TYPE,
IN IN_CVVEH_USUARIO_INSERT SII.CGG_VEH_VEHICULO.CVVEH_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CVVEH_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_VEH_VEHICULO','CVVEH_CODIGO','CVVEH') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CVVEH_CODIGO;
	END IF;
	INSERT INTO SII.CGG_VEH_VEHICULO(
		CVVEH_CODIGO, 
		CVMRC_CODIGO, 
		CVCLR_CODIGO, 
		CVCTG_CODIGO, 
		CSCTP_CODIGO, 
		CVSCT_CODIGO, 
		CGG_CVCLR_CODIGO, 
		CVVEH_NOMBRE, 
		CVVEH_MODELO, 
		CVVEH_TIPO, 
		CVVEH_ANIO_PRODUCCION, 
		CVVEH_CHASIS, 
		CVVEH_PLACA, 
		CVVEH_FOTO, 
		CVVEH_ESLORA, 
		CVVEH_MANGA, 
		CVVEH_PUNTAL, 
		CVVEH_MATERIAL, 
		CVVEH_INGRESO, 
		CVVEH_FECHA_INGRESO, 
		CVVEH_TIPO_INGRESO, 
		CVVEH_TIEMPO_ESTADIA, 
		CVVEH_SALIO, 
		CVVEH_FECHA_SALIDA, 
		CVVEH_OBSERVACION, 
		CVVEH_ESTADO, 
		CVVEH_FECHA_INSERT, 
		CVVEH_USUARIO_INSERT, 
		CVVEH_FECHA_UPDATE, 
		CVVEH_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CVMRC_CODIGO, 
		IN_CVCLR_CODIGO, 
		IN_CVCTG_CODIGO, 
		IN_CSCTP_CODIGO, 
		IN_CVSCT_CODIGO, 
		IN_CGG_CVCLR_CODIGO, 
		IN_CVVEH_NOMBRE, 
		IN_CVVEH_MODELO, 
		IN_CVVEH_TIPO, 
		IN_CVVEH_ANIO_PRODUCCION, 
		IN_CVVEH_CHASIS, 
		IN_CVVEH_PLACA, 
		IN_CVVEH_FOTO, 
		IN_CVVEH_ESLORA, 
		IN_CVVEH_MANGA, 
		IN_CVVEH_PUNTAL, 
		IN_CVVEH_MATERIAL, 
		IN_CVVEH_INGRESO, 
		IN_CVVEH_FECHA_INGRESO, 
		IN_CVVEH_TIPO_INGRESO, 
		IN_CVVEH_TIEMPO_ESTADIA, 
		IN_CVVEH_SALIO, 
		IN_CVVEH_FECHA_SALIDA, 
		IN_CVVEH_OBSERVACION, 
		IN_CVVEH_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CVVEH_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CVVEH_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_VEH_VEHICULO
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CVVEH_CODIGO, 
		CVMRC_CODIGO, 
		CVCLR_CODIGO, 
		CVCTG_CODIGO, 
		CSCTP_CODIGO, 
		CVSCT_CODIGO, 
		CGG_CVCLR_CODIGO, 
		CVVEH_NOMBRE, 
		CVVEH_MODELO, 
		CVVEH_TIPO, 
		CVVEH_ANIO_PRODUCCION, 
		CVVEH_CHASIS, 
		CVVEH_PLACA, 
		CVVEH_FOTO, 
		CVVEH_ESLORA, 
		CVVEH_MANGA, 
		CVVEH_PUNTAL, 
		CVVEH_MATERIAL, 
		CVVEH_INGRESO, 
		CVVEH_FECHA_INGRESO, 
		CVVEH_TIPO_INGRESO, 
		CVVEH_TIEMPO_ESTADIA, 
		CVVEH_SALIO, 
		CVVEH_FECHA_SALIDA, 
		CVVEH_OBSERVACION, 
		CVVEH_ESTADO, 
		CVVEH_FECHA_INSERT, 
		CVVEH_USUARIO_INSERT, 
		CVVEH_FECHA_UPDATE, 
		CVVEH_USUARIO_UPDATE
	FROM SII.CGG_VEH_VEHICULO
	WHERE CVVEH_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_VEH_VEHICULO
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @param IN_SW VISUALIZA LOS VEHICULOS QUE TIENEN TRAMITES CONCLUIDOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT,
IN IN_SW BOOLEAN
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
	STMT TEXT;
BEGIN
	STMT:='
	SELECT 
		C1.CVVEH_CODIGO, 
		C1.CVMRC_CODIGO,
		C1.TRAMITE,
		C1.MARCA,
		C1.CVCLR_CODIGO, 		
		C1.CVCTG_CODIGO, 
		C1.CATEGORIA,
		C1.CSCTP_CODIGO, 
		C1.PRODUCTIVO,
		C1.CVSCT_CODIGO, 
		C1.SECTOR,
		C1.CGG_CVCLR_CODIGO, 		
		C1.CVVEH_NOMBRE, 
		C1.CVVEH_MODELO, 
		C1.CVVEH_TIPO, 
		C1.CVVEH_ANIO_PRODUCCION, 
		C1.CVVEH_CHASIS, 
		C1.CVVEH_PLACA, 
		C1.CVVEH_ESLORA, 
		C1.CVVEH_MANGA, 
		C1.CVVEH_PUNTAL, 
		C1.CVVEH_MATERIAL, 
		C1.CVVEH_INGRESO, 
		C1.CVVEH_FECHA_INGRESO, 
		C1.CVVEH_TIPO_INGRESO, 
		C1.CVVEH_TIEMPO_ESTADIA, 
		C1.CVVEH_SALIO, 
		C1.CVVEH_FECHA_SALIDA, 
		C1.CVVEH_OBSERVACION, 
		C1.CVVEH_ESTADO, 
		C1.CVVEH_FECHA_INSERT, 
		C1.CVVEH_USUARIO_INSERT, 
		C1.CVVEH_FECHA_UPDATE, 
		C1.CVVEH_USUARIO_UPDATE,
		C1.ESTADOS,
		C1.PROPIETARIO,
		C1.CVMTR_CODIGO,
		C1.CVMTR_TONELAJE,
		C1.CVCMB_NOMBRE,
		C1.CVCLN_CILINDRAJE,
		C1.CVCLN_OBSERVACION 
	FROM (	
		WITH TRAMITE_VEHICULO AS(
			SELECT CRTRA_CODIGO,CRTRA_NUMERO,CVVEH_CODIGO FROM SII.CGG_RES_TRAMITE WHERE CVVEH_CODIGO IS NOT NULL
		)
		SELECT
			VH.CVVEH_CODIGO, 
			VH.CVMRC_CODIGO,
			ARRAY_TO_STRING(ARRAY((SELECT TRM.CRTRA_NUMERO FROM TRAMITE_VEHICULO TRM WHERE TRM.CVVEH_CODIGO = VH.CVVEH_CODIGO)),'', '') TRAMITE,
			MRC.CVMRC_NOMBRE MARCA,
			VH.CVCLR_CODIGO, 			
			VH.CVCTG_CODIGO, 
			CTG.CVCTG_NOMBRE CATEGORIA,
			VH.CSCTP_CODIGO, 
			SCTP.CSCTP_NOMBRE PRODUCTIVO,
			VH.CVSCT_CODIGO, 
			SCT.CVSCT_NOMBRE AS SECTOR,
			VH.CGG_CVCLR_CODIGO, 			
			VH.CVVEH_NOMBRE, 
			VH.CVVEH_MODELO, 
			VH.CVVEH_TIPO, 
			VH.CVVEH_ANIO_PRODUCCION, 
			VH.CVVEH_CHASIS, 
			VH.CVVEH_PLACA, 
			VH.CVVEH_ESLORA, 
			VH.CVVEH_MANGA, 
			VH.CVVEH_PUNTAL, 
			VH.CVVEH_MATERIAL, 
			VH.CVVEH_INGRESO, 
			VH.CVVEH_FECHA_INGRESO, 
			VH.CVVEH_TIPO_INGRESO, 
			VH.CVVEH_TIEMPO_ESTADIA, 
			VH.CVVEH_SALIO, 
			VH.CVVEH_FECHA_SALIDA, 
			VH.CVVEH_OBSERVACION, 
			VH.CVVEH_ESTADO, 
			VH.CVVEH_FECHA_INSERT, 
			VH.CVVEH_USUARIO_INSERT, 
			VH.CVVEH_FECHA_UPDATE, 
			VH.CVVEH_USUARIO_UPDATE,
			ARRAY_TO_STRING(ARRAY(SELECT CVSVM_NOMBRE FROM SII.CGG_VEH_ESTADO_VHMT VHMT
				INNER JOIN SII.CGG_VEH_VEHICULO_ESTADO VST ON VST.CVSVM_CODIGO = VHMT.CVSVM_CODIGO AND VST.CVVEH_CODIGO = VH.CVVEH_CODIGO
				WHERE VHMT.CVSVM_ESTADO), '', '') ESTADOS,
			(COALESCE(PRS.CRPER_NOMBRES,'''')||'' ''||COALESCE(PRS.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PRS.CRPER_APELLIDO_MATERNO,'''')) PROPIETARIO,
			VMTR.CVMTR_CODIGO,
			VMTR.CVMTR_TONELAJE,
			CMB.CVCMB_NOMBRE,
			CLN.CVCLN_CILINDRAJE,
			CLN.CVCLN_OBSERVACION 
		FROM SII.CGG_VEH_VEHICULO VH
		LEFT JOIN SII.CGG_VEH_MARCA MRC ON MRC.CVMRC_CODIGO = VH.CVMRC_CODIGO
		LEFT JOIN SII.CGG_VEH_CATEGORIA CTG ON CTG.CVCTG_CODIGO = VH.CVCTG_CODIGO
		LEFT JOIN SII.CGG_SECTOR_PRODUCTIVO SCTP ON SCTP.CSCTP_CODIGO = VH.CSCTP_CODIGO
		LEFT JOIN SII.CGG_VEH_SECTOR SCT ON SCT.CVSCT_CODIGO = VH.CVSCT_CODIGO
		LEFT JOIN SII.CGG_VEH_HISTORIAL VHS ON VHS.CVVEH_CODIGO = VH.CVVEH_CODIGO AND VHS.CVHST_FECHA_TRASPASO = (SELECT MAX(CVHST_FECHA_TRASPASO) FROM SII.CGG_VEH_HISTORIAL VEH WHERE CVVEH_CODIGO = VH.CVVEH_CODIGO)
		LEFT JOIN SII.CGG_RES_PERSONA PRS ON PRS.CRPER_CODIGO = VHS.CRPER_CODIGO
		LEFT JOIN CGG_VEH_VEHICULO_MOTOR VVMT ON (VH.CVVEH_CODIGO = VVMT.CVVEH_CODIGO)
		LEFT JOIN CGG_VEH_MOTOR VMTR ON (VMTR.CVMTR_CODIGO = VVMT.CVMTR_CODIGO)
		LEFT JOIN CGG_VEH_CILINDRAJE CLN ON (CLN.CVCLN_CODIGO = VMTR.CVCLN_CODIGO)
		LEFT JOIN CGG_VEH_COMBUSTIBLE CMB ON (CMB.CVCMB_CODIGO = VMTR.CVCMB_CODIGO)
		WHERE (NOT '||IN_SW||' OR SII.F_CGG_VEH_VEHICULO_CHECK(VH.CVVEH_CODIGO))
	) AS C1
	WHERE CVVEH_ESTADO AND SII.F_STRING_IN('''||IN_FIND_TEXT||''', 		
		COALESCE(C1.MARCA,'''')||'' ''||
		COALESCE(C1.CVVEH_NOMBRE, '''')||'' ''||				
		COALESCE(C1.CVVEH_CHASIS, '''')||'' ''||
		COALESCE(C1.CVVEH_PLACA, '''')||'' ''||		
		COALESCE(C1.TRAMITE, '''')||'' ''||		
		COALESCE(C1.CVVEH_OBSERVACION, '''')||'' ''||		
		COALESCE(C1.PROPIETARIO,'''')) = 1	
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	OPEN TMP_REF FOR EXECUTE STMT;	
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_SELECT_FOTO
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_VEH_VEHICULO
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_SELECT_FOTO(
IN IN_CVVEH_CODIGO SII.CGG_VEH_VEHICULO.CVVEH_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		ENCODE(CVVEH_FOTO, 'base64') FOTO
	FROM SII.CGG_VEH_VEHICULO
	WHERE CVVEH_ESTADO = TRUE AND 
		CVVEH_CODIGO = IN_CVVEH_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_VEH_VEHICULO
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_VEH_VEHICULO
	WHERE CVVEH_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_VEH_VEHICULO
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @param IN_SW VISUALIZA LOS VEHICULOS QUE TIENEN TRAMITES CONCLUIDOS.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_COUNT(
IN IN_FIND_TEXT TEXT,
IN IN_SW BOOLEAN
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_VEH_VEHICULO VH
	WHERE CVVEH_ESTADO AND (IN_FIND_TEXT IS NULL OR 
			LENGTH(IN_FIND_TEXT) = 0 OR 
			SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CVVEH_NOMBRE, '''')||' '||COALESCE(CVVEH_TIPO, 0)||' '||COALESCE(CVVEH_ANIO_PRODUCCION, 0)||' '||COALESCE(CVVEH_CHASIS, '''')||' '||COALESCE(CVVEH_PLACA, '''')||' '||COALESCE(CVVEH_ESLORA, 0)||' '||COALESCE(CVVEH_MANGA, 0)||' '||COALESCE(CVVEH_PUNTAL, 0)||' '||COALESCE(CVVEH_MATERIAL, '''')||' '||COALESCE(CVVEH_OBSERVACION, '''')) = 1)
		AND ((IN_SW AND SII.F_CGG_VEH_VEHICULO_CHECK(VH.CVVEH_CODIGO)) OR NOT IN_SW);
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_VEH_VEHICULO
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @param IN_CVMRC_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE MARCA
* @param IN_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 1
* @param IN_CVCTG_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE CATEGORIA.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @param IN_CVSCT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR
* @param IN_CGG_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 2
* @param IN_CVVEH_NOMBRE NOMBRE DE LA EMBARCACION (APLICA SOLO A VEHICULOS MARITIMOS)
* @param IN_CVVEH_MODELO NOMBRE DEL MODELO DEL VEHICULO
* @param IN_CVVEH_TIPO TIPO DE VEHICULO
0 - TERRESTRE
1 - MARITIMO
2 - AEREO
* @param IN_CVVEH_ANIO_PRODUCCION ANIO DE FABRICACION DEL VEHICULO
* @param IN_CVVEH_CHASIS SERIE DEL CHASIS DEL VEHICULO
* @param IN_CVVEH_PLACA PLACA DEL VEHICULO
* @param IN_CVVEH_FOTO FOTO DEL VEHICULO
* @param IN_CVVEH_ESLORA INFORMACION DE VEHICULOS MARITIMOS (METROS)
* @param IN_CVVEH_MANGA INFORMACION DE VEHICULOS MARITIMOS (METROS)
* @param IN_CVVEH_PUNTAL INFORMACION DE VEHICULOS MARITIMOS (METROS)
* @param IN_CVVEH_MATERIAL MATERIAL DE CONSTRUCCION PARA VEHICULOS MARITIMOS
* @param IN_CVVEH_INGRESO IDENTIFICA SI EL VEHICULO ESTA DENTRO DE LA PROVINCIA
* @param IN_CVVEH_FECHA_INGRESO FECHA CUANDO EL VEHICULO INGRESO A LA PROVINCIA.
* @param IN_CVVEH_TIPO_INGRESO MODALIDAD DE INGRESO DE VEHICULO
0 - PERMANENTE
1 - TEMPORAL
* @param IN_CVVEH_TIEMPO_ESTADIA PERIODO DE TIEMPO EN DIAS DE PERMANENCIA DEL VEHICULO DENTRO DE LA PROVINCIA
* @param IN_CVVEH_SALIO SI EL VALIO NO ESTA DENTRO DE LA PROVINCIA
* @param IN_CVVEH_FECHA_SALIDA FECHA CUANDO EL VEHICULO SALIO
* @param IN_CVVEH_OBSERVACION INFORMACION ADICIONAL
* @param IN_CVVEH_ESTADO ESTADO DEL REGISTRO
* @param IN_CVVEH_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_UPDATE(
IN IN_CVVEH_CODIGO SII.CGG_VEH_VEHICULO.CVVEH_CODIGO%TYPE,
IN IN_CVMRC_CODIGO SII.CGG_VEH_VEHICULO.CVMRC_CODIGO%TYPE,
IN IN_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CVCLR_CODIGO%TYPE,
IN IN_CVCTG_CODIGO SII.CGG_VEH_VEHICULO.CVCTG_CODIGO%TYPE,
IN IN_CSCTP_CODIGO SII.CGG_VEH_VEHICULO.CSCTP_CODIGO%TYPE,
IN IN_CVSCT_CODIGO SII.CGG_VEH_VEHICULO.CVSCT_CODIGO%TYPE,
IN IN_CGG_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CGG_CVCLR_CODIGO%TYPE,
IN IN_CVVEH_NOMBRE SII.CGG_VEH_VEHICULO.CVVEH_NOMBRE%TYPE,
IN IN_CVVEH_MODELO SII.CGG_VEH_VEHICULO.CVVEH_MODELO%TYPE,
IN IN_CVVEH_TIPO SII.CGG_VEH_VEHICULO.CVVEH_TIPO%TYPE,
IN IN_CVVEH_ANIO_PRODUCCION SII.CGG_VEH_VEHICULO.CVVEH_ANIO_PRODUCCION%TYPE,
IN IN_CVVEH_CHASIS SII.CGG_VEH_VEHICULO.CVVEH_CHASIS%TYPE,
IN IN_CVVEH_PLACA SII.CGG_VEH_VEHICULO.CVVEH_PLACA%TYPE,
IN IN_CVVEH_FOTO SII.CGG_VEH_VEHICULO.CVVEH_FOTO%TYPE,
IN IN_CVVEH_ESLORA SII.CGG_VEH_VEHICULO.CVVEH_ESLORA%TYPE,
IN IN_CVVEH_MANGA SII.CGG_VEH_VEHICULO.CVVEH_MANGA%TYPE,
IN IN_CVVEH_PUNTAL SII.CGG_VEH_VEHICULO.CVVEH_PUNTAL%TYPE,
IN IN_CVVEH_MATERIAL SII.CGG_VEH_VEHICULO.CVVEH_MATERIAL%TYPE,
IN IN_CVVEH_INGRESO SII.CGG_VEH_VEHICULO.CVVEH_INGRESO%TYPE,
IN IN_CVVEH_FECHA_INGRESO SII.CGG_VEH_VEHICULO.CVVEH_FECHA_INGRESO%TYPE,
IN IN_CVVEH_TIPO_INGRESO SII.CGG_VEH_VEHICULO.CVVEH_TIPO_INGRESO%TYPE,
IN IN_CVVEH_TIEMPO_ESTADIA SII.CGG_VEH_VEHICULO.CVVEH_TIEMPO_ESTADIA%TYPE,
IN IN_CVVEH_SALIO SII.CGG_VEH_VEHICULO.CVVEH_SALIO%TYPE,
IN IN_CVVEH_FECHA_SALIDA SII.CGG_VEH_VEHICULO.CVVEH_FECHA_SALIDA%TYPE,
IN IN_CVVEH_OBSERVACION SII.CGG_VEH_VEHICULO.CVVEH_OBSERVACION%TYPE,
IN IN_CVVEH_ESTADO SII.CGG_VEH_VEHICULO.CVVEH_ESTADO%TYPE,
IN IN_CVVEH_USUARIO_UPDATE SII.CGG_VEH_VEHICULO.CVVEH_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_VEH_VEHICULO SET
		CVMRC_CODIGO = IN_CVMRC_CODIGO, 
		CVCLR_CODIGO = IN_CVCLR_CODIGO, 
		CVCTG_CODIGO = IN_CVCTG_CODIGO, 
		CSCTP_CODIGO = IN_CSCTP_CODIGO, 
		CVSCT_CODIGO = IN_CVSCT_CODIGO, 
		CGG_CVCLR_CODIGO = IN_CGG_CVCLR_CODIGO, 
		CVVEH_NOMBRE = IN_CVVEH_NOMBRE, 
		CVVEH_MODELO = IN_CVVEH_MODELO, 
		CVVEH_TIPO = IN_CVVEH_TIPO, 
		CVVEH_ANIO_PRODUCCION = IN_CVVEH_ANIO_PRODUCCION, 
		CVVEH_CHASIS = IN_CVVEH_CHASIS, 
		CVVEH_PLACA = IN_CVVEH_PLACA, 
		CVVEH_ESLORA = IN_CVVEH_ESLORA, 
		CVVEH_MANGA = IN_CVVEH_MANGA, 
		CVVEH_PUNTAL = IN_CVVEH_PUNTAL, 
		CVVEH_MATERIAL = IN_CVVEH_MATERIAL, 
		CVVEH_INGRESO = IN_CVVEH_INGRESO, 
		CVVEH_FECHA_INGRESO = IN_CVVEH_FECHA_INGRESO, 
		CVVEH_TIPO_INGRESO = IN_CVVEH_TIPO_INGRESO, 
		CVVEH_TIEMPO_ESTADIA = IN_CVVEH_TIEMPO_ESTADIA, 
		CVVEH_SALIO = IN_CVVEH_SALIO, 
		CVVEH_FECHA_SALIDA = IN_CVVEH_FECHA_SALIDA, 
		CVVEH_OBSERVACION = IN_CVVEH_OBSERVACION, 
		CVVEH_ESTADO = IN_CVVEH_ESTADO, 
		CVVEH_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CVVEH_USUARIO_UPDATE = IN_CVVEH_USUARIO_UPDATE
	WHERE
		CVVEH_CODIGO = IN_CVVEH_CODIGO;
		
	IF(LENGTH(IN_CVVEH_FOTO) > 0) THEN
		UPDATE SII.CGG_VEH_VEHICULO SET
			CVVEH_FOTO = IN_CVVEH_FOTO
		WHERE
			CVVEH_CODIGO = IN_CVVEH_CODIGO;
	END IF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_VEH_VEHICULO
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_SELECT(
IN IN_CVVEH_CODIGO SII.CGG_VEH_VEHICULO.CVVEH_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CVVEH_CODIGO, 
		CVMRC_CODIGO, 
		CVCLR_CODIGO, 
		CVCTG_CODIGO, 
		CSCTP_CODIGO, 
		CVSCT_CODIGO, 
		CGG_CVCLR_CODIGO, 
		CVVEH_NOMBRE, 
		CVVEH_MODELO, 
		CVVEH_TIPO, 
		CVVEH_ANIO_PRODUCCION, 
		CVVEH_CHASIS, 
		CVVEH_PLACA, 
		CVVEH_FOTO, 
		CVVEH_ESLORA, 
		CVVEH_MANGA, 
		CVVEH_PUNTAL, 
		CVVEH_MATERIAL, 
		CVVEH_INGRESO, 
		CVVEH_FECHA_INGRESO, 
		CVVEH_TIPO_INGRESO, 
		CVVEH_TIEMPO_ESTADIA, 
		CVVEH_SALIO, 
		CVVEH_FECHA_SALIDA, 
		CVVEH_OBSERVACION, 
		CVVEH_ESTADO, 
		CVVEH_FECHA_INSERT, 
		CVVEH_USUARIO_INSERT, 
		CVVEH_FECHA_UPDATE, 
		CVVEH_USUARIO_UPDATE
	FROM SII.CGG_VEH_VEHICULO
	WHERE CVVEH_ESTADO = TRUE AND 
		CVVEH_CODIGO = IN_CVVEH_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_VEH_VEHICULO
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_DELETE(
IN IN_CVVEH_CODIGO SII.CGG_VEH_VEHICULO.CVVEH_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_VEH_VEHICULO
	WHERE
		CVVEH_CODIGO = IN_CVVEH_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_VEH_VEHICULO
* @param IN_CVVEH_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE VEHICULO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_DELETE_SOFT(
IN IN_CVVEH_CODIGO SII.CGG_VEH_VEHICULO.CVVEH_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_VEH_VEHICULO SET
		CVVEH_ESTADO = FALSE
	WHERE
		CVVEH_CODIGO = IN_CVVEH_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_S_CGG_VEH_MARCA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_MARCA.
* @param IN_CVMRC_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE MARCA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_S_CGG_VEH_MARCA(
IN IN_CVMRC_CODIGO SII.CGG_VEH_VEHICULO.CVMRC_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CVVEH_CODIGO, 
		CVMRC_CODIGO, 
		CVCLR_CODIGO, 
		CVCTG_CODIGO, 
		CSCTP_CODIGO, 
		CVSCT_CODIGO, 
		CGG_CVCLR_CODIGO, 
		CVVEH_NOMBRE, 
		CVVEH_MODELO, 
		CVVEH_TIPO, 
		CVVEH_ANIO_PRODUCCION, 
		CVVEH_CHASIS, 
		CVVEH_PLACA, 
		CVVEH_FOTO, 
		CVVEH_ESLORA, 
		CVVEH_MANGA, 
		CVVEH_PUNTAL, 
		CVVEH_MATERIAL, 
		CVVEH_INGRESO, 
		CVVEH_FECHA_INGRESO, 
		CVVEH_TIPO_INGRESO, 
		CVVEH_TIEMPO_ESTADIA, 
		CVVEH_SALIO, 
		CVVEH_FECHA_SALIDA, 
		CVVEH_OBSERVACION, 
		CVVEH_ESTADO, 
		CVVEH_FECHA_INSERT, 
		CVVEH_USUARIO_INSERT, 
		CVVEH_FECHA_UPDATE, 
		CVVEH_USUARIO_UPDATE
	FROM SII.CGG_VEH_VEHICULO
	WHERE CVVEH_ESTADO = TRUE AND 
		CVMRC_CODIGO = IN_CVMRC_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_MARCA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_MARCA.
* @param IN_CVMRC_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE MARCA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_MARCA(
IN IN_CVMRC_CODIGO SII.CGG_VEH_VEHICULO.CVMRC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_VEH_VEHICULO
	WHERE
		CVMRC_CODIGO = IN_CVMRC_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_MARCA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_MARCA.
* @param IN_CVMRC_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE MARCA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_DS_CGG_VEH_MARCA(
IN IN_CVMRC_CODIGO SII.CGG_VEH_VEHICULO.CVMRC_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_VEH_VEHICULO SET
		cvveh_estado = false
	WHERE
		CVMRC_CODIGO = IN_CVMRC_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_S_CGG_VEH_COLOR
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_COLOR.
* @param IN_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 1
* @param IN_CGG_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 2
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_S_CGG_VEH_COLOR(
IN IN_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CVCLR_CODIGO%TYPE, 
IN IN_CGG_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CGG_CVCLR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CVVEH_CODIGO, 
		CVMRC_CODIGO, 
		CVCLR_CODIGO, 
		CVCTG_CODIGO, 
		CSCTP_CODIGO, 
		CVSCT_CODIGO, 
		CGG_CVCLR_CODIGO, 
		CVVEH_NOMBRE, 
		CVVEH_MODELO, 
		CVVEH_TIPO, 
		CVVEH_ANIO_PRODUCCION, 
		CVVEH_CHASIS, 
		CVVEH_PLACA, 
		CVVEH_FOTO, 
		CVVEH_ESLORA, 
		CVVEH_MANGA, 
		CVVEH_PUNTAL, 
		CVVEH_MATERIAL, 
		CVVEH_INGRESO, 
		CVVEH_FECHA_INGRESO, 
		CVVEH_TIPO_INGRESO, 
		CVVEH_TIEMPO_ESTADIA, 
		CVVEH_SALIO, 
		CVVEH_FECHA_SALIDA, 
		CVVEH_OBSERVACION, 
		CVVEH_ESTADO, 
		CVVEH_FECHA_INSERT, 
		CVVEH_USUARIO_INSERT, 
		CVVEH_FECHA_UPDATE, 
		CVVEH_USUARIO_UPDATE
	FROM SII.CGG_VEH_VEHICULO
	WHERE CVVEH_ESTADO = TRUE AND 
		CVCLR_CODIGO = IN_CVCLR_CODIGO AND 
		CGG_CVCLR_CODIGO = IN_CGG_CVCLR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_COLOR
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_COLOR.
* @param IN_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 1
* @param IN_CGG_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 2
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_COLOR(
IN IN_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CVCLR_CODIGO%TYPE, 
IN IN_CGG_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CGG_CVCLR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_VEH_VEHICULO
	WHERE
		CVCLR_CODIGO = IN_CVCLR_CODIGO AND 
		CGG_CVCLR_CODIGO = IN_CGG_CVCLR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_COLOR
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_COLOR.
* @param IN_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 1
* @param IN_CGG_CVCLR_CODIGO IDENTIFICADOR UNICO DE REGISTRO COLOR 2
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_DS_CGG_VEH_COLOR(
IN IN_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CVCLR_CODIGO%TYPE, 
IN IN_CGG_CVCLR_CODIGO SII.CGG_VEH_VEHICULO.CGG_CVCLR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_VEH_VEHICULO SET
		cvveh_estado = false
	WHERE
		CVCLR_CODIGO = IN_CVCLR_CODIGO AND 
		CGG_CVCLR_CODIGO = IN_CGG_CVCLR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_S_CGG_VEH_CATEGORIA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_CATEGORIA.
* @param IN_CVCTG_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE CATEGORIA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_S_CGG_VEH_CATEGORIA(
IN IN_CVCTG_CODIGO SII.CGG_VEH_VEHICULO.CVCTG_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CVVEH_CODIGO, 
		CVMRC_CODIGO, 
		CVCLR_CODIGO, 
		CVCTG_CODIGO, 
		CSCTP_CODIGO, 
		CVSCT_CODIGO, 
		CGG_CVCLR_CODIGO, 
		CVVEH_NOMBRE, 
		CVVEH_MODELO, 
		CVVEH_TIPO, 
		CVVEH_ANIO_PRODUCCION, 
		CVVEH_CHASIS, 
		CVVEH_PLACA, 
		CVVEH_FOTO, 
		CVVEH_ESLORA, 
		CVVEH_MANGA, 
		CVVEH_PUNTAL, 
		CVVEH_MATERIAL, 
		CVVEH_INGRESO, 
		CVVEH_FECHA_INGRESO, 
		CVVEH_TIPO_INGRESO, 
		CVVEH_TIEMPO_ESTADIA, 
		CVVEH_SALIO, 
		CVVEH_FECHA_SALIDA, 
		CVVEH_OBSERVACION, 
		CVVEH_ESTADO, 
		CVVEH_FECHA_INSERT, 
		CVVEH_USUARIO_INSERT, 
		CVVEH_FECHA_UPDATE, 
		CVVEH_USUARIO_UPDATE
	FROM SII.CGG_VEH_VEHICULO
	WHERE CVVEH_ESTADO = TRUE AND 
		CVCTG_CODIGO = IN_CVCTG_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_CATEGORIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_CATEGORIA.
* @param IN_CVCTG_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE CATEGORIA.
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_CATEGORIA(
IN IN_CVCTG_CODIGO SII.CGG_VEH_VEHICULO.CVCTG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_VEH_VEHICULO
	WHERE
		CVCTG_CODIGO = IN_CVCTG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_CATEGORIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_CATEGORIA.
* @param IN_CVCTG_CODIGO IDENTIFICADOR UNICO DE REGISTRO DE CATEGORIA.
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_DS_CGG_VEH_CATEGORIA(
IN IN_CVCTG_CODIGO SII.CGG_VEH_VEHICULO.CVCTG_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_VEH_VEHICULO SET
		cvveh_estado = false
	WHERE
		CVCTG_CODIGO = IN_CVCTG_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_S_CGG_VEH_SECTOR
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_SECTOR.
* @param IN_CVSCT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_S_CGG_VEH_SECTOR(
IN IN_CVSCT_CODIGO SII.CGG_VEH_VEHICULO.CVSCT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CVVEH_CODIGO, 
		CVMRC_CODIGO, 
		CVCLR_CODIGO, 
		CVCTG_CODIGO, 
		CSCTP_CODIGO, 
		CVSCT_CODIGO, 
		CGG_CVCLR_CODIGO, 
		CVVEH_NOMBRE, 
		CVVEH_MODELO, 
		CVVEH_TIPO, 
		CVVEH_ANIO_PRODUCCION, 
		CVVEH_CHASIS, 
		CVVEH_PLACA, 
		CVVEH_FOTO, 
		CVVEH_ESLORA, 
		CVVEH_MANGA, 
		CVVEH_PUNTAL, 
		CVVEH_MATERIAL, 
		CVVEH_INGRESO, 
		CVVEH_FECHA_INGRESO, 
		CVVEH_TIPO_INGRESO, 
		CVVEH_TIEMPO_ESTADIA, 
		CVVEH_SALIO, 
		CVVEH_FECHA_SALIDA, 
		CVVEH_OBSERVACION, 
		CVVEH_ESTADO, 
		CVVEH_FECHA_INSERT, 
		CVVEH_USUARIO_INSERT, 
		CVVEH_FECHA_UPDATE, 
		CVVEH_USUARIO_UPDATE
	FROM SII.CGG_VEH_VEHICULO
	WHERE CVVEH_ESTADO = TRUE AND 
		CVSCT_CODIGO = IN_CVSCT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_SECTOR
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_SECTOR.
* @param IN_CVSCT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_SECTOR(
IN IN_CVSCT_CODIGO SII.CGG_VEH_VEHICULO.CVSCT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_VEH_VEHICULO
	WHERE
		CVSCT_CODIGO = IN_CVSCT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_VEH_SECTOR
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_VEH_SECTOR.
* @param IN_CVSCT_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_DS_CGG_VEH_SECTOR(
IN IN_CVSCT_CODIGO SII.CGG_VEH_VEHICULO.CVSCT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_VEH_VEHICULO SET
		cvveh_estado = false
	WHERE
		CVSCT_CODIGO = IN_CVSCT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_S_CGG_SECTOR_PRODUCTIVO
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_S_CGG_SECTOR_PRODUCTIVO(
IN IN_CSCTP_CODIGO SII.CGG_VEH_VEHICULO.CSCTP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CVVEH_CODIGO, 
		CVMRC_CODIGO, 
		CVCLR_CODIGO, 
		CVCTG_CODIGO, 
		CSCTP_CODIGO, 
		CVSCT_CODIGO, 
		CGG_CVCLR_CODIGO, 
		CVVEH_NOMBRE, 
		CVVEH_MODELO, 
		CVVEH_TIPO, 
		CVVEH_ANIO_PRODUCCION, 
		CVVEH_CHASIS, 
		CVVEH_PLACA, 
		CVVEH_FOTO, 
		CVVEH_ESLORA, 
		CVVEH_MANGA, 
		CVVEH_PUNTAL, 
		CVVEH_MATERIAL, 
		CVVEH_INGRESO, 
		CVVEH_FECHA_INGRESO, 
		CVVEH_TIPO_INGRESO, 
		CVVEH_TIEMPO_ESTADIA, 
		CVVEH_SALIO, 
		CVVEH_FECHA_SALIDA, 
		CVVEH_OBSERVACION, 
		CVVEH_ESTADO, 
		CVVEH_FECHA_INSERT, 
		CVVEH_USUARIO_INSERT, 
		CVVEH_FECHA_UPDATE, 
		CVVEH_USUARIO_UPDATE
	FROM SII.CGG_VEH_VEHICULO
	WHERE CVVEH_ESTADO = TRUE AND 
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_SECTOR_PRODUCTIVO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_D_CGG_SECTOR_PRODUCTIVO(
IN IN_CSCTP_CODIGO SII.CGG_VEH_VEHICULO.CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_VEH_VEHICULO
	WHERE
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_VEH_VEHICULO_D_CGG_SECTOR_PRODUCTIVO
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_VEH_VEHICULO QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_SECTOR_PRODUCTIVO.
* @param IN_CSCTP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE SECTOR PRODUCTIVO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_DS_CGG_SECTOR_PRODUCTIVO(
IN IN_CSCTP_CODIGO SII.CGG_VEH_VEHICULO.CSCTP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_VEH_VEHICULO SET
		cvveh_estado = false
	WHERE
		CSCTP_CODIGO = IN_CSCTP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* SELECCIONA UN VEHICULO POR SU CODIGO.
* @param IN_CVVEH_CODIGO CODIGO DE VEHICULO.
* @return CURSOR.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_VEH_VEHICULO_SELECT1(
IN IN_CVVEH_CODIGO VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
	STMT TEXT;
BEGIN
	STMT:='
	SELECT 
		C1.CVVEH_CODIGO, 
		C1.CVMRC_CODIGO,
		C1.TRAMITE,
		C1.MARCA,
		C1.CVCLR_CODIGO, 		
		C1.CVCTG_CODIGO, 
		C1.CATEGORIA,
		C1.CSCTP_CODIGO, 
		C1.PRODUCTIVO,
		C1.CVSCT_CODIGO, 
		C1.SECTOR,
		C1.CGG_CVCLR_CODIGO, 		
		C1.CVVEH_NOMBRE, 
		C1.CVVEH_MODELO, 
		C1.CVVEH_TIPO, 
		C1.CVVEH_ANIO_PRODUCCION, 
		C1.CVVEH_CHASIS, 
		C1.CVVEH_PLACA, 
		C1.CVVEH_ESLORA, 
		C1.CVVEH_MANGA, 
		C1.CVVEH_PUNTAL, 
		C1.CVVEH_MATERIAL, 
		C1.CVVEH_INGRESO, 
		C1.CVVEH_FECHA_INGRESO, 
		C1.CVVEH_TIPO_INGRESO, 
		C1.CVVEH_TIEMPO_ESTADIA, 
		C1.CVVEH_SALIO, 
		C1.CVVEH_FECHA_SALIDA, 
		C1.CVVEH_OBSERVACION, 
		C1.CVVEH_ESTADO, 
		C1.CVVEH_FECHA_INSERT, 
		C1.CVVEH_USUARIO_INSERT, 
		C1.CVVEH_FECHA_UPDATE, 
		C1.CVVEH_USUARIO_UPDATE,
		C1.ESTADOS,
		C1.PROPIETARIO,
		C1.CVMTR_CODIGO,
		C1.CVMTR_TONELAJE,
		C1.CVCMB_NOMBRE,
		C1.CVCLN_CILINDRAJE,
		C1.CVCLN_OBSERVACION 
	FROM (	
		WITH TRAMITE_VEHICULO AS(
			SELECT CRTRA_CODIGO,CRTRA_NUMERO,CVVEH_CODIGO FROM SII.CGG_RES_TRAMITE WHERE CVVEH_CODIGO IS NOT NULL
		)
		SELECT
			VH.CVVEH_CODIGO, 
			VH.CVMRC_CODIGO,
			ARRAY_TO_STRING(ARRAY((SELECT TRM.CRTRA_NUMERO FROM TRAMITE_VEHICULO TRM WHERE TRM.CVVEH_CODIGO = VH.CVVEH_CODIGO)),'', '') TRAMITE,
			MRC.CVMRC_NOMBRE MARCA,
			VH.CVCLR_CODIGO, 			
			VH.CVCTG_CODIGO, 
			CTG.CVCTG_NOMBRE CATEGORIA,
			VH.CSCTP_CODIGO, 
			SCTP.CSCTP_NOMBRE PRODUCTIVO,
			VH.CVSCT_CODIGO, 
			SCT.CVSCT_NOMBRE AS SECTOR,
			VH.CGG_CVCLR_CODIGO, 			
			VH.CVVEH_NOMBRE, 
			VH.CVVEH_MODELO, 
			VH.CVVEH_TIPO, 
			VH.CVVEH_ANIO_PRODUCCION, 
			VH.CVVEH_CHASIS, 
			VH.CVVEH_PLACA, 
			VH.CVVEH_ESLORA, 
			VH.CVVEH_MANGA, 
			VH.CVVEH_PUNTAL, 
			VH.CVVEH_MATERIAL, 
			VH.CVVEH_INGRESO, 
			VH.CVVEH_FECHA_INGRESO, 
			VH.CVVEH_TIPO_INGRESO, 
			VH.CVVEH_TIEMPO_ESTADIA, 
			VH.CVVEH_SALIO, 
			VH.CVVEH_FECHA_SALIDA, 
			VH.CVVEH_OBSERVACION, 
			VH.CVVEH_ESTADO, 
			VH.CVVEH_FECHA_INSERT, 
			VH.CVVEH_USUARIO_INSERT, 
			VH.CVVEH_FECHA_UPDATE, 
			VH.CVVEH_USUARIO_UPDATE,
			ARRAY_TO_STRING(ARRAY(SELECT CVSVM_NOMBRE FROM SII.CGG_VEH_ESTADO_VHMT VHMT
				INNER JOIN SII.CGG_VEH_VEHICULO_ESTADO VST ON VST.CVSVM_CODIGO = VHMT.CVSVM_CODIGO AND VST.CVVEH_CODIGO = VH.CVVEH_CODIGO
				WHERE VHMT.CVSVM_ESTADO), '', '') ESTADOS,
			(COALESCE(PRS.CRPER_NOMBRES,'''')||'' ''||COALESCE(PRS.CRPER_APELLIDO_PATERNO,'''')||'' ''||COALESCE(PRS.CRPER_APELLIDO_MATERNO,'''')) PROPIETARIO,
			VMTR.CVMTR_CODIGO,
			VMTR.CVMTR_TONELAJE,
			CMB.CVCMB_NOMBRE,
			CLN.CVCLN_CILINDRAJE,
			CLN.CVCLN_OBSERVACION 
		FROM SII.CGG_VEH_VEHICULO VH
		LEFT JOIN SII.CGG_VEH_MARCA MRC ON MRC.CVMRC_CODIGO = VH.CVMRC_CODIGO
		LEFT JOIN SII.CGG_VEH_CATEGORIA CTG ON CTG.CVCTG_CODIGO = VH.CVCTG_CODIGO
		LEFT JOIN SII.CGG_SECTOR_PRODUCTIVO SCTP ON SCTP.CSCTP_CODIGO = VH.CSCTP_CODIGO
		LEFT JOIN SII.CGG_VEH_SECTOR SCT ON SCT.CVSCT_CODIGO = VH.CVSCT_CODIGO
		LEFT JOIN SII.CGG_VEH_HISTORIAL VHS ON VHS.CVVEH_CODIGO = VH.CVVEH_CODIGO AND VHS.CVHST_FECHA_TRASPASO = (SELECT MAX(CVHST_FECHA_TRASPASO) FROM SII.CGG_VEH_HISTORIAL VEH WHERE CVVEH_CODIGO = VH.CVVEH_CODIGO)
		LEFT JOIN SII.CGG_RES_PERSONA PRS ON PRS.CRPER_CODIGO = VHS.CRPER_CODIGO
		LEFT JOIN CGG_VEH_VEHICULO_MOTOR VVMT ON (VH.CVVEH_CODIGO = VVMT.CVVEH_CODIGO)
		LEFT JOIN CGG_VEH_MOTOR VMTR ON (VMTR.CVMTR_CODIGO = VVMT.CVMTR_CODIGO)
		LEFT JOIN CGG_VEH_CILINDRAJE CLN ON (CLN.CVCLN_CODIGO = VMTR.CVCLN_CODIGO)
		LEFT JOIN CGG_VEH_COMBUSTIBLE CMB ON (CMB.CVCMB_CODIGO = VMTR.CVCMB_CODIGO)
		WHERE VH.CVVEH_CODIGO = '||QUOTE_LITERAL(IN_CVVEH_CODIGO)||'
	) AS C1';	
	OPEN TMP_REF FOR EXECUTE STMT;	
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;