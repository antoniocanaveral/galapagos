/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL
* @param IN_CRADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @param IN_CRADP_FECHA_REGISTRO FECHA DE RESGITRO DEL ADJUNTO
* @param IN_CRADP_DESCRIPCION DESCRIPCION DEL ARCHIVO ADJUNTO
* @param IN_CRADP_NOMBRE_ADJUNTO NOMBRE DEL DOCUMENTO ADJUNTO
* @param IN_CRADP_ADJUNTO ARCHIVO DIGITAL ANEXO
* @param IN_CRADP_ESTADO ESTADO DEL REGISTRO
* @param IN_CRADP_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CRADP_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_INSERT(
IN IN_CRADP_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRPER_CODIGO%TYPE, 
IN IN_CRADP_FECHA_REGISTRO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_FECHA_REGISTRO%TYPE, 
IN IN_CRADP_DESCRIPCION SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_DESCRIPCION%TYPE, 
IN IN_CRADP_NOMBRE_ADJUNTO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_NOMBRE_ADJUNTO%TYPE, 
IN IN_CRADP_ADJUNTO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_ADJUNTO%TYPE, 
IN IN_CRADP_ESTADO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_ESTADO%TYPE, 
IN IN_CRADP_USUARIO_INSERT SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_USUARIO_INSERT%TYPE, 
IN IN_CRADP_USUARIO_UPDATE SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CRADP_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_ADJUNTO_PERSONAL','CRADP_CODIGO','CRADP') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRADP_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_ADJUNTO_PERSONAL(
		CRADP_CODIGO, 
		CRPER_CODIGO, 
		CRADP_FECHA_REGISTRO, 
		CRADP_DESCRIPCION, 
		CRADP_NOMBRE_ADJUNTO, 
		CRADP_ADJUNTO, 
		CRADP_ESTADO, 
		CRADP_FECHA_INSERT, 
		CRADP_USUARIO_INSERT, 
		CRADP_FECHA_UPDATE, 
		CRADP_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRPER_CODIGO, 
		IN_CRADP_FECHA_REGISTRO, 
		IN_CRADP_DESCRIPCION, 
		IN_CRADP_NOMBRE_ADJUNTO, 
		IN_CRADP_ADJUNTO, 
		IN_CRADP_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRADP_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRADP_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_SELECT_AS(
IN IN_USER_NAME varchar(50)
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRADP_CODIGO, 
		CRPER_CODIGO, 
		CRADP_FECHA_REGISTRO, 
		CRADP_DESCRIPCION, 
		CRADP_NOMBRE_ADJUNTO, 
		CRADP_ADJUNTO, 
		CRADP_ESTADO, 
		CRADP_FECHA_INSERT, 
		CRADP_USUARIO_INSERT, 
		CRADP_FECHA_UPDATE, 
		CRADP_USUARIO_UPDATE
	FROM SII.CGG_RES_ADJUNTO_PERSONAL
	WHERE CRADP_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/*
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL__SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_SELECT(
IN IN_USER_NAME varchar(50),
IN IN_START_INDEX int,
IN IN_LIMIT int,
IN IN_SORT_FIELD_NAME varchar,
IN IN_DIRECTION varchar,
IN IN_FIND_TEXT text
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRADP_CODIGO, 
		CRPER_CODIGO, 
		CRADP_FECHA_REGISTRO, 
		CRADP_DESCRIPCION, 
		CRADP_NOMBRE_ADJUNTO, 
		CRADP_ADJUNTO, 
		CRADP_ESTADO, 
		CRADP_FECHA_INSERT, 
		CRADP_USUARIO_INSERT, 
		CRADP_FECHA_UPDATE, 
		CRADP_USUARIO_UPDATE
	FROM SII.CGG_RES_ADJUNTO_PERSONAL
	WHERE CRADP_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',CASE WHEN CRADP_CODIGO IS NULL THEN '''' ELSE CRADP_CODIGO END ||'' ''||CASE WHEN CRPER_CODIGO IS NULL THEN '''' ELSE CRPER_CODIGO END ||'' ''||CASE WHEN CRADP_FECHA_REGISTRO IS NULL THEN CURRENT_TIMESTAMP ELSE CRADP_FECHA_REGISTRO END ||'' ''||CASE WHEN CRADP_DESCRIPCION IS NULL THEN '''' ELSE CRADP_DESCRIPCION END ||'' ''||CASE WHEN CRADP_NOMBRE_ADJUNTO IS NULL THEN '''' ELSE CRADP_NOMBRE_ADJUNTO END ||'' ''||CASE WHEN CRADP_ESTADO IS NULL THEN FALSE ELSE CRADP_ESTADO END ||'' ''||CASE WHEN CRADP_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CRADP_FECHA_INSERT END ||'' ''||CASE WHEN CRADP_USUARIO_INSERT IS NULL THEN '''' ELSE CRADP_USUARIO_INSERT END ||'' ''||CASE WHEN CRADP_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CRADP_FECHA_UPDATE END ||'' ''||CASE WHEN CRADP_USUARIO_UPDATE IS NULL THEN '''' ELSE CRADP_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_ADJUNTO_PERSONAL
	WHERE CRADP_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_ADJUNTO_PERSONAL
	WHERE CRADP_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,CASE WHEN CRADP_CODIGO IS NULL THEN '''' ELSE CRADP_CODIGO END ||' '||CASE WHEN CRPER_CODIGO IS NULL THEN '''' ELSE CRPER_CODIGO END ||' '||CASE WHEN CRADP_FECHA_REGISTRO IS NULL THEN CURRENT_TIMESTAMP ELSE CRADP_FECHA_REGISTRO END ||' '||CASE WHEN CRADP_DESCRIPCION IS NULL THEN '''' ELSE CRADP_DESCRIPCION END ||' '||CASE WHEN CRADP_NOMBRE_ADJUNTO IS NULL THEN '''' ELSE CRADP_NOMBRE_ADJUNTO END ||' '||CASE WHEN CRADP_ESTADO IS NULL THEN FALSE ELSE CRADP_ESTADO END ||' '||CASE WHEN CRADP_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CRADP_FECHA_INSERT END ||' '||CASE WHEN CRADP_USUARIO_INSERT IS NULL THEN '''' ELSE CRADP_USUARIO_INSERT END ||' '||CASE WHEN CRADP_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CRADP_FECHA_UPDATE END ||' '||CASE WHEN CRADP_USUARIO_UPDATE IS NULL THEN '''' ELSE CRADP_USUARIO_UPDATE END ) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_ADJUNTO_PERSONAL
* @param IN_CRADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @param IN_CRADP_FECHA_REGISTRO FECHA DE RESGITRO DEL ADJUNTO
* @param IN_CRADP_DESCRIPCION DESCRIPCION DEL ARCHIVO ADJUNTO
* @param IN_CRADP_NOMBRE_ADJUNTO NOMBRE DEL DOCUMENTO ADJUNTO
* @param IN_CRADP_ADJUNTO ARCHIVO DIGITAL ANEXO
* @param IN_CRADP_ESTADO ESTADO DEL REGISTRO
* @param IN_CRADP_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_UPDATE(
IN IN_CRADP_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_CODIGO%TYPE, 
IN IN_CRPER_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRPER_CODIGO%TYPE, 
IN IN_CRADP_FECHA_REGISTRO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_FECHA_REGISTRO%TYPE, 
IN IN_CRADP_DESCRIPCION SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_DESCRIPCION%TYPE, 
IN IN_CRADP_NOMBRE_ADJUNTO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_NOMBRE_ADJUNTO%TYPE, 
IN IN_CRADP_ADJUNTO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_ADJUNTO%TYPE, 
IN IN_CRADP_ESTADO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_ESTADO%TYPE, 
IN IN_CRADP_USUARIO_UPDATE SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_ADJUNTO_PERSONAL SET
		CRPER_CODIGO = IN_CRPER_CODIGO, 
		CRADP_FECHA_REGISTRO = IN_CRADP_FECHA_REGISTRO, 
		CRADP_DESCRIPCION = IN_CRADP_DESCRIPCION, 
		CRADP_NOMBRE_ADJUNTO = IN_CRADP_NOMBRE_ADJUNTO, 
		CRADP_ADJUNTO = IN_CRADP_ADJUNTO, 
		CRADP_ESTADO = IN_CRADP_ESTADO, 
		CRADP_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRADP_USUARIO_UPDATE = IN_CRADP_USUARIO_UPDATE
	WHERE
		CRADP_CODIGO = IN_CRADP_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL
* @param IN_CRADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_SELECT(
IN IN_CRADP_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRADP_CODIGO, 
		CRPER_CODIGO, 
		CRADP_FECHA_REGISTRO, 
		CRADP_DESCRIPCION, 
		CRADP_NOMBRE_ADJUNTO, 
		CRADP_ADJUNTO, 
		CRADP_ESTADO, 
		CRADP_FECHA_INSERT, 
		CRADP_USUARIO_INSERT, 
		CRADP_FECHA_UPDATE, 
		CRADP_USUARIO_UPDATE
	FROM SII.CGG_RES_ADJUNTO_PERSONAL
	WHERE CRADP_ESTADO = TRUE AND 
		CRADP_CODIGO = IN_CRADP_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL
* @param IN_CRADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_DELETE(
IN IN_CRADP_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_ADJUNTO_PERSONAL
	WHERE
		CRADP_CODIGO = IN_CRADP_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL
* @param IN_CRADP_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_DELETE_SOFT(
IN IN_CRADP_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRADP_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_ADJUNTO_PERSONAL SET
		CRADP_ESTADO = FALSE
	WHERE
		CRADP_CODIGO = IN_CRADP_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_S_CGG_RES_PERSONA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_S_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRPER_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRADP_CODIGO, 
		CRPER_CODIGO, 
		CRADP_FECHA_REGISTRO, 
		CRADP_DESCRIPCION, 
		CRADP_NOMBRE_ADJUNTO, 
		CRADP_ADJUNTO, 
		CRADP_ESTADO, 
		CRADP_FECHA_INSERT, 
		CRADP_USUARIO_INSERT, 
		CRADP_FECHA_UPDATE, 
		CRADP_USUARIO_UPDATE
	FROM SII.CGG_RES_ADJUNTO_PERSONAL
	WHERE CRADP_ESTADO = TRUE AND 
		CRPER_CODIGO = IN_CRPER_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_D_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_ADJUNTO_PERSONAL
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_ADJUNTO_PERSONAL_D_CGG_RES_PERSONA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_ADJUNTO_PERSONAL QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_PERSONA.
* @param IN_CRPER_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DE PERSONA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_ADJUNTO_PERSONAL_DS_CGG_RES_PERSONA(
IN IN_CRPER_CODIGO SII.CGG_RES_ADJUNTO_PERSONAL.CRPER_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_ADJUNTO_PERSONAL SET
		cradp_estado = false
	WHERE
		CRPER_CODIGO = IN_CRPER_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

