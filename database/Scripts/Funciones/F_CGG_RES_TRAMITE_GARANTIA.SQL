/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE_GARANTIA
* @param IN_CRTGR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE GARANTIA
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @param IN_CRGRT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @param IN_CRTGR_VALOR VALOR DE LA GARANTIA INDIVIDUAL
* @param IN_CRTGR_FECHA_SOLI_DEVOL FECHA CUANDO SE SOLICITO LA DEVOLUCION DE LA GARANTIA
* @param IN_CRTGR_FECHA_DEVOLUCION FECHA CUANDO SE HIZO EFECTIVA LA DEVOLUCION
* @param IN_CRTGR_DEVUELTO SI LA GARANTIA ESTA DEVUELTA
* @param IN_CRTGR_ESTADO_ASIGNACION ESTADO DE LA ASIGNACION DE LA GARANTIA AL TRAMITE.
0 - ASIGNADO
1 - AUTORIZADO DEVOLUCION
2 - DEVUELTO
* @param IN_CRTGR_ESTADO ESTADO DEL REGISTRO
* @param IN_CRTGR_USUARIO_INSERT USUARIO QUE CREO EL REGISTRO
* @param IN_CRTGR_USUARIO_UPDATE USUARIO QUE ACTUALIZO EL REGISTRO
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_INSERT(
IN IN_CRTGR_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_CODIGO%TYPE,
IN IN_CRDPT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRDPT_CODIGO%TYPE,
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTRA_CODIGO%TYPE,
IN IN_CRGRT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRGRT_CODIGO%TYPE,
IN IN_CRTGR_VALOR SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_VALOR%TYPE,
IN IN_CRTGR_FECHA_SOLI_DEVOL SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_FECHA_SOLI_DEVOL%TYPE,
IN IN_CRTGR_FECHA_DEVOLUCION SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_FECHA_DEVOLUCION%TYPE,
IN IN_CRTGR_DEVUELTO SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_DEVUELTO%TYPE,
IN IN_CRTGR_ESTADO_ASIGNACION SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_ESTADO_ASIGNACION%TYPE,
IN IN_CRTGR_ESTADO SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_ESTADO%TYPE,
IN IN_CRTGR_USUARIO_INSERT SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_USUARIO_INSERT%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
TMP_CRGRT_VALOR NUMERIC;
BEGIN
	IF (UPPER(IN_CRTGR_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_TRAMITE_GARANTIA','CRTGR_CODIGO','CRTGR') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRTGR_CODIGO;
	END IF;
	
	SELECT CRGRT_VALOR INTO TMP_CRGRT_VALOR 
	FROM SII.CGG_RES_GARANTIA
	WHERE CRGRT_ESTADO AND CRGRT_CODIGO = IN_CRGRT_CODIGO;
	
	INSERT INTO SII.CGG_RES_TRAMITE_GARANTIA(
		CRTGR_CODIGO, 
		CRDPT_CODIGO, 
		CRTRA_CODIGO, 
		CRGRT_CODIGO, 
		CRTGR_VALOR,
		CRTGR_FECHA_SOLI_DEVOL, 
		CRTGR_FECHA_DEVOLUCION, 
		CRTGR_DEVUELTO, 
		CRTGR_ESTADO_ASIGNACION, 
		CRTGR_ESTADO, 
		CRTGR_FECHA_INSERT, 
		CRTGR_USUARIO_INSERT, 
		CRTGR_FECHA_UPDATE, 
		CRTGR_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CRDPT_CODIGO, 
		IN_CRTRA_CODIGO, 
		IN_CRGRT_CODIGO, 
		TMP_CRGRT_VALOR,
		IN_CRTGR_FECHA_SOLI_DEVOL, 
		IN_CRTGR_FECHA_DEVOLUCION, 
		IN_CRTGR_DEVUELTO, 
		IN_CRTGR_ESTADO_ASIGNACION, 
		IN_CRTGR_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CRTGR_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CRTGR_USUARIO_INSERT
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA
* @ param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_SELECT_AS(
IN IN_USER_NAME VARCHAR
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTGR_CODIGO, 
		CRDPT_CODIGO, 
		CRTRA_CODIGO, 
		CRGRT_CODIGO, 
		CRTGR_VALOR,
		CRTGR_FECHA_SOLI_DEVOL, 
		CRTGR_FECHA_DEVOLUCION, 
		CRTGR_DEVUELTO, 
		CRTGR_ESTADO_ASIGNACION, 
		CRTGR_ESTADO, 
		CRTGR_FECHA_INSERT, 
		CRTGR_USUARIO_INSERT, 
		CRTGR_FECHA_UPDATE, 
		CRTGR_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE CRTGR_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS.
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS.
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO. 
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC. 
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_SELECT(
IN IN_USER_NAME VARCHAR,
IN IN_START_INDEX INT,
IN IN_LIMIT INT,
IN IN_SORT_FIELD_NAME VARCHAR,
IN IN_DIRECTION VARCHAR,
IN IN_FIND_TEXT TEXT
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRTGR_CODIGO, 
		CRDPT_CODIGO, 
		CRTRA_CODIGO, 
		CRGRT_CODIGO, 
		CRTGR_VALOR,
		CRTGR_FECHA_SOLI_DEVOL, 
		CRTGR_FECHA_DEVOLUCION, 
		CRTGR_DEVUELTO, 
		CRTGR_ESTADO_ASIGNACION, 
		CRTGR_ESTADO, 
		CRTGR_FECHA_INSERT, 
		CRTGR_USUARIO_INSERT, 
		CRTGR_FECHA_UPDATE, 
		CRTGR_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE CRTGR_ESTADO AND (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CRTGR_FECHA_SOLI_DEVOL, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRTGR_FECHA_DEVOLUCION, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRTGR_DEVUELTO, FALSE)||'' ''||COALESCE(CRTGR_ESTADO_ASIGNACION, 0)||'' ''||COALESCE(CRTGR_ESTADO, FALSE)||'' ''||COALESCE(CRTGR_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRTGR_USUARIO_INSERT, '''')||'' ''||COALESCE(CRTGR_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRTGR_USUARIO_UPDATE, '''')) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE CRTGR_ESTADO AND (LENGTH(IN_FIND_TEXT) = 0 OR SII.F_STRING_IN(IN_FIND_TEXT,COALESCE(CRTGR_FECHA_SOLI_DEVOL, CURRENT_TIMESTAMP)||' '||COALESCE(CRTGR_FECHA_DEVOLUCION, CURRENT_TIMESTAMP)||' '||COALESCE(CRTGR_DEVUELTO, FALSE)||' '||COALESCE(CRTGR_ESTADO_ASIGNACION, 0)||' '||COALESCE(CRTGR_ESTADO, FALSE)||' '||COALESCE(CRTGR_FECHA_INSERT, CURRENT_TIMESTAMP)||' '||COALESCE(CRTGR_USUARIO_INSERT, '''')||' '||COALESCE(CRTGR_FECHA_UPDATE, CURRENT_TIMESTAMP)||' '||COALESCE(CRTGR_USUARIO_UPDATE, '''')) = 1);
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_PEN_COUNT
* CONTABILIZA EL NUMERO DE GARANTIAS PENDIENTES DE RETIRAR
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA.
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_PEN_COUNT(
IN IN_CRTRA_CODIGO VARCHAR
)RETURNS INT AS
$$
DECLARE
TMP_ROWS INT;
TMP_CRDPT_CODIGO VARCHAR;
BEGIN
	
	SELECT TRG.CRDPT_CODIGO INTO TMP_CRDPT_CODIGO 
	FROM SII.CGG_RES_TRAMITE_GARANTIA TRG 
	WHERE TRG.CRTRA_CODIGO = IN_CRTRA_CODIGO AND TRG.CRTGR_ESTADO;
	
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_RES_TRAMITE_GARANTIA 
	WHERE CRTGR_ESTADO AND 
		CRTGR_ESTADO_ASIGNACION = 0 AND
		CRDPT_CODIGO = TMP_CRDPT_CODIGO;
	
	IF (TMP_ROWS = 0) THEN
		SELECT COUNT(*) INTO TMP_ROWS
		FROM SII.CGG_RES_DEPOSITO_GARANTIA
		WHERE CRDPT_ESTADO AND 
			CRDPT_CODIGO = TMP_CRDPT_CODIGO AND
			CRDPT_ESTADO_DEPOSITO IN (0,1);
	END IF;
	
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;


/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_RES_TRAMITE_GARANTIA
* @param IN_CRTGR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE GARANTIA
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @param IN_CRGRT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @param IN_CRTGR_VALOR VALOR DE LA GARANTIA INDIVIDUAL
* @param IN_CRTGR_FECHA_SOLI_DEVOL FECHA CUANDO SE SOLICITO LA DEVOLUCION DE LA GARANTIA
* @param IN_CRTGR_FECHA_DEVOLUCION FECHA CUANDO SE HIZO EFECTIVA LA DEVOLUCION
* @param IN_CRTGR_DEVUELTO SI LA GARANTIA ESTA DEVUELTA
* @param IN_CRTGR_ESTADO_ASIGNACION ESTADO DE LA ASIGNACION DE LA GARANTIA AL TRAMITE.
0 - ASIGNADO
1 - AUTORIZADO DEVOLUCION
2 - DEVUELTO
* @param IN_CRTGR_ESTADO ESTADO DEL REGISTRO
* @param IN_CRTGR_USUARIO_UPDATE USUARIO QUE ACTUALIZO EL REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_UPDATE(
IN IN_CRTGR_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_CODIGO%TYPE,
IN IN_CRDPT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRDPT_CODIGO%TYPE,
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTRA_CODIGO%TYPE,
IN IN_CRGRT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRGRT_CODIGO%TYPE,
IN IN_CRTGR_VALOR SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_VALOR%TYPE,
IN IN_CRTGR_FECHA_SOLI_DEVOL SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_FECHA_SOLI_DEVOL%TYPE,
IN IN_CRTGR_FECHA_DEVOLUCION SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_FECHA_DEVOLUCION%TYPE,
IN IN_CRTGR_DEVUELTO SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_DEVUELTO%TYPE,
IN IN_CRTGR_ESTADO_ASIGNACION SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_ESTADO_ASIGNACION%TYPE,
IN IN_CRTGR_ESTADO SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_ESTADO%TYPE,
IN IN_CRTGR_USUARIO_UPDATE SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE_GARANTIA SET
		CRDPT_CODIGO = IN_CRDPT_CODIGO, 
		CRTRA_CODIGO = IN_CRTRA_CODIGO, 
		CRGRT_CODIGO = IN_CRGRT_CODIGO, 
		CRTGR_VALOR = IN_CRTGR_VALOR, 
		CRTGR_FECHA_SOLI_DEVOL = IN_CRTGR_FECHA_SOLI_DEVOL, 
		CRTGR_FECHA_DEVOLUCION = IN_CRTGR_FECHA_DEVOLUCION, 
		CRTGR_DEVUELTO = IN_CRTGR_DEVUELTO, 
		CRTGR_ESTADO_ASIGNACION = IN_CRTGR_ESTADO_ASIGNACION, 
		CRTGR_ESTADO = IN_CRTGR_ESTADO, 
		CRTGR_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CRTGR_USUARIO_UPDATE = IN_CRTGR_USUARIO_UPDATE
	WHERE
		CRTGR_CODIGO = IN_CRTGR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE_GARANTIA
* @param IN_CRTGR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE GARANTIA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_SELECT(
IN IN_CRTGR_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTGR_CODIGO, 
		CRDPT_CODIGO, 
		CRTRA_CODIGO, 
		CRGRT_CODIGO, 
		CRTGR_VALOR,
		CRTGR_FECHA_SOLI_DEVOL, 
		CRTGR_FECHA_DEVOLUCION, 
		CRTGR_DEVUELTO, 
		CRTGR_ESTADO_ASIGNACION, 
		CRTGR_ESTADO, 
		CRTGR_FECHA_INSERT, 
		CRTGR_USUARIO_INSERT, 
		CRTGR_FECHA_UPDATE, 
		CRTGR_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE CRTGR_ESTADO = TRUE AND 
		CRTGR_CODIGO = IN_CRTGR_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE_GARANTIA
* @param IN_CRTGR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE GARANTIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_DELETE(
IN IN_CRTGR_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE
		CRTGR_CODIGO = IN_CRTGR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_RES_TRAMITE_GARANTIA
* @param IN_CRTGR_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE GARANTIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_DELETE_SOFT(
IN IN_CRTGR_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTGR_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE_GARANTIA SET
		CRTGR_ESTADO = FALSE
	WHERE
		CRTGR_CODIGO = IN_CRTGR_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_S_CGG_RES_TRAMITE
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TRAMITE.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_S_CGG_RES_TRAMITE(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTRA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTGR_CODIGO, 
		CRDPT_CODIGO, 
		CRTRA_CODIGO, 
		CRGRT_CODIGO, 
		CRTGR_VALOR,
		CRTGR_FECHA_SOLI_DEVOL, 
		CRTGR_FECHA_DEVOLUCION, 
		CRTGR_DEVUELTO, 
		CRTGR_ESTADO_ASIGNACION, 
		CRTGR_ESTADO, 
		CRTGR_FECHA_INSERT, 
		CRTGR_USUARIO_INSERT, 
		CRTGR_FECHA_UPDATE, 
		CRTGR_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE CRTGR_ESTADO = TRUE AND 
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_D_CGG_RES_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TRAMITE.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_D_CGG_RES_TRAMITE(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTRA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_D_CGG_RES_TRAMITE
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_TRAMITE.
* @param IN_CRTRA_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE TRAMITE
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_DS_CGG_RES_TRAMITE(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTRA_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE_GARANTIA SET
		crtgr_estado = false
	WHERE
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_S_CGG_RES_DEPOSITO_GARANTIA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA.
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_S_CGG_RES_DEPOSITO_GARANTIA(
IN IN_CRDPT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRDPT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		TRG.CRTGR_CODIGO, 
		TRG.CRDPT_CODIGO, 
		TRG.CRTRA_CODIGO, 
		TRM.CRTRA_ANIO,
		TRM.CRTRA_NUMERO,
		TRG.CRGRT_CODIGO, 
		TRG.CRTGR_VALOR,
		TRG.CRTGR_FECHA_SOLI_DEVOL, 
		TRG.CRTGR_FECHA_DEVOLUCION, 
		TRG.CRTGR_DEVUELTO, 
		TRG.CRTGR_ESTADO_ASIGNACION, 
		TRG.CRTGR_ESTADO, 
		TRG.CRTGR_FECHA_INSERT, 
		TRG.CRTGR_USUARIO_INSERT, 
		TRG.CRTGR_FECHA_UPDATE, 
		TRG.CRTGR_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE_GARANTIA TRG
	INNER JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = TRG.CRTRA_CODIGO
	WHERE CRTGR_ESTADO = TRUE AND 
		CRDPT_CODIGO = IN_CRDPT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_D_CGG_RES_DEPOSITO_GARANTIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA.
* @param IN_CRDPT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_D_CGG_RES_DEPOSITO_GARANTIA(
IN IN_CRDPT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRDPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE
		CRDPT_CODIGO = IN_CRDPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_D_CGG_RES_DEPOSITO_GARANTIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_DEPOSITO_GARANTIA.
* @param IN_CRDPT_CODIGO IDENTIFICATIVO DE REGISTRO DEPOSITO DE GARANTIA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_DS_CGG_RES_DEPOSITO_GARANTIA(
IN IN_CRDPT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRDPT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE_GARANTIA SET
		crtgr_estado = false
	WHERE
		CRDPT_CODIGO = IN_CRDPT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_S_CGG_RES_GARANTIA
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_GARANTIA.
* @param IN_CRGRT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_S_CGG_RES_GARANTIA(
IN IN_CRGRT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRGRT_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTGR_CODIGO, 
		CRDPT_CODIGO, 
		CRTRA_CODIGO, 
		CRGRT_CODIGO, 
		CRTGR_VALOR,
		CRTGR_FECHA_SOLI_DEVOL, 
		CRTGR_FECHA_DEVOLUCION, 
		CRTGR_DEVUELTO, 
		CRTGR_ESTADO_ASIGNACION, 
		CRTGR_ESTADO, 
		CRTGR_FECHA_INSERT, 
		CRTGR_USUARIO_INSERT, 
		CRTGR_FECHA_UPDATE, 
		CRTGR_USUARIO_UPDATE
	FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE CRTGR_ESTADO = TRUE AND 
		CRGRT_CODIGO = IN_CRGRT_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_D_CGG_RES_GARANTIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_GARANTIA.
* @param IN_CRGRT_CODIGO CODIGO IDENTIFICATIVO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_D_CGG_RES_GARANTIA(
IN IN_CRGRT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRGRT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_RES_TRAMITE_GARANTIA
	WHERE
		CRGRT_CODIGO = IN_CRGRT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_RES_TRAMITE_GARANTIA_D_CGG_RES_GARANTIA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_RES_TRAMITE_GARANTIA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_RES_GARANTIA.
* @param IN_CRGRT_CODIGO IDENTIFICATIVO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA_DS_CGG_RES_GARANTIA(
IN IN_CRGRT_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRGRT_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE_GARANTIA SET
		crtgr_estado = false
	WHERE
		CRGRT_CODIGO = IN_CRGRT_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
*SELECCION LOS DEPOSITOS DE GARANTIA DE UN TRAMITE.
*@param IN_CRTRA_CODIGO CODIGO DE TRAMITE.
*@return CURSOR.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_RES_TRAMITE_GARANTIA(
IN IN_CRTRA_CODIGO SII.CGG_RES_TRAMITE_GARANTIA.CRTRA_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		GT.CRTGR_CODIGO, 
		DG.CRDPT_CODIGO,
		GT.CRGRT_CODIGO,
		DG.CRCPJ_CODIGO, 
		DG.CRPJR_CODIGO,
		DG.CRPER_CODIGO, 
		DG.CGG_CRPJR_CODIGO,
		DG.CRDPT_NUMERO, 
		DG.CRDPT_NUMERO_DOCUMENTO, 
		DG.CRDPT_CADUCA, 
		DG.CRDPT_TIPO, 
		DG.CRDPT_VALOR_DEPOSITO, 
		DG.CRDPT_FECHA_DEPOSITO, 
		DG.CRDPT_FECHA_ENTREGA, 
		DG.CRDPT_FECHA_CADUCIDAD, 
		DG.CRDPT_FECHA_CONTABILIZACION, 
		DG.CRDPT_FECHA_SOLIC_DEVOLUCION, 
		DG.CRDPT_FECHA_DEVOLUCION_DEFINITI, 
		DG.CRDPT_DEVUELTO, 
		DG.CRDPT_ESTADO_DEPOSITO, 
		DG.CRDPT_OBSERVACION, 
		DG.CRDPT_ESTADO, 
		DG.CRDPT_FECHA_INSERT, 
		DG.CRDPT_USUARIO_INSERT, 
		DG.CRDPT_FECHA_UPDATE, 
		DG.CRDPT_USUARIO_UPDATE 		
	FROM SII.CGG_RES_TRAMITE_GARANTIA GT
	INNER JOIN SII.CGG_RES_DEPOSITO_GARANTIA DG ON (GT.CRDPT_CODIGO = DG.CRDPT_CODIGO) 
	WHERE CRTGR_ESTADO = TRUE AND 
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

