/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_INSERT
* INGRESA UN REGISTRO EN LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA.
* @param IN_CDAPE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE APLICACION DE LA ENCUESTA
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CDAPE_FECHA FECHA DE APLICACION DE LA ENCUESTA
* @param IN_CDAPE_OBSERVACION OBSERVACION DE LA ENCUESTA
* @param IN_CDAPE_ESTADO ESTADO DEL REGISTRO
* @param IN_CDAPE_USUARIO_INSERT USUARIO QUE INGRESO LA INFORMACION EN EL SISTEMA
* @param IN_CDAPE_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VARCHAR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_INSERT(
IN IN_CDAPE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_CODIGO%TYPE, 
IN IN_CDCRE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDCRE_CODIGO%TYPE, 
IN IN_CDAPE_FECHA SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_FECHA%TYPE, 
IN IN_CDAPE_OBSERVACION SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_OBSERVACION%TYPE, 
IN IN_CDAPE_ESTADO SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_ESTADO%TYPE, 
IN IN_CDAPE_USUARIO_INSERT SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_USUARIO_INSERT%TYPE, 
IN IN_CDAPE_USUARIO_UPDATE SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_USUARIO_UPDATE%TYPE
)RETURNS VARCHAR AS
$$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CDAPE_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_DHU_APLICACION_ENCUESTA','CDAPE_CODIGO','CDAPE') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CDAPE_CODIGO;
	END IF;
	INSERT INTO SII.CGG_DHU_APLICACION_ENCUESTA(
		CDAPE_CODIGO, 
		CDCRE_CODIGO, 
		CDAPE_FECHA, 
		CDAPE_OBSERVACION, 
		CDAPE_ESTADO, 
		CDAPE_FECHA_INSERT, 
		CDAPE_USUARIO_INSERT, 
		CDAPE_FECHA_UPDATE, 
		CDAPE_USUARIO_UPDATE
	) VALUES (
		OUT_KEY, 
		IN_CDCRE_CODIGO, 
		IN_CDAPE_FECHA, 
		IN_CDAPE_OBSERVACION, 
		IN_CDAPE_ESTADO, 
		CURRENT_TIMESTAMP, 
		IN_CDAPE_USUARIO_INSERT, 
		CURRENT_TIMESTAMP, 
		IN_CDAPE_USUARIO_UPDATE
	);
	RETURN OUT_KEY;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_SELECT_AS
* SELECCIONA TODOS LOS REGISTROS DE LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_SELECT_AS(
IN IN_USER_NAME varchar(50)
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDAPE_CODIGO, 
		CDCRE_CODIGO, 
		CDAPE_FECHA, 
		CDAPE_OBSERVACION, 
		CDAPE_ESTADO, 
		CDAPE_FECHA_INSERT, 
		CDAPE_USUARIO_INSERT, 
		CDAPE_FECHA_UPDATE, 
		CDAPE_USUARIO_UPDATE
	FROM SII.CGG_DHU_APLICACION_ENCUESTA
	WHERE CDAPE_ESTADO = TRUE;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA__SELECT
* SELECCIONA N REGISTROS DE LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA.
* @param IN_USER_NAME NOMBRE DE USUARIO DEL SERVIDOR DE APP. O DE LA BASE DE DATOS
* @param IN_START_INDEX INDICE DE INICIO DE REGISTROS
* @param IN_LIMIT NUMERO DE REGISTRO DISCRIMINADOS
* @param IN_SORT_FIELD_NAME COLUMNA DE ORDENAMIENTO
* @param IN_DIRECTION DIRECCION DEL ORDENAMIENTO ASC/DESC
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_SELECT(
IN IN_USER_NAME varchar(50),
IN IN_START_INDEX int,
IN IN_LIMIT int,
IN IN_SORT_FIELD_NAME varchar,
IN IN_DIRECTION varchar,
IN IN_FIND_TEXT text
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		APE.CDAPE_CODIGO, 
		APE.CDCRE_CODIGO,
		ETA.CDENC_NOMBRE, 
		APE.CDAPE_FECHA, 
		APE.CDAPE_OBSERVACION, 
		APE.CDAPE_ESTADO, 
		APE.CDAPE_FECHA_INSERT, 
		APE.CDAPE_USUARIO_INSERT, 
		APE.CDAPE_FECHA_UPDATE, 
		APE.CDAPE_USUARIO_UPDATE
	FROM SII.CGG_DHU_APLICACION_ENCUESTA APE
	INNER JOIN SII.CGG_DHU_CRONOGRAMA_ENCUESTA ENC  ON(ENC.CDCRE_CODIGO=APE.CDCRE_CODIGO)
	INNER JOIN SII.CGG_DHU_ENCUESTA ETA ON(ETA.CDENC_CODIGO=ENC.CDENC_CODIGO)
	WHERE APE.CDAPE_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',
	CASE WHEN APE.CDAPE_CODIGO IS NULL THEN '''' ELSE APE.CDAPE_CODIGO END ||'' ''||
	CASE WHEN APE.CDCRE_CODIGO IS NULL THEN '''' ELSE APE.CDCRE_CODIGO END ||'' ''||
	CASE WHEN ETA.CDENC_NOMBRE IS NULL THEN '''' ELSE ETA.CDENC_NOMBRE END ||'' ''||
	CASE WHEN APE.CDAPE_FECHA IS NULL THEN CURRENT_TIMESTAMP ELSE APE.CDAPE_FECHA END ||'' ''||
	CASE WHEN APE.CDAPE_OBSERVACION IS NULL THEN '''' ELSE APE.CDAPE_OBSERVACION END ||'' ''||
	CASE WHEN APE.CDAPE_ESTADO IS NULL THEN FALSE ELSE APE.CDAPE_ESTADO END ||'' ''||
	CASE WHEN APE.CDAPE_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE APE.CDAPE_FECHA_INSERT END ||'' ''||
	CASE WHEN APE.CDAPE_USUARIO_INSERT IS NULL THEN '''' ELSE APE.CDAPE_USUARIO_INSERT END ||'' ''||
	CASE WHEN APE.CDAPE_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE APE.CDAPE_FECHA_UPDATE END ||'' ''||
	CASE WHEN APE.CDAPE_USUARIO_UPDATE IS NULL THEN '''' ELSE APE.CDAPE_USUARIO_UPDATE END ) = 1
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA.
* @return INT
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_COUNT(
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_APLICACION_ENCUESTA
	WHERE CDAPE_ESTADO = TRUE;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_COUNT
* CONTABILIZA EL NUMERO DE REGISTROS DE LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA
* QUE CUMPLEN CON EL CRITERIO DE BUSQUEDA.
* @param IN_FIND_TEXT CRITERIO DE BUSQUEDA
* @return TOTAL DE REGISTROS.
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_COUNT(
IN IN_FIND_TEXT TEXT
)RETURNS INT AS
$$
DECLARE
TMP_ROWS int2;
BEGIN
	SELECT COUNT(*) INTO TMP_ROWS
	FROM SII.CGG_DHU_APLICACION_ENCUESTA
	WHERE CDAPE_ESTADO = TRUE AND SII.F_STRING_IN(IN_FIND_TEXT,CASE WHEN CDAPE_CODIGO IS NULL THEN '''' ELSE CDAPE_CODIGO END ||' '||CASE WHEN CDCRE_CODIGO IS NULL THEN '''' ELSE CDCRE_CODIGO END ||' '||CASE WHEN CDAPE_FECHA IS NULL THEN CURRENT_TIMESTAMP ELSE CDAPE_FECHA END ||' '||CASE WHEN CDAPE_OBSERVACION IS NULL THEN '''' ELSE CDAPE_OBSERVACION END ||' '||CASE WHEN CDAPE_ESTADO IS NULL THEN FALSE ELSE CDAPE_ESTADO END ||' '||CASE WHEN CDAPE_FECHA_INSERT IS NULL THEN CURRENT_TIMESTAMP ELSE CDAPE_FECHA_INSERT END ||' '||CASE WHEN CDAPE_USUARIO_INSERT IS NULL THEN '''' ELSE CDAPE_USUARIO_INSERT END ||' '||CASE WHEN CDAPE_FECHA_UPDATE IS NULL THEN CURRENT_TIMESTAMP ELSE CDAPE_FECHA_UPDATE END ||' '||CASE WHEN CDAPE_USUARIO_UPDATE IS NULL THEN '''' ELSE CDAPE_USUARIO_UPDATE END ) = 1;
	RETURN TMP_ROWS;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_UPDATE
* ACTUALIZA UN REGISTRO EN LA TABLA sii.CGG_DHU_APLICACION_ENCUESTA.
* @param IN_CDAPE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE APLICACION DE LA ENCUESTA
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @param IN_CDAPE_FECHA FECHA DE APLICACION DE LA ENCUESTA
* @param IN_CDAPE_OBSERVACION OBSERVACION DE LA ENCUESTA
* @param IN_CDAPE_ESTADO ESTADO DEL REGISTRO
* @param IN_CDAPE_USUARIO_UPDATE USUARIO QUE REALIZO LA ACTUALIZACION DE LA INFORMACION
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_UPDATE(
IN IN_CDAPE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_CODIGO%TYPE, 
IN IN_CDCRE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDCRE_CODIGO%TYPE, 
IN IN_CDAPE_FECHA SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_FECHA%TYPE, 
IN IN_CDAPE_OBSERVACION SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_OBSERVACION%TYPE, 
IN IN_CDAPE_ESTADO SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_ESTADO%TYPE, 
IN IN_CDAPE_USUARIO_UPDATE SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_USUARIO_UPDATE%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_APLICACION_ENCUESTA SET
		CDCRE_CODIGO = IN_CDCRE_CODIGO, 
		CDAPE_FECHA = IN_CDAPE_FECHA, 
		CDAPE_OBSERVACION = IN_CDAPE_OBSERVACION, 
		CDAPE_ESTADO = IN_CDAPE_ESTADO, 
		CDAPE_FECHA_UPDATE = CURRENT_TIMESTAMP, 
		CDAPE_USUARIO_UPDATE = IN_CDAPE_USUARIO_UPDATE
	WHERE
		CDAPE_CODIGO = IN_CDAPE_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_SELECT
* SELECCIONA UN REGISTRO EN LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA.
* @param IN_CDAPE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE APLICACION DE LA ENCUESTA
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_SELECT(
IN IN_CDAPE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDAPE_CODIGO, 
		CDCRE_CODIGO, 
		CDAPE_FECHA, 
		CDAPE_OBSERVACION, 
		CDAPE_ESTADO, 
		CDAPE_FECHA_INSERT, 
		CDAPE_USUARIO_INSERT, 
		CDAPE_FECHA_UPDATE, 
		CDAPE_USUARIO_UPDATE
	FROM SII.CGG_DHU_APLICACION_ENCUESTA
	WHERE CDAPE_ESTADO = TRUE AND 
		CDAPE_CODIGO = IN_CDAPE_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_DELETE
* ELIMINA UN REGISTRO EN LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA.
* @param IN_CDAPE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE APLICACION DE LA ENCUESTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_DELETE(
IN IN_CDAPE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_APLICACION_ENCUESTA
	WHERE
		CDAPE_CODIGO = IN_CDAPE_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_DELETE_SOFT
* ELIMINA LOGICAMENTE UN REGISTRO EN LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA.
* @param IN_CDAPE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO DE APLICACION DE LA ENCUESTA
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_DELETE_SOFT(
IN IN_CDAPE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDAPE_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_APLICACION_ENCUESTA SET
		CDAPE_ESTADO = FALSE
	WHERE
		CDAPE_CODIGO = IN_CDAPE_CODIGO;
END$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_S_CGG_DHU_CRONOGRAMA_ENCUESTA.
* SELECCIONA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return REFCURSOR
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_S_CGG_DHU_CRONOGRAMA_ENCUESTA(
IN IN_CDCRE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDCRE_CODIGO%TYPE
)RETURNS SETOF REFCURSOR AS
$$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CDAPE_CODIGO, 
		CDCRE_CODIGO, 
		CDAPE_FECHA, 
		CDAPE_OBSERVACION, 
		CDAPE_ESTADO, 
		CDAPE_FECHA_INSERT, 
		CDAPE_USUARIO_INSERT, 
		CDAPE_FECHA_UPDATE, 
		CDAPE_USUARIO_UPDATE
	FROM SII.CGG_DHU_APLICACION_ENCUESTA
	WHERE CDAPE_ESTADO = TRUE AND 
		CDCRE_CODIGO = IN_CDCRE_CODIGO;
	RETURN NEXT TMP_REF;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_D_CGG_DHU_CRONOGRAMA_ENCUESTA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_D_CGG_DHU_CRONOGRAMA_ENCUESTA(
IN IN_CDCRE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDCRE_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	DELETE FROM SII.CGG_DHU_APLICACION_ENCUESTA
	WHERE
		CDCRE_CODIGO = IN_CDCRE_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

/**
* FUNCION SII.F_CGG_DHU_APLICACION_ENCUESTA_D_CGG_DHU_CRONOGRAMA_ENCUESTA
* ELIMINA TODOS LOS REGISTRO DE LA TABLA SII.CGG_DHU_APLICACION_ENCUESTA QUE ESTAN
* RELACIONADOS CON LA TABLA SII.CGG_DHU_CRONOGRAMA_ENCUESTA.
* @param IN_CDCRE_CODIGO IDENTIFICATIVO UNICO DE REGISTRO
* @return VOID
*/
CREATE OR REPLACE FUNCTION SII.F_CGG_DHU_APLICACION_ENCUESTA_DS_CGG_DHU_CRONOGRAMA_ENCUESTA(
IN IN_CDCRE_CODIGO SII.CGG_DHU_APLICACION_ENCUESTA.CDCRE_CODIGO%TYPE
)RETURNS VOID AS
$$
BEGIN
	UPDATE SII.CGG_DHU_APLICACION_ENCUESTA SET
		cdape_estado = false
	WHERE
		CDCRE_CODIGO = IN_CDCRE_CODIGO;
END
$$
LANGUAGE 'plpgsql' VOLATILE CALLED ON NULL INPUT;

