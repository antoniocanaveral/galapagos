/** * Funcion publica. Formulario que permite visualizar en forma de listado, la informacion de los registros de tabla Cgg_veh_color. * @constructor * @author Besixplus Cia. Ltda. */function FrmListadoCgg_veh_color() {    var optMenu = 'Vehiculos/Configuraci\u00f3n/Color';    var urlListadoCgg_veh_color = URL_WS + "Cgg_veh_color";    var tituloListadoCgg_veh_color = 'Listado de colores';    var descListadoCgg_veh_color = 'El formulario permite administrar informaci\u00f3n de los colores de los veh\u00f3culos.';    /**     * Ext.Button Boton que permite insertar un nuevo registro de la ventana winFrmListadoCgg_veh_color.     */    var btnNuevoCgg_veh_color = new Ext.Button({        id: 'btnNuevoCgg_veh_color',        text: 'Nuevo',        iconCls: 'iconNuevo',        listeners: {            click: function () {                var objCgg_veh_color = new FrmCgg_veh_color("insert");                objCgg_veh_color.closeHandler(function () {                    gsCgg_veh_color.reload();                });                objCgg_veh_color.show();            }        }    });    /**     * Ext.Button Boton que permite editar un registro de la ventana winFrmListadoCgg_veh_color.     */    var btnEditarCgg_veh_color = new Ext.Button({        id: 'btnEditarCgg_veh_color',        text: 'Editar',        iconCls: 'iconEditar',        listeners: {            click: function () {                var r = grdCgg_veh_color.getSelectionModel().getSelected();                if (r) {                    var objCgg_veh_color = new FrmCgg_veh_color("update", r);                    objCgg_veh_color.closeHandler(function () {                        gsCgg_veh_color.reload();                    });                    objCgg_veh_color.loadData();                    objCgg_veh_color.show();                }            }        }    });    /**     * Ext.Button Boton que permite eliminar un registro de la ventana winFrmListadoCgg_veh_color.     */    var btnEliminarCgg_veh_color = new Ext.Button({        id: 'btnEliminarCgg_veh_color',        text: 'Eliminar',        iconCls: 'iconEliminar',        listeners: {            click: function () {                Ext.Msg.show({                    title: 'Aviso',                    msg: 'Seguro de eliminar el registro seleccionado?',                    buttons: Ext.Msg.YESNO,                    fn: SWRCgg_veh_color,                    icon: Ext.MessageBox.QUESTION                });                function SWRCgg_veh_color(btn) {                    if (btn == 'yes') {                        try {                            function CallBackCgg_veh_color(r) {                                winFrmListadoCgg_veh_color.getEl().unmask();                                if (r == 'true') {                                    Ext.Msg.show({                                        title: tituloListadoCgg_veh_color,                                        msg: 'La informaci\u00f3n del color ha sido eliminada.',                                        buttons: Ext.Msg.OK,                                        icon: Ext.MessageBox.INFO                                    });                                    gsCgg_veh_color.reload();                                } else {                                    Ext.Msg.show({                                        title: tituloListadoCgg_veh_color,                                        msg: 'La informaci\u00f3n del color no ha podido ser eliminada.'+(r.message?r.message:r),                                        buttons: Ext.Msg.OK,                                        icon: Ext.MessageBox.ERROR                                    });                                }                            }                            winFrmListadoCgg_veh_color.getEl().mask('Eliminando...', 'x-mask-loading');                            var param = new SOAPClientParameters();                            param.add('inCvclr_codigo', grdCgg_veh_color.getSelectionModel().getSelected().get('CVCLR_CODIGO'));                            SOAPClient.invoke(urlListadoCgg_veh_color, "delete", param, true, CallBackCgg_veh_color);                        } catch (inErr) {                            winFrmListadoCgg_veh_color.getEl().unmask();                        }                    }                }            }        }    });    /**     * Ext.Button Boton que permite salir de la ventana winFrmListadoCgg_veh_color.     */    var btnSalirCgg_veh_color = new Ext.Button({        id: 'btnSalirCgg_veh_color',        text: 'Salir',        iconCls: 'iconSalir',        listeners: {            click: function () {                winFrmListadoCgg_veh_color.close();            }        }    });    /**     * Ext.grid.ColumnModel Define el modelo de columnas para el objeto cgg_veh_color.     */    var cmCgg_veh_color = new Ext.grid.ColumnModel([    {        dataIndex: 'CVCLR_NOMBRE',        header: 'Nombre',        width: 150,        sortable: true},    {        dataIndex: 'CVCLR_OBSERVACION',        header: 'Observaci\u00f3n',        width: 250,        sortable: true}]);    /**     * Ext.data.Store Agrupacion de registros de la tabla Cgg_veh_color por un campo especifico.     */    var gsCgg_veh_color = new Ext.data.Store({        proxy: new Ext.ux.bsx.SoapProxy({            url: URL_WS + "Cgg_veh_color",            method: "selectPage",            pagin: true        }),        remoteSort: true,        reader: new Ext.data.JsonReader({            id: 'CVCLR_CODIGO',            root: 'dataSet',            totalProperty: 'totalCount'        }, [            {            name: 'CVCLR_CODIGO'},        {            name: 'CVCLR_NOMBRE'},        {            name: 'CVCLR_OBSERVACION'}        ]),        sortInfo: {            field: 'CVCLR_NOMBRE',            direction: 'ASC'        },        baseParams: {            keyword: "",            format: 'JSON'        }    });    /**     * Ext.PagingToolbar Barra de navegacion que permite la visualizacion organizada de los registros de la tabla Cgg_veh_color.     */    var pgBarCgg_veh_color = new Ext.PagingToolbar({        store: gsCgg_veh_color,        displayInfo: true,        pageSize: RECORD_PAGE,        displayMsg: 'Mostrando {0} - {1} de {2}',        temptyMsg: 'No hay informaci\u00f3n para mostrar'    });    /**     * Ext.grid.GridPanel Representacion de los datos de la tabla Cgg_veh_color en un formato tabular de filas y columnas.     */    var grdCgg_veh_color = new Ext.grid.GridPanel({        cm: cmCgg_veh_color,        store: gsCgg_veh_color,        region: 'center',        sm: new Ext.grid.RowSelectionModel({            singleSelect: true        }),        loadMask: {            msg: "Cargando..."        },        tbar: [            'Buscar: ',            new Ext.ux.bsx.SearchField({            store: gsCgg_veh_color,            width: 200        })            ],        bbar: pgBarCgg_veh_color,        listeners: {            rowdblclick: function (inGridComponent, inRowIndex, inEventObject) {                if (!btnEditarCgg_veh_color.disabled) {                    btnEditarCgg_veh_color.fireEvent('click', btnEditarCgg_veh_color);                }            }        }    });    gsCgg_veh_color.reload({        params: {            start: 0,            limit: RECORD_PAGE,            format: 'JSON'        }    });    /**     * Ext.Window Ventana en la que reside los controles necesarios para visualizar la informacion de los registros de la tabla Cgg_veh_color.     */    var winFrmListadoCgg_veh_color = new Ext.Window({        id: 'winFrmListadoCgg_veh_color',        title: tituloListadoCgg_veh_color,        width: 600,        minWidth: 600,        height: 400,        minHeight: 400,        maximizable: true,        minimizable: true,        constrain: true,        layout: 'border',        tbar: getPanelTitulo(tituloListadoCgg_veh_color, descListadoCgg_veh_color),        items: [grdCgg_veh_color],        bbar: [btnNuevoCgg_veh_color, btnEditarCgg_veh_color, btnEliminarCgg_veh_color, '->', btnSalirCgg_veh_color]    });    /**     * Funcion que aplica los privilegios del usuario.     */    applyGrants(winFrmListadoCgg_veh_color.getBottomToolbar());    /**     * Funcion miembro que devuelve la ventana winFrmListadoCgg_veh_color.     * @returns ventana winFrmCgg_veh_color.     * @base FrmListadoCgg_veh_color.prototype.show     */    this.getWindow = function () {        return winFrmListadoCgg_veh_color;    }    /**     * Funcion miembro que carga los controles de la ventana winFrmListadoCgg_veh_color.     * @base FrmListadoCgg_veh_color.prototype.loadData     */    this.loadData = function () {        gsCgg_veh_color.load();    }    /**     * Funcion miembro que develve el ColumnModel utilizado en el listado.     */    this.getColumnModel = function () {        return cmCgg_veh_color;    }    /**     * Funcion miembro que develve el Store utilizado en el listado.     */    this.getStore = function () {        return gsCgg_veh_color;    }}/** * Funcion prototipo. Devuelve el ColumnModel utilizado en el formulario. */FrmListadoCgg_veh_color.prototype.getColumnModel = function () {    this.getColumnModel();}/** * Funcion prototipo. Devuelve el Store utilizado en el formulario. */FrmListadoCgg_veh_color.prototype.getStore = function () {    this.getStore();}/** * Funcion prototipo. Permite mostrar la ventana winFrmListadoCgg_veh_color desde una instancia. */FrmListadoCgg_veh_color.prototype.show = function () {    this.getWindow().show();}/** * Funcion prototipo. Permite cerrar la ventana winFrmListadoCgg_veh_color desde una instancia. */FrmListadoCgg_veh_color.prototype.close = function () {    this.getWindow().close();}/** * Funcion prototipo. Permite saber si se ha cerrado la ventana winFrmListadoCgg_veh_color, * con el fin de realizar otras acciones desde una instancia. */FrmListadoCgg_veh_color.prototype.closeHandler = function (inFunctionHandler) {    this.getWindow().on('close', inFunctionHandler);}/** * Funcion prototipo. Permite cargar los controles de la ventana winFrmListadoCgg_veh_color desde una instancia. */FrmListadoCgg_veh_color.prototype.loadData = function () {    this.loadData();}