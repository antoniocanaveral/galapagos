CREATE OR REPLACE FUNCTION sii.f_cgg_regla_validacion_select(
    in_user_name character varying,
    in_start_index integer,
    in_limit integer,
    in_sort_field_name character varying,
    in_direction character varying,
    in_find_text text)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR EXECUTE
	'SELECT
		CRVAL_CODIGO,
		CGCNF_CODIGO,
		CRVAL_NOMBRE,
		CRVAL_DESCRIPCION,
		CRVAL_FUNCION_VALIDACION,
		CRVAL_OPERADOR_COMPARADOR,
		CRVAL_VALOR_LIBRE,
		CRVAL_RESULTADO_ACEPTACION,
		CRVAL_SUGERENCIA,
		CRVAL_TIPO,
		CRVAR_FECHA_INICIO,
		CRVAR_FECHA_FIN,
		CRVAL_VALOR_1,
		CRVAL_VALOR_2,
		CRVAL_ESTADO,
		CRVAL_FECHA_INSERT,
		CRVAL_USUARIO_INSERT,
		CRVAL_FECHA_UPDATE,
		CRVAL_USUARIO_UPDATE,
		TRIM(PROARGNAMES::TEXT,''{}'')  AS CRVAL_FUNCION_PLSQL_PARAMETROS
	FROM SII.CGG_REGLA_VALIDACION
	INNER JOIN PG_PROC ON (UPPER(PRONAME) = UPPER(CRVAL_FUNCION_VALIDACION))
	WHERE CRVAL_ESTADO = TRUE AND SII.F_STRING_IN('''||IN_FIND_TEXT||''',COALESCE(CRVAL_NOMBRE, '''')||'' ''||COALESCE(CRVAL_DESCRIPCION, '''')||'' ''||COALESCE(CRVAL_FUNCION_VALIDACION, '''')||'' ''||COALESCE(CRVAL_OPERADOR_COMPARADOR, '''')||'' ''||COALESCE(CRVAL_VALOR_LIBRE, '''')||'' ''||COALESCE(CRVAL_RESULTADO_ACEPTACION, '''')||'' ''||COALESCE(CRVAL_SUGERENCIA, '''')||'' ''||COALESCE(CRVAL_TIPO, 0)||'' ''||COALESCE(CRVAR_FECHA_INICIO, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRVAR_FECHA_FIN, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRVAL_VALOR_1, '''')||'' ''||COALESCE(CRVAL_VALOR_2, '''')||'' ''||COALESCE(CRVAL_ESTADO, FALSE)||'' ''||COALESCE(CRVAL_FECHA_INSERT, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRVAL_USUARIO_INSERT, '''')||'' ''||COALESCE(CRVAL_FECHA_UPDATE, CURRENT_TIMESTAMP)||'' ''||COALESCE(CRVAL_USUARIO_UPDATE, '''')) = 1
	UNION
	SELECT
		CRVAL_CODIGO,
		CGCNF_CODIGO,
		CRVAL_NOMBRE,
		CRVAL_DESCRIPCION,
		CRVAL_FUNCION_VALIDACION,
		CRVAL_OPERADOR_COMPARADOR,
		CRVAL_VALOR_LIBRE,
		CRVAL_RESULTADO_ACEPTACION,
		CRVAL_SUGERENCIA,
		CRVAL_TIPO,
		CRVAR_FECHA_INICIO,
		CRVAR_FECHA_FIN,
		CRVAL_VALOR_1,
		CRVAL_VALOR_2,
		CRVAL_ESTADO,
		CRVAL_FECHA_INSERT,
		CRVAL_USUARIO_INSERT,
		CRVAL_FECHA_UPDATE,
		CRVAL_USUARIO_UPDATE,
		TRIM('''')  AS CRVAL_FUNCION_PLSQL_PARAMETROS
	FROM SII.CGG_REGLA_VALIDACION WHERE CRVAL_FUNCION_VALIDACION LIKE ''com%''
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
		RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;


  -->*** FUNCION MODIFICADA REGLA DE DIAS DE TEMPORAL

  CREATE OR REPLACE FUNCTION f_tiempo_estadia_temporal(
    in_crper_codigo character varying,
    in_fecha_ingreso character varying,
    in_fecha_salida character varying,
    in_operador character varying,
    in_valor_comparacion character varying)
  RETURNS character varying AS
$BODY$
DECLARE
	TMP_ESTADIA INT;
        OUT_RESULTADO VARCHAR;
        TMP_ESTADIA_TOTAL INT;
        TMP_TIEMPO_RESTANTE INT;
BEGIN

	--SELECT SII.F_CALCULO_DIAS_ESTADIA_TEMPORALES(CURRENT_TIMESTAMP, IN_CRPER_CODIGO) INTO TMP_ESTADIA;
  TMP_ESTADIA := 0;
	TMP_ESTADIA_TOTAL= (TMP_ESTADIA + (IN_FECHA_SALIDA::DATE - IN_FECHA_INGRESO::DATE));

	IF (TMP_ESTADIA = 0) THEN
            OUT_RESULTADO := 'true';
	ELSE
	    SELECT SII.F_CGG_REGLA_VALIDACION(TMP_ESTADIA_TOTAL::VARCHAR,IN_OPERADOR,IN_VALOR_COMPARACION) INTO OUT_RESULTADO;
	END IF;

	  IF (OUT_RESULTADO='false') THEN
	    TMP_TIEMPO_RESTANTE=730-TMP_ESTADIA;
	    OUT_RESULTADO='FALSE, Solo cuenta con: ' || TMP_TIEMPO_RESTANTE || ' d√≠as como residente temporal';
	    END IF;

	RETURN OUT_RESULTADO;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;