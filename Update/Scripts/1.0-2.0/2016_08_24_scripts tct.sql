-- Function: sii.f_cgg_res_persona_autorizado_ingreso_turista_transeunte2(character varying, character varying, character varying, character varying)

-- DROP FUNCTION sii.f_cgg_res_persona_autorizado_ingreso_turista_transeunte2(character varying, character varying, character varying, character varying);

CREATE OR REPLACE FUNCTION sii.f_cgg_res_persona_autorizado_ingreso_turista_transeunte2(in_crper_num_doc_identific character varying, in_fecha_ingreso timestamp with time zone, inoperador character varying, invalorcomparacion character varying)
  RETURNS character varying AS
$BODY$
DECLARE
	TMP_VALOR_DIAS_TRANSCURRIDO INTEGER;
	TMP_RECORD RECORD;
	TMP_CRTST_CODIGO VARCHAR;
	TMP_NUMERO_DIAS VARCHAR;
    OUT_KEY VARCHAR;
    TMP_TIPO_USUARIO boolean;
    TMP_CODIGO VARCHAR;
	TMP_GEN_CODIGO VARCHAR;
	TMP_PERMANENTE VARCHAR;
	TMP_TEMPORAL VARCHAR;
BEGIN   
	TMP_VALOR_DIAS_TRANSCURRIDO:=0;
	TMP_NUMERO_DIAS:='true';
	SELECT CGCNF_VALOR_CADENA INTO TMP_PERMANENTE FROM CGG_CONFIGURACION WHERE CGCNF_CODIGO='03';
	SELECT CGCNF_VALOR_CADENA INTO TMP_TEMPORAL FROM CGG_CONFIGURACION WHERE CGCNF_CODIGO='04';
	SELECT CRPER_CODIGO INTO TMP_CODIGO FROM SII.CGG_RES_PERSONA WHERE CRPER_NUM_DOC_IDENTIFIC = IN_CRPER_NUM_DOC_IDENTIFIC;
	
	SELECT CRTST_CODIGO INTO TMP_CRTST_CODIGO 
	FROM SII.CGG_RES_RESIDENCIA
	WHERE CRPER_CODIGO = TMP_CODIGO AND 
		CRRSD_FECHA_INICIO::DATE = IN_FECHA_INGRESO AND
		CRRSD_VIGENTE AND
		CRTST_CODIGO IN (WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
			SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
			FROM CGG_CONFIGURACION
			WHERE CGCNF_CODIGO = '05')
			UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
			WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
		) SELECT CRTST_CODIGO  FROM TIPO);
		
	IF (TMP_CRTST_CODIGO IS NULL) THEN
		SELECT SII.F_CALCULO_DIAS_ESTADIA(IN_FECHA_INGRESO, TMP_CODIGO) INTO TMP_VALOR_DIAS_TRANSCURRIDO;
	END IF;
	
	SELECT SII.F_CGG_REGLA_VALIDACION(TMP_VALOR_DIAS_TRANSCURRIDO::VARCHAR,INOPERADOR,INVALORCOMPARACION) INTO TMP_NUMERO_DIAS;

	
	RETURN TMP_NUMERO_DIAS;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION sii.f_cgg_res_persona_autorizado_ingreso_turista_transeunte2(character varying, timestamp with time zone, character varying, character varying)
  OWNER TO postgres;


-- Ingreso de la regla anterior a la lista de reglas_validación

INSERT INTO sii.cgg_regla_validacion (crval_codigo, cgcnf_codigo, crval_nombre, crval_descripcion, crval_funcion_validacion, crval_operador_comparador, crval_valor_libre, crval_resultado_aceptacion, crval_sugerencia, crval_tipo, crvar_fecha_inicio, crvar_fecha_fin, crval_valor_1, crval_valor_2, crval_estado, crval_fecha_insert, crval_usuario_insert, crval_fecha_update, crval_usuario_update) 
VALUES ('CRVAL59', null, 'Calculo de los 90 dias', 'Calcula el total de días de visita a la provincia de un persona.', 'F_CGG_RES_PERSONA_AUTORIZADO_INGRESO_TURISTA_TRANSEUNTE2', '<=', '90', 'TRUE', 'La Persona no puede ingresar por que ha excedido los días autorizados.', 1, '2011-03-18 01:00:00.000000', '2011-03-18 01:00:00.000000', null, null, true, '2011-03-18 14:03:55.417804', 'admin', '2011-03-19 19:53:24.790092', 'admin');

--

INSERT INTO sii.cgg_operacion_regla_validacion (corv_codigo, crval_codigo, copvl_codigo, corv_campo_evaluacion, corv_valor_1, corv_estado, corv_fecha_insert, corv_usuario_insert, corv_fecha_update, corv_usuario_update) 
VALUES ('CORV12', 'CRVAL59', 'COPVL1', '[{"IN_FECHA_INGRESO":"tmpFechaIngreso","IN_CRPER_NUM_DOC_IDENTIFIC":"tmpNumeroDocumento"}]', null, true, '2011-03-19 19:42:36.292847', null, '2011-05-17 19:22:06.458445', null);

-- 

-- Function: sii.f_cgg_res_persona_notificado_ingreso2(character varying, character varying, character varying)

-- DROP FUNCTION sii.f_cgg_res_persona_notificado_ingreso2(character varying, character varying, character varying);

CREATE OR REPLACE FUNCTION sii.f_cgg_res_persona_notificado_ingreso2(in_crper_num_doc_identific character varying, inoperador character varying, invalorcomparacion character varying)
  RETURNS character varying AS
$BODY$
DECLARE
VALOR_DIAS INTEGER;
VALOR_FECHA DATE ;
TMP_NUMERO VARCHAR;
TMP_FECHA_EXPULSION DATE;
TMP_NOTIFICADO VARCHAR;
TMP_FECHA_INGRESO DATE;
TMP_RESULTADO VARCHAR;
OUT_KEY VARCHAR;
TMP_FECHA_SALIDA DATE;
TMP_TIPO_USUARIO boolean;
VALOR_FECHA_INGRESO DATE;
TMP_CODIGO VARCHAR;
TMP_GEN_CODIGO VARCHAR;
BEGIN
--EXTRAE EL VALOR DE LA CONFIGURACION DE LOS DIAS
SELECT CGCNF_VALOR_NUMERICO INTO VALOR_DIAS
FROM CGG_CONFIGURACION 
WHERE CGCNF_CODIGO='CONF16';
SELECT CRNOT_FECHA_SALIDA_VOLUNT, 
CRNOT_FECHA_EXPULSION,
PER.CRPER_CODIGO, 
(CASE 
WHEN CRNOT_FECHA_EXPULSION IS NOT NULL THEN
CRNOT_FECHA_EXPULSION
ELSE
CURRENT_DATE
END) INTO TMP_FECHA_SALIDA,
TMP_FECHA_EXPULSION,
TMP_CODIGO,VALOR_FECHA
FROM SII.CGG_RES_NOTIFICACION NTF 
INNER JOIN SII.CGG_RES_PERSONA PER ON PER.CRPER_CODIGO = NTF.CRPER_CODIGO
WHERE (NTF.CRNOT_ESTADO_NOTIFICACION=3 OR NTF.CRNOT_ESTADO_NOTIFICACION=1) AND
NTF.CRNOT_REGULARIZACION = '0' AND
CRNOT_ESTADO AND
PER.CRPER_NUM_DOC_IDENTIFIC=IN_CRPER_NUM_DOC_IDENTIFIC
ORDER BY CRNOT_FECHA_NOTIFICACION DESC;
--GROUP BY NTF.CRTNT_CODIGO,NTF.CRNOT_FECHA_SALIDA_VOLUNT,NTF.CRNOT_FECHA_EXPULSION,PER.CRPER_CODIGO ;
VALOR_FECHA_INGRESO = VALOR_FECHA + VALOR_DIAS;
SELECT SII.F_CGG_REGLA_VALIDACION(COALESCE(VALOR_FECHA_INGRESO,CURRENT_DATE-1)::VARCHAR,INOPERADOR,CURRENT_DATE::VARCHAR) INTO TMP_NOTIFICADO;
SELECT CUSU_USUARIO_INTERNO INTO TMP_TIPO_USUARIO FROM SII.CGG_USUARIO U WHERE U.CUSU_ESTADO = TRUE;
IF(TMP_TIPO_USUARIO=true)THEN
IF(TMP_NOTIFICADO='false')THEN
SELECT SII.F_CGG_TCT_INGRESO_FALLIDO_INSERT(
'KEYGEN'::VARCHAR,
TMP_CODIGO,
NULL,
CURRENT_TIMESTAMP,
0::SMALLINT,
'Notificado'::VARCHAR,
TRUE,
NULL,
NULL
) INTO TMP_GEN_CODIGO;
END IF;
END IF;
RETURN TMP_NOTIFICADO;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION sii.f_cgg_res_persona_notificado_ingreso2(character varying, character varying, character varying)
  OWNER TO postgres;


-- Ingreso de la regla anterior a la lista de reglas_validación
INSERT INTO sii.cgg_regla_validacion (crval_codigo, cgcnf_codigo, crval_nombre, crval_descripcion, crval_funcion_validacion, crval_operador_comparador, crval_valor_libre, crval_resultado_aceptacion, crval_sugerencia, crval_tipo, crvar_fecha_inicio, crvar_fecha_fin, crval_valor_1, crval_valor_2, crval_estado, crval_fecha_insert, crval_usuario_insert, crval_fecha_update, crval_usuario_update) 
VALUES ('CRVAL60', null, 'Persona notificada', 'Verifica que la persona no esta notificada.', 'F_CGG_RES_PERSONA_NOTIFICADO_INGRESO2', '<=', '', 'TRUE', 'La persona esta Notificada no puede ingresar a la Provincia', 1, '2011-03-18 01:00:00.000000', '2011-03-18 01:00:00.000000', null, null, true, '2011-03-18 14:23:10.730641', 'admin', '2011-03-18 14:23:10.730641', 'admin');

--
INSERT INTO sii.cgg_operacion_regla_validacion (corv_codigo, crval_codigo, copvl_codigo, corv_campo_evaluacion, corv_valor_1, corv_estado, corv_fecha_insert, corv_usuario_insert, corv_fecha_update, corv_usuario_update) 
VALUES ('CORV13', 'CRVAL60', 'COPVL1', '[{"IN_CRPER_NUM_DOC_IDENTIFIC":"tmpNumeroDocumento"}]', null, true, '2011-03-29 17:50:48.283439', null, '2011-05-17 19:22:06.458445', null);

-- INCREMENTO DE CAMPOS A LA TABLA Y POR ENDE A LA FUNCION CORRESPONDIENTE QUE HACE LA CONSULTA A LA MISMA. (TCT_REGISTRO)

-- Function: sii.f_cgg_tct_registro_select(character varying, integer, integer, character varying, character varying, text)

-- DROP FUNCTION sii.f_cgg_tct_registro_select(character varying, integer, integer, character varying, character varying, text);

CREATE OR REPLACE FUNCTION sii.f_cgg_tct_registro_select(in_user_name character varying, in_start_index integer, in_limit integer, in_sort_field_name character varying, in_direction character varying, in_find_text text)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
	TMP_TIPO_USUARIO BOOLEAN;
	TMP_DATOS CHARACTER VARYING;
	TMP_TIME_ZONE VARCHAR;
	TMP_QUERY VARCHAR;
BEGIN	
	SELECT CSSSN_ZONA_TIEMPO INTO TMP_TIME_ZONE
	FROM SII.CGG_SEC_SESION 
	WHERE CUSU_CODIGO = (SELECT CUSU_CODIGO FROM SII.CGG_USUARIO WHERE CUSU_NOMBRE_USUARIO = IN_USER_NAME AND CUSU_ESTADO) AND
		CSSSN_ACTIVO
	ORDER BY CSSSN_FECHA_INICIO DESC LIMIT 1;
	
	IF (TMP_TIME_ZONE IS NULL OR LENGTH(TMP_TIME_ZONE) = 0) THEN
		SELECT ABS(EXTRACT(TIMEZONE FROM CURRENT_TIMESTAMP)/3600) INTO TMP_TIME_ZONE;
	END IF;
	
	IF (LENGTH(IN_FIND_TEXT) > 0) THEN
		TMP_QUERY = ' to_tsvector(
		COALESCE(GTR.CTGTR_NUMERO::VARCHAR,'''')||'' ''||
		COALESCE(PJR.CRPJR_RAZON_SOCIAL,'''')||'' ''||
		COALESCE(CRPER_NUM_DOC_IDENTIFIC,'''')||'' ''||
		COALESCE(CRPER.CRPER_NOMBRES,'''')||'' ''||
		COALESCE(CRPER.CRPER_APELLIDO_PATERNO, '''')||'' ''||
		COALESCE(CRPER.CRPER_APELLIDO_MATERNO, '''')) @@ plainto_tsquery('||QUOTE_LITERAL(IN_FIND_TEXT)||') AND';
	END IF;
	IF (TMP_QUERY IS NULL) THEN
		TMP_QUERY = '';
	END IF;
	SELECT CUSU_USUARIO_INTERNO INTO TMP_TIPO_USUARIO
	FROM SII.CGG_USUARIO
	WHERE CUSU_NOMBRE_USUARIO = IN_USER_NAME;
	TMP_DATOS:='SELECT 
		RS.CTREG_CODIGO, 		
		RS.CARPT_CODIGO, 
		ARO.CARPT_NOMBRE AEROPUER_ORIGEN,
		RS.CGG_CARPT_CODIGO, 
		ARD.CARPT_NOMBRE AEROPUER_DESTINO,
		RS.CRALN_CODIGO, 
		AL.CRALN_NOMBRE AEROLINEA,
		RS.CTREG_NUMERO_VUELO,
		RS.CTGTR_CODIGO,
		RS.CRTRA_CODIGO, 
		(SELECT CRTRA_NUMERO FROM SII.CGG_RES_TRAMITE TA WHERE TA.CRTRA_CODIGO = RSD.CRTRA_CODIGO) NUMERO,
		RS.CTREG_NUMERO, 
		GTR.CTGTR_NUMERO,
		RS.CTREG_FECHA_PREREGISTRO, 
		RS.CTREG_FECHA_INGRESO, 
		RS.CTREG_CODIGO_BARRAS, 
		RS.CTREG_FECHA_SALIDA, 
		CASE WHEN CTREG_ESTADO_REGISTRO != 1 THEN NULL ELSE RS.CTREG_IMPRESION_ESPECIE AT TIME ZONE '||QUOTE_LITERAL('UTC+'||TMP_TIME_ZONE)||' END CTREG_IMPRESION_ESPECIE, 
		RS.CTREG_ESTADO_REGISTRO, 
		RS.CTREG_OBSERVACION, 
		RS.CTREG_ESTADO, 
		(PJR.CRPJR_RAZON_SOCIAL||'' - ''||US.CUSU_NOMBRE_USUARIO) CTAGV_NOMBRE,
		CRPER.CRPER_NUM_DOC_IDENTIFIC,
		COALESCE(CRPER.CRPER_NOMBRES,'''')||'' ''||COALESCE(CRPER.CRPER_APELLIDO_PATERNO,'''') AS CRPER_NOMBRES,
		CRPER.CRPER_FECHA_NACIMIENTO,
		(SELECT CPAIS_NOMBRE FROM SII.CGG_PAIS PAIS WHERE PAIS.CPAIS_CODIGO = CRPER.CGNCN_CODIGO) CGNCN_CODIGO,
		(SELECT CPAIS_NOMBRE FROM SII.CGG_PAIS PAIS WHERE PAIS.CPAIS_CODIGO = CRPER.CGG_CPAIS_CODIGO) CGG_CPAIS_CODIGO,
		RS.CTREG_FECHA_INSERT, 
		RS.CTREG_USUARIO_INSERT, 
		RS.CTREG_FECHA_UPDATE, 
		RS.CTREG_USUARIO_UPDATE,
		(SELECT COALESCE(CRPER_NOMBRES,'''')||'' ''||COALESCE(CRPER_APELLIDO_PATERNO,'''') FROM SII.CGG_RES_PERSONA WHERE CRPER_CODIGO = US.CRPER_CODIGO) USUARIO_UPDATE
	FROM SII.CGG_TCT_REGISTRO RS
	INNER JOIN SII.CGG_TCT_GRUPO_TURISTA GTR ON GTR.CTGTR_CODIGO = RS.CTGTR_CODIGO
	INNER JOIN SII.CGG_RES_AEROPUERTO ARO ON ARO.CARPT_CODIGO = RS.CARPT_CODIGO
	INNER JOIN SII.CGG_RES_AEROPUERTO ARD ON ARD.CARPT_CODIGO = RS.CGG_CARPT_CODIGO
	INNER JOIN SII.CGG_RES_AEROLINEA AL ON AL.CRALN_CODIGO = RS.CRALN_CODIGO
	INNER JOIN SII.CGG_RES_PERSONA CRPER ON (RS.CRPER_CODIGO = CRPER.CRPER_CODIGO)	
	LEFT JOIN SII.CGG_RES_RESIDENCIA RSD ON RSD.CRPER_CODIGO = CRPER.CRPER_CODIGO AND RSD.CRRSD_ESTADO AND RSD.CRRSD_VIGENTE AND RSD.CRRSD_FECHA_INICIO::DATE = RS.CTREG_FECHA_INGRESO::DATE AND 
			RSD.CRTST_CODIGO IN (WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
			SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
			FROM CGG_CONFIGURACION
			WHERE CGCNF_CODIGO = ''05'') 
			UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
			WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
		) SELECT CRTST_CODIGO  FROM TIPO)
	LEFT JOIN SII.CGG_USUARIO US ON US.CUSU_CODIGO = RS.CUSU_CODIGO
	LEFT JOIN SII.CGG_RES_PERSONA_JURIDICA PJR ON PJR.CRPJR_CODIGO = US.CRPJR_CODIGO
	WHERE CTREG_ESTADO AND RS.CTREG_ESTADO_REGISTRO IN (0,1) AND '
		||TMP_QUERY||'
		NOT RS.CTREG_COMPLETO AND 
		('||TMP_TIPO_USUARIO||' OR US.CUSU_CODIGO IN (SELECT CUSU_CODIGO FROM SII.CGG_USUARIO WHERE CRPJR_CODIGO IN (SELECT CRPJR_CODIGO FROM SII.CGG_USUARIO WHERE CUSU_NOMBRE_USUARIO = '||QUOTE_LITERAL(IN_USER_NAME)||')))
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX ;
	
	OPEN TMP_REF FOR EXECUTE TMP_DATOS;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;
ALTER FUNCTION sii.f_cgg_tct_registro_select(character varying, integer, integer, character varying, character varying, text)
  OWNER TO postgres;

-- INCREMENTO DE CONSULTA DEL CAMPO SEGUIMIENTO PARA RES_PERSONA

-- Function: sii.f_cgg_tct_registro_persona(character varying, character varying)

-- DROP FUNCTION sii.f_cgg_tct_registro_persona(character varying, character varying);

CREATE OR REPLACE FUNCTION sii.f_cgg_tct_registro_persona(in_ctgtr_codigo character varying, in_ctreg_estado_registro character varying)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
			SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
			FROM CGG_CONFIGURACION
			WHERE CGCNF_CODIGO = '05') 
			UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
			WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
		),
	RESIDENCIA AS(
		SELECT RG.CRPER_CODIGO,RS.CRTRA_CODIGO,RS.CRTST_CODIGO FROM  SII.CGG_TCT_REGISTRO RG
		LEFT JOIN SII.CGG_RES_RESIDENCIA RS ON (RS.CRPER_CODIGO = RG.CRPER_CODIGO AND RS.CRRSD_VIGENTE AND RS.CRRSD_FECHA_INICIO::DATE = RG.CTREG_FECHA_INGRESO::DATE)			
		AND RS.CRTST_CODIGO IN (SELECT CRTST_CODIGO  FROM TIPO)
		WHERE CTGTR_CODIGO = IN_CTGTR_CODIGO)
	SELECT DISTINCT
		RG.CTREG_CODIGO,
		GT.CTGTR_CODIGO,
		LPAD(GT.CTGTR_NUMERO::VARCHAR,7,'0'::VARCHAR) CTGTR_NUMERO,
		PR.CRPER_CODIGO,
		PR.CRDID_CODIGO,
		PR.CRPER_NUM_DOC_IDENTIFIC,
		PR.CRPER_NOMBRES,
		PR.CRPER_APELLIDO_PATERNO,
		PR.CRPER_GENERO,
		PR.CGNCN_CODIGO,
		PR.CRPER_FECHA_NACIMIENTO,
		PR.CGG_CPAIS_CODIGO,
		VDT.CKESP_CODIGO,
		CKESP_REPORTE,
		RG.CTREG_ESTADO_REGISTRO,
		RG.CTREG_OBSERVACION,
		TR.CRTRA_CODIGO,
		TR.CRTRA_NUMERO,
		PR.CRPER_SEGUIMIENTO,
		(CASE WHEN RS.CRTST_CODIGO IS NULL THEN 'Turista' ELSE 'Transeunte' END)TIPO_RESIDENCIA,
		RG.CTREG_FECHA_INSERT
	FROM  SII.CGG_TCT_REGISTRO RG  
	INNER JOIN SII.CGG_RES_PERSONA PR ON PR.CRPER_CODIGO = RG.CRPER_CODIGO 
	INNER JOIN SII.CGG_TCT_GRUPO_TURISTA GT ON (GT.CTGTR_CODIGO = RG.CTGTR_CODIGO)
	INNER JOIN SII.CGG_KDX_VENTA_DETALLE VDT ON (VDT.CTREG_CODIGO = RG.CTREG_CODIGO)
	INNER JOIN SII.CGG_KDX_ESPECIE CKESP ON (CKESP.CKESP_CODIGO = VDT.CKESP_CODIGO)
	INNER JOIN RESIDENCIA RS ON (RS.CRPER_CODIGO = RG.CRPER_CODIGO)
	LEFT JOIN SII.CGG_RES_TRAMITE TR ON (TR.CRTRA_CODIGO=RS.CRTRA_CODIGO)
	WHERE RG.CTREG_ESTADO AND 
		GT.CTGTR_CODIGO = IN_CTGTR_CODIGO AND 
		CTREG_ESTADO_REGISTRO = ANY(STRING_TO_ARRAY(IN_CTREG_ESTADO_REGISTRO,',')::smallint[])
		AND NOT RG.CTREG_COMPLETO
	ORDER BY RG.CTREG_FECHA_INSERT;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;
ALTER FUNCTION sii.f_cgg_tct_registro_persona(character varying, character varying)
  OWNER TO postgres;

-- INCREMENTO DE COLUMNA SEGUIMIENTO EN TABLA DE PERSONA

ALTER TABLE sii.cgg_res_persona ADD COLUMN crper_seguimiento BOOLEAN DEFAULT false

-- FUNCIÓN QUE ELIMINA LOS REGISTROS TCT CADUCADOS A LA FECHA ACTUAL
-- Function: sii.f_cgg_eliminar_tct_caducado()-- DROP FUNCTION sii.f_cgg_eliminar_tct_caducado();CREATE OR REPLACE FUNCTION sii.f_cgg_eliminar_tct_caducado()
 RETURNS void AS
$BODY$
BEGIN
    DELETE SII.CGG_TCT_REGISTRO TR
    WHERE TR.CTREG_FECHA_INGRESO < CURRENT_DATE AND TR.CTREG_ESTADO_REGISTRO=0 AND ctreg_impresion_especie is null
$BODY$
 LANGUAGE plpgsql VOLATILE
 COST 100;
ALTER FUNCTION sii.f_actualizar_numero_residencia(character varying, character varying, character varying)
 OWNER TO postgres;

-- MODIFICACIÓN DE REGLA QUE CONSULTA LOS DATOS DE UNA PERSONA Y SU MOVILIDAD, AÑADIENDO LA CONSULTA DEL CAMPO SEGUIMIENTO
-- Function: sii.f_cgg_movilidad_ingreso_pag_select(character varying, integer, integer, character varying, character varying, text, character varying, integer)

-- DROP FUNCTION sii.f_cgg_movilidad_ingreso_pag_select(character varying, integer, integer, character varying, character varying, text, character varying, integer);

CREATE OR REPLACE FUNCTION sii.f_cgg_movilidad_ingreso_pag_select(in_user_name character varying, in_start_index integer, in_limit integer, in_sort_field_name character varying, in_direction character varying, in_find_text text, in_identificacion character varying, in_movimiento integer)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
	TMP_RSD VARCHAR;
BEGIN
	TMP_RSD = 'AND RS.CRRSD_VIGENTE';
	
	IF (IN_MOVIMIENTO != -1) THEN
		TMP_RSD = 'AND RS.CRRSD_CODIGO = MV.CRRSD_CODIGO ';
	END IF;
	
	OPEN TMP_REF FOR EXECUTE
	'WITH TCT_REG AS (SELECT
		MV.CRMOV_CODIGO,
		RG.CTREG_CODIGO, 		
		RG.CTGTR_CODIGO	,	
		PR.CRPER_CODIGO,		
		PR.CRDID_CODIGO,
		RG.CTREG_CODIGO_BARRAS,
		RG.CRALN_CODIGO, 
		(SELECT CRALN_NOMBRE FROM  CGG_RES_AEROLINEA AL WHERE AL.CRALN_CODIGO = RG.CRALN_CODIGO) AEROLINEA,		
		RG.CARPT_CODIGO, 
		(SELECT CARPT_NOMBRE FROM  CGG_RES_AEROPUERTO AR WHERE AR.CARPT_CODIGO = RG.CARPT_CODIGO) AEROPUER_ORIGEN,
		RG.CGG_CARPT_CODIGO, 
		CASE WHEN MV.CRMOV_TIPO_OPERACION = 0 THEN ARPS.CARPT_NOMBRE ELSE (SELECT CARPT_NOMBRE FROM SII.CGG_RES_AEROPUERTO AR WHERE AR.CARPT_CODIGO = RG.CGG_CARPT_CODIGO) END AEROPUER_DESTINO,
		RG.CTREG_FECHA_INGRESO, 		
		RG.CTREG_FECHA_SALIDA, 				
		(SELECT CRDID_DESCRIPCION FROM SII.CGG_RES_DOCUMENTO_IDENTIFICACIO DI WHERE DI.CRDID_CODIGO = PR.CRDID_CODIGO) DOCUMENTO,
		PR.CRPER_NUM_DOC_IDENTIFIC,
		PR.CRPER_NOMBRES,
		PR.CRPER_APELLIDO_PATERNO,
		PR.CRPER_APELLIDO_MATERNO,
		PR.CRPER_GENERO,
		PR.CRPER_FECHA_NACIMIENTO,
		PR.CPAIS_CODIGO,
		PR.CGG_CPAIS_CODIGO,
		PR.CRPER_SEGUIMIENTO,
		(SELECT CPAIS_NOMBRE FROM SII.CGG_PAIS PS WHERE PS.CPAIS_CODIGO = PR.CGG_CPAIS_CODIGO) PAIS_RESIDENCIA,
		PR.CGNCN_CODIGO,
		(SELECT CGNCN_NACIONALIDAD FROM SII.CGG_NACIONALIDAD NC WHERE NC.CGNCN_CODIGO = PR.CGNCN_CODIGO) NACIONALIDAD,
		TRM.CRTRA_CODIGO,
		TRM.CRTRA_NUMERO,
		RS.CRRSD_CODIGO,
		COALESCE(TST.CRTST_DESCRIPCION,''Turista'') TIPO_RESIDENCIA,	
		RG.CTREG_ESTADO_REGISTRO,
		RG.CTREG_OBSERVACION,
		MV.CRMOV_FECHA_VIAJE
	FROM SII.CGG_RES_PERSONA PR
	INNER JOIN SII.CGG_TCT_REGISTRO RG ON RG.CRPER_CODIGO = PR.CRPER_CODIGO AND RG.CTREG_ESTADO_REGISTRO IN (1,4) AND NOT RG.CTREG_COMPLETO 
	LEFT JOIN SII.CGG_RES_MOVILIDAD MV ON MV.CTREG_CODIGO = RG.CTREG_CODIGO
	LEFT JOIN SII.CGG_RES_RESIDENCIA RS ON RS.CRPER_CODIGO = PR.CRPER_CODIGO AND RS.CRRSD_ESTADO '||TMP_RSD||' AND
		(RS.CRTST_CODIGO IN (WITH RECURSIVE TIPO(CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION)AS(
			SELECT CRTST_CODIGO, CGG_CRTST_CODIGO, CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE WHERE CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
			FROM CGG_CONFIGURACION
			WHERE CGCNF_CODIGO = ''05'') OR CRTST_CODIGO = (SELECT CGCNF_VALOR_CADENA
			FROM CGG_CONFIGURACION
			WHERE CGCNF_CODIGO = ''06'')
			UNION SELECT TST.CRTST_CODIGO, TST.CGG_CRTST_CODIGO, TP.CRTST_DESCRIPCION FROM CGG_RES_TIPO_SOLICITUD_TRAMITE TST, TIPO TP
			WHERE TST.CGG_CRTST_CODIGO = TP.CRTST_CODIGO
		) SELECT CRTST_CODIGO  FROM TIPO)) AND
		('||IN_MOVIMIENTO||' != -1 OR RS.CRRSD_FECHA_INICIO::DATE = CURRENT_DATE)
	LEFT JOIN SII.CGG_RES_TIPO_SOLICITUD_TRAMITE TST ON TST.CRTST_CODIGO = RS.CRTST_CODIGO
	LEFT JOIN SII.CGG_RES_AEROPUERTO ARPI ON ARPI.CARPT_CODIGO = MV.CARPT_CODIGO
	LEFT JOIN SII.CGG_RES_AEROPUERTO ARPS ON ARPS.CARPT_CODIGO = MV.CGG_CARPT_CODIGO
	LEFT JOIN SII.CGG_RES_TRAMITE TRM ON TRM.CRTRA_CODIGO = RS.CRTRA_CODIGO
	WHERE CTREG_ESTADO AND (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('''||IN_FIND_TEXT||''',
		COALESCE(RG.CTREG_CODIGO_BARRAS,'''')||'' ''||
		COALESCE(RG.CTREG_FECHA_INGRESO,CURRENT_TIMESTAMP)||'' ''||
		COALESCE(RG.CTREG_FECHA_SALIDA,CURRENT_TIMESTAMP)||'' ''||	
		COALESCE(PR.CRPER_NUM_DOC_IDENTIFIC,'''')||'' ''||
		COALESCE(PR.CRPER_NOMBRES,'''')||'' ''||
		COALESCE(PR.CRPER_APELLIDO_PATERNO,'''')||'' ''||
		COALESCE(PR.CRPER_APELLIDO_PATERNO,'''')) = 1 ) AND 
	(LENGTH('||QUOTE_LITERAL(IN_IDENTIFICACION)||') = 0 OR RG.CTREG_CODIGO_BARRAS = '||QUOTE_LITERAL(IN_IDENTIFICACION)||' OR PR.CRPER_NUM_DOC_IDENTIFIC = '||QUOTE_LITERAL(IN_IDENTIFICACION)||'))
	SELECT * FROM TCT_REG WHERE ('||IN_MOVIMIENTO||' = 0 AND CRMOV_CODIGO IS NOT NULL OR '||IN_MOVIMIENTO||' = -1 AND CRMOV_CODIGO IS NULL)
	 LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;
	--ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;
ALTER FUNCTION sii.f_cgg_movilidad_ingreso_pag_select(character varying, integer, integer, character varying, character varying, text, character varying, integer)
  OWNER TO postgres;


--

INSERT INTO sii.cgg_tct_tipo_registro (tcttr_codigo, tcttr_nombre, tcttr_estado) VALUES ('1', 'Individual', true);
INSERT INTO sii.cgg_tct_tipo_registro (tcttr_codigo, tcttr_nombre, tcttr_estado) VALUES ('2', 'Grupal', true);

INSERT INTO sii.cgg_tct_categoria (tctcat_codigo, tctcat_nombre, tctcat_estado) VALUES ('1', 'Turista', true);
INSERT INTO sii.cgg_tct_categoria (tctcat_codigo, tctcat_nombre, tctcat_estado) VALUES ('2', 'Transeunte', true);



