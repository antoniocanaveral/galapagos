--PERMITIR RESOLUCIONES SIN COMITE
CREATE OR REPLACE FUNCTION f_cgg_genera_num_resolucion(in_cisla_codigo character varying, in_crssc_codigo character varying)
  RETURNS character varying AS
$BODY$
DECLARE
TMP_SECUENCIA INT;
TMP_ANIO INT;
TMP_ACRONIMO CHARACTER VARYING;
TMP_ABBR VARCHAR;
TMP_TPT_ABBR VARCHAR;
TMP_TPT_ABBR_CODIGO VARCHAR;
TMP_CRSSC_CODIGO VARCHAR;
TMP_COUNT INT;
BEGIN
TMP_SECUENCIA := 0;
SELECT EXTRACT(YEAR FROM CURRENT_TIMESTAMP) INTO TMP_ANIO;
TMP_CRSSC_CODIGO = IN_CRSSC_CODIGO;

SELECT COUNT(*) INTO TMP_COUNT FROM SII.CGG_RES_TRAMITE TRM WHERE TRM.CRTRA_CODIGO = IN_CRSSC_CODIGO;
IF (TMP_COUNT > 0) THEN
SELECT RSL.CRSSC_CODIGO INTO TMP_CRSSC_CODIGO
FROM SII.CGG_RES_TRAMITE TRM
INNER JOIN SII.CGG_RES_RESOL_TRAMITE RST ON RST.CRTRA_CODIGO = TRM.CRTRA_CODIGO AND RST.CRRST_ESTADO
INNER JOIN SII.CGG_RES_RESOLUCION RSL ON RSL.CRRES_CODIGO = RST.CRRES_CODIGO AND RSL.CRRES_ESTADO
WHERE TRM.CRTRA_CODIGO = IN_CRSSC_CODIGO;
END IF;

SELECT CISLA_ABREVIATURA INTO TMP_ABBR FROM SII.CGG_ISLA WHERE CISLA_CODIGO = IN_CISLA_CODIGO;
TMP_TPT_ABBR := 'RSLMISC';

IF (TMP_CRSSC_CODIGO IS NOT NULL AND LENGTH(TMP_CRSSC_CODIGO) > 0) THEN
SELECT CM.CRCOM_ABREVIATURA,CM.CRCOM_ABREVIATURA||EXTRACT(YEAR FROM CURRENT_TIMESTAMP) INTO TMP_TPT_ABBR,TMP_TPT_ABBR_CODIGO
FROM SII.CGG_RES_SESION_COMITE SC
INNER JOIN SII.CGG_RES_COMITE CM ON CM.CRCOM_CODIGO = SC.CRCOM_CODIGO
WHERE SC.CRSSC_CODIGO = TMP_CRSSC_CODIGO;
ELSE
	SELECT 'AUTO','RE' INTO TMP_TPT_ABBR,TMP_TPT_ABBR_CODIGO;
END IF;
SELECT CGSCN_SECUENCIA INTO TMP_SECUENCIA FROM SII.CGG_SECUENCIA WHERE CGSCN_CODIGO = TMP_TPT_ABBR_CODIGO AND CGSCN_ANIO = TMP_ANIO;

IF (TMP_SECUENCIA IS NULL OR TMP_SECUENCIA = 0) THEN
TMP_SECUENCIA := 1;
INSERT INTO SII.CGG_SECUENCIA (CGSCN_CODIGO, CGSCN_SECUENCIA, CGSCN_ANIO) VALUES(TMP_TPT_ABBR_CODIGO, TMP_SECUENCIA, EXTRACT(YEAR FROM CURRENT_TIMESTAMP));
END IF;

UPDATE SII.CGG_SECUENCIA SET CGSCN_SECUENCIA = TMP_SECUENCIA + 1,
CGSCN_ANIO = TMP_ANIO
WHERE CGSCN_CODIGO = TMP_TPT_ABBR_CODIGO;

SELECT CGCNF_VALOR_CADENA INTO TMP_ACRONIMO
FROM SII.CGG_CONFIGURACION WHERE CGCNF_CODIGO = 'CONF8';

RETURN  TMP_ACRONIMO||'-'||TMP_ABBR||'-'||TMP_TPT_ABBR||'-'||TMP_ANIO||'-'||LPAD(TMP_SECUENCIA::VARCHAR,4,'0'::VARCHAR);
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;

--CAMBIAR LAS RESOLUCIONES A LAS DE JAVA
update sii.cgg_res_fase set CRFAS_FUNCION_EJECUTA='com.bmlaurus.phaserule.GenerarResolucion' where CRFAS_FUNCION_EJECUTA='F_GENERAR_RESIDENCIA';




 --> MIGRATION SCRIPT CONTROLLER <--
INSERT INTO sii.cgg_migrationscript (mrgsp_codigo,mrgsp_fecha,mrgsp_usuario_insert,mrgsp_fecha_insert,mrgsp_usuario_update,mrgsp_fecha_update,
	mrgsp_estado,mrgsp_developer,mrgsp_name,mrgsp_description,
	mrgsp_releaseno,mrgsp_filename,mrgsp_isapply)
VALUES(SII.F_KEYGEN('CGG_MIGRATIONSCRIPT','MRGSP_CODIGO','MRGSP'), current_timestamp,'ADMIN', current_timestamp,'ADMIN', current_timestamp,
	true,'acanaveral','RESOLUCIONES EN JAVA','Cambia las llamadas a F_GENERAR_RESIDENCIA, para que llame a la función Java, que además genera las resoluciones',
	'2.0','2016_18_07_UpdateResolucion.sql',true);