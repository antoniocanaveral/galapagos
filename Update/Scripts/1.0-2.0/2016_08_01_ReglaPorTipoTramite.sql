ALTER TABLE SII.cgg_res_tipo_solicitud_regla ADD COLUMN crtt_codigo character varying(20);
COMMENT ON COLUMN sii.cgg_res_tipo_solicitud_regla.crtt_codigo IS 'FILTRO DE REGLAS POR TIPO DE TRAMITE';

ALTER TABLE SII.cgg_res_tramite ADD COLUMN crtt_codigo character varying(20);
COMMENT ON COLUMN sii.cgg_res_tramite.crtt_codigo IS 'FILTRO DE REGLAS POR TIPO DE TRAMITE';

-->ACTUALIZAMOS LAS EXISTENTES
UPDATE sii.cgg_res_tipo_solicitud_regla set crtt_codigo='CRTT1';

-->EL SELECT PARA TRAERSE LOS DATOS

DROP FUNCTION sii.f_cgg_regla_validacion_select_tipo_solicitud(character varying);

CREATE OR REPLACE FUNCTION sii.f_cgg_regla_validacion_select_tipo_solicitud(in_crtst_codigo character varying,in_crtt_codigo character varying)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRVAL.CRVAL_CODIGO,
		CRVAL.CGCNF_CODIGO,
		CRVAL.CRVAL_NOMBRE,
		CRVAL.CRVAL_DESCRIPCION,
		CRVAL.CRVAL_FUNCION_VALIDACION,
		CRVAL.CRVAL_OPERADOR_COMPARADOR,
		CRVAL.CRVAL_VALOR_LIBRE,
		CRVAL.CRVAL_RESULTADO_ACEPTACION,
		CRVAL.CRVAL_SUGERENCIA,
		CRVAL.CRVAL_TIPO,
		CRVAL.CRVAR_FECHA_INICIO,
		CRVAL.CRVAR_FECHA_FIN,
		CRVAL.CRVAL_VALOR_1,
		CRVAL.CRVAL_VALOR_2,
		CRVAL.CRVAL_ESTADO,
		CRVAL.CRVAL_FECHA_INSERT,
		CRVAL.CRVAL_USUARIO_INSERT,
		CRVAL.CRVAL_FECHA_UPDATE,
		CRVAL.CRVAL_USUARIO_UPDATE,
		CRTSE.CRTSE_CAMPO_EVALUACION
	 FROM CGG_REGLA_VALIDACION CRVAL
	 LEFT JOIN CGG_RES_TIPO_SOLICITUD_REGLA CRTSE ON CRVAL.CRVAL_CODIGO = CRTSE.CRVAL_CODIGO AND CRTSE.CRTSE_ESTADO
	WHERE CRVAL_ESTADO AND
		CRTSE.CRTST_CODIGO = IN_CRTST_CODIGO AND
		(CRTSE.CRTT_CODIGO IS NULL OR CRTSE.CRTT_CODIGO=IN_CRTT_CODIGO);
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;


CREATE OR REPLACE FUNCTION sii.f_cgg_res_tramite_select1(in_user_name character varying, in_start_index integer, in_limit integer, in_sort_field_name character varying, in_direction character varying, in_find_text text)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
	TMP_USUARIO_CURSOR REFCURSOR;
	SQL_STMT TEXT;
	SQL_USUARIOS TEXT;
	CUSUCODIGO VARCHAR(20);
	TMP_ROW RECORD;
BEGIN

	SQL_USUARIOS:=' ';
	SQL_STMT:=' ';

	SELECT CUSU_CODIGO INTO CUSUCODIGO FROM SII.CGG_USUARIO WHERE CUSU_NOMBRE_USUARIO = IN_USER_NAME;
	TMP_USUARIO_CURSOR := SII.F_CGG_USUARIO_ACCESO_INFORMACION(CUSUCODIGO);

	LOOP
		FETCH TMP_USUARIO_CURSOR INTO TMP_ROW;
		EXIT WHEN NOT FOUND;
		SQL_USUARIOS := SQL_USUARIOS||'T.CRTRA_USUARIO_INSERT = '||QUOTE_LITERAL(TMP_ROW.CUSU_NOMBRE_USUARIO)||' OR ';
	END LOOP;
	CLOSE TMP_USUARIO_CURSOR;

	SQL_USUARIOS := SUBSTRING(SQL_USUARIOS FROM 1 FOR LENGTH(SQL_USUARIOS)-3);

	SQL_STMT := 'SELECT
		CRTRA_CODIGO,
		CRPER_CODIGO,
		CRPER_TAUSPICIANTE,
		CRPJR_CODIGO,
		CRPJR_NOMBRES,
		CGG_CRPER_CODIGO,
		CRPER_TBENEFICIARIO,
		CRPRO_CODIGO,
		CRTST_CODIGO,
		CRTST_DESCRIPCION,
		CVVEH_CODIGO,
		CRETT_CODIGO,
		CRETT_NOMBRE,
		CISLA_CODIGO,
		CVMTR_CODIGO,
		CGG_CVMTR_CODIGO,
		CGG_CVVEH_CODIGO,
		CRTRA_ANIO,
		CRTRA_NUMERO,
		CRTRA_FECHA_RECEPCION,
		CRTRA_ACTIVIDAD_RESIDENCIA,
		ACTIVIDAD_RESIDENCIA,
		CGCRG_NOMBRE,
		CRTRA_OBSERVACION,
		CRTRA_DIAS_PERMANENCIA,
		CRTRA_PENDIENTE,
		CRTRA_OBSERVACION_PENDIENTE,
		CRTRA_ATENCION_CLIENTE,
		CRTRA_COMUNICADO_RADIAL,
		CRTRA_FECHA_INGRESO,
		CRTRA_FECHA_SALIDA,
		CRTRA_MOTIVO,
		CRTRA_FOLIO,
		CRTRA_ESTADO,
		CRTRA_FECHA_INSERT,
		CRTRA_USUARIO_INSERT,
		CRTRA_FECHA_UPDATE,
		CRTRA_USUARIO_UPDATE,
		CRTRA_GRUPO,
		CRTRA_ORDEN,
		REP_CRPER_CODIGO,
		CHANGE_CRTST_CODIGO,
		CRTT_CODIGO
	FROM (
	    SELECT
	   	T.CRTRA_CODIGO,
		T.CRPER_CODIGO,
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CRPER_CODIGO) AS CRPER_TAUSPICIANTE,
		T.CRPJR_CODIGO,
		SII.F_CGG_RES_PERSONA_JURIDICA_SELECT_NOMBRES(T.CRPJR_CODIGO) AS CRPJR_NOMBRES,
		T.CGG_CRPER_CODIGO,
		SII.F_CGG_RES_PERSONA_SELECT_NOMBRES(T.CGG_CRPER_CODIGO) AS CRPER_TBENEFICIARIO,
		T.CRPRO_CODIGO,
		T.CRTST_CODIGO,
		F_CGG_RES_TIPO_SOLICITUD_TRAMITE_SELECT_DESCRIPCION(T.CRTST_CODIGO) AS CRTST_DESCRIPCION,
		T.CVVEH_CODIGO,
		T.CRETT_CODIGO,
		STT.CRETT_NOMBRE,
		T.CISLA_CODIGO,
		T.CVMTR_CODIGO,
		T.CGG_CVMTR_CODIGO,
		T.CGG_CVVEH_CODIGO,
		T.CRTRA_ANIO,
		T.CRTRA_NUMERO,
		T.CRTRA_FECHA_RECEPCION,
		T.CRTRA_ACTIVIDAD_RESIDENCIA,
		GMC.CGCRG_NOMBRE,
		SII.F_NOMBRE_CARGO(T.CRTRA_ACTIVIDAD_RESIDENCIA) AS ACTIVIDAD_RESIDENCIA,
		T.CRTRA_OBSERVACION,
		T.CRTRA_DIAS_PERMANENCIA,
		T.CRTRA_PENDIENTE,
		T.CRTRA_OBSERVACION_PENDIENTE,
		T.CRTRA_ATENCION_CLIENTE,
		T.CRTRA_COMUNICADO_RADIAL,
		T.CRTRA_MOTIVO,
		T.CRTRA_FOLIO,
		T.CRTRA_ESTADO,
		T.CRTRA_FECHA_INGRESO,
		T.CRTRA_FECHA_SALIDA,
		T.CRTRA_FECHA_INSERT,
		T.CRTRA_USUARIO_INSERT,
		T.CRTRA_FECHA_UPDATE,
		T.CRTRA_USUARIO_UPDATE,
		T.CRTRA_GRUPO,
		T.CRTRA_ORDEN,
		T.REP_CRPER_CODIGO,
		T.CHANGE_CRTST_CODIGO,
		T.CRTT_CODIGO
	    FROM SII.CGG_RES_TRAMITE T
		LEFT JOIN SII.CGG_GEM_CARGO GMC ON CGCRG_CODIGO = T.CRTRA_ACTIVIDAD_RESIDENCIA
		LEFT JOIN SII.CGG_RES_ESTADO_TRAMITE STT ON STT.CRETT_CODIGO = T.CRETT_CODIGO
		WHERE T.CRTRA_ESTADO AND
			('||SQL_USUARIOS||')
	) AS TRA
	WHERE (LENGTH('||QUOTE_LITERAL(IN_FIND_TEXT)||') = 0 OR SII.F_STRING_IN('||QUOTE_LITERAL(IN_FIND_TEXT)||',
		COALESCE(CRPER_TAUSPICIANTE,'''')||'' ''||
		COALESCE(CRPJR_NOMBRES,'''')||'' ''||
		COALESCE(CRPER_TBENEFICIARIO,'''')||'' ''||
		COALESCE(CRTST_DESCRIPCION,'''')||'' ''||
		COALESCE(TRA.CRTRA_ANIO,0)||'' ''||
		COALESCE(TRA.CRTRA_NUMERO,0)||'' ''||
		COALESCE(TO_CHAR(TRA.CRTRA_FECHA_RECEPCION,''DD/MM/YY''),'' '')||'' ''||
		COALESCE(TRA.ACTIVIDAD_RESIDENCIA,'''')||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION,'''')||'' ''||
		COALESCE(TRA.CRTRA_DIAS_PERMANENCIA,0)||'' ''||
		COALESCE(TRA.CRTRA_PENDIENTE,0)||'' ''||
		COALESCE(TRA.CRTRA_OBSERVACION_PENDIENTE,'''')||'' ''||
		COALESCE(TRA.CRTRA_ATENCION_CLIENTE,FALSE)||'' ''||
		COALESCE(TRA.CRTRA_COMUNICADO_RADIAL,'''')||'' ''||
		COALESCE(TRA.CRTRA_MOTIVO,'''')||'' ''||
		COALESCE(TRA.CRTRA_FOLIO,0)||'' ''||
		COALESCE(TRA.CRTRA_ESTADO,FALSE)||'' ''||
		COALESCE(TRA.CRTRA_USUARIO_INSERT,'''')) = 1)
	ORDER BY '||IN_SORT_FIELD_NAME||' '||IN_DIRECTION||
	' LIMIT '||IN_LIMIT||' OFFSET '||IN_START_INDEX;

	OPEN TMP_REF FOR EXECUTE SQL_STMT;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;


CREATE OR REPLACE FUNCTION sii.f_cgg_res_tramite_insert_1(in_crtra_codigo character varying, in_crper_codigo character varying, in_crpjr_codigo character varying,
  in_cgg_crper_codigo character varying, in_crpro_codigo character varying, in_crtst_codigo character varying, in_cvveh_codigo character varying, in_crett_codigo character varying,
  in_cisla_codigo character varying, in_cvmtr_codigo character varying, in_cgg_cvmtr_codigo character varying, in_cgg_cvveh_codigo character varying, in_crtra_anio numeric,
  in_crtra_numero numeric, in_crtra_fecha_recepcion timestamp with time zone, in_crtra_actividad_residencia character varying, in_crtra_observacion text,
  in_crtra_dias_permanencia smallint, in_crtra_pendiente smallint, in_crtra_observacion_pendiente text, in_crtra_atencion_cliente boolean, in_crtra_comunicado_radial character varying,
  in_crtra_motivo character varying, in_crtra_folio numeric, in_crtra_fecha_salida timestamp with time zone, in_crtra_estado boolean, in_crtra_usuario_insert character varying,
  in_crtra_usuario_update character varying, in_rep_crper_codigo character varying, inChange_crtst_codigo character varying, inCRTT_CODIGO CHARACTER VARYING)
  RETURNS character varying AS
$BODY$
DECLARE
OUT_KEY VARCHAR;
OUT_NUM NUMERIC;
OUT_RESULT VARCHAR;
BEGIN
	IF (UPPER(IN_CRTRA_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_TRAMITE','CRTRA_CODIGO','CRTRA') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRTRA_CODIGO;
	END IF;

	IF(IN_CRTRA_NUMERO = 0)THEN
		SELECT SII.F_NUMERO('CGG_RES_TRAMITE','CRTRA_NUMERO','CRTRA_ANIO') INTO OUT_NUM;
	ELSE
		OUT_NUM := IN_CRTRA_NUMERO;
	END IF;

	INSERT INTO SII.CGG_RES_TRAMITE(
		CRTRA_CODIGO,
		CRPER_CODIGO,
		CRPJR_CODIGO,
		CGG_CRPER_CODIGO,
		CRPRO_CODIGO,
		CRTST_CODIGO,
		CVVEH_CODIGO,
		CRETT_CODIGO,
		CISLA_CODIGO,
		CVMTR_CODIGO,
		CGG_CVMTR_CODIGO,
		CGG_CVVEH_CODIGO,
		CRTRA_ANIO,
		CRTRA_NUMERO,
		CRTRA_FECHA_RECEPCION,
		CRTRA_ACTIVIDAD_RESIDENCIA,
		CRTRA_OBSERVACION,
		CRTRA_DIAS_PERMANENCIA,
		CRTRA_PENDIENTE,
		CRTRA_OBSERVACION_PENDIENTE,
		CRTRA_ATENCION_CLIENTE,
		CRTRA_COMUNICADO_RADIAL,
		CRTRA_MOTIVO,
		CRTRA_FOLIO,
	    CRTRA_FECHA_SALIDA,
		CRTRA_ESTADO,
		CRTRA_FECHA_INSERT,
		CRTRA_USUARIO_INSERT,
		CRTRA_FECHA_UPDATE,
		CRTRA_USUARIO_UPDATE,
		REP_CRPER_CODIGO,
		CHANGE_CRTST_CODIGO,
		CRTT_CODIGO
	) VALUES (
		OUT_KEY,
		IN_CRPER_CODIGO,
		IN_CRPJR_CODIGO,
		IN_CGG_CRPER_CODIGO,
		IN_CRPRO_CODIGO,
		IN_CRTST_CODIGO,
		IN_CVVEH_CODIGO,
		IN_CRETT_CODIGO,
		IN_CISLA_CODIGO,
		IN_CVMTR_CODIGO,
		IN_CGG_CVMTR_CODIGO,
		IN_CGG_CVVEH_CODIGO,
		IN_CRTRA_ANIO,
		OUT_NUM,
		IN_CRTRA_FECHA_RECEPCION,
		IN_CRTRA_ACTIVIDAD_RESIDENCIA,
		IN_CRTRA_OBSERVACION,
		IN_CRTRA_DIAS_PERMANENCIA,
		IN_CRTRA_PENDIENTE,
		IN_CRTRA_OBSERVACION_PENDIENTE,
		IN_CRTRA_ATENCION_CLIENTE,
		IN_CRTRA_COMUNICADO_RADIAL,
		IN_CRTRA_MOTIVO,
		IN_CRTRA_FOLIO,
		IN_CRTRA_FECHA_SALIDA,
		IN_CRTRA_ESTADO,
		CURRENT_TIMESTAMP,
		IN_CRTRA_USUARIO_INSERT,
		CURRENT_TIMESTAMP,
		IN_CRTRA_USUARIO_UPDATE,
		IN_REP_CRPER_CODIGO,
		INCHANGE_CRTST_CODIGO,
		INCRTT_CODIGO
	);
	OUT_RESULT:=OUT_KEY||','||OUT_NUM;
	RETURN OUT_RESULT;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;

CREATE OR REPLACE FUNCTION sii.f_cgg_res_tramite_update(in_crtra_codigo character varying, in_crper_codigo character varying, in_crpjr_codigo character varying, in_cgg_crper_codigo character varying, in_crpro_codigo character varying,
in_crtst_codigo character varying, in_cvveh_codigo character varying, in_crett_codigo character varying, in_cisla_codigo character varying, in_cvmtr_codigo character varying, in_cgg_cvmtr_codigo character varying,
in_cgg_cvveh_codigo character varying, in_crtra_anio numeric, in_crtra_numero numeric, in_crtra_fecha_recepcion timestamp with time zone, in_crtra_actividad_residencia character varying, in_crtra_observacion text,
in_crtra_dias_permanencia smallint, in_crtra_pendiente smallint, in_crtra_observacion_pendiente text, in_crtra_atencion_cliente boolean, in_crtra_comunicado_radial character varying, in_crtra_motivo character varying,
in_crtra_folio numeric, in_crtra_grupo boolean, in_crtra_orden numeric, in_crtra_fecha_ingreso timestamp with time zone, in_crtra_fecha_salida timestamp with time zone, in_crtra_estado boolean, in_crtra_usuario_update character varying,
in_rep_crper_codigo character varying, inChange_crtst_codigo character varying, inCRTT_CODIGO CHARACTER VARYING)
  RETURNS void AS
$BODY$
BEGIN
	UPDATE SII.CGG_RES_TRAMITE SET
		CRPER_CODIGO = IN_CRPER_CODIGO,
		CRPJR_CODIGO = IN_CRPJR_CODIGO,
		CGG_CRPER_CODIGO = IN_CGG_CRPER_CODIGO,
		CRPRO_CODIGO = IN_CRPRO_CODIGO,
		CRTST_CODIGO = IN_CRTST_CODIGO,
		CVVEH_CODIGO = IN_CVVEH_CODIGO,
		CRETT_CODIGO = IN_CRETT_CODIGO,
		CISLA_CODIGO = IN_CISLA_CODIGO,
		CVMTR_CODIGO = IN_CVMTR_CODIGO,
		CGG_CVMTR_CODIGO = IN_CGG_CVMTR_CODIGO,
		CGG_CVVEH_CODIGO = IN_CGG_CVVEH_CODIGO,
		CRTRA_ANIO = IN_CRTRA_ANIO,
		CRTRA_NUMERO = IN_CRTRA_NUMERO,
		CRTRA_FECHA_RECEPCION = IN_CRTRA_FECHA_RECEPCION,
		CRTRA_ACTIVIDAD_RESIDENCIA = IN_CRTRA_ACTIVIDAD_RESIDENCIA,
		CRTRA_OBSERVACION = IN_CRTRA_OBSERVACION,
		CRTRA_DIAS_PERMANENCIA = IN_CRTRA_DIAS_PERMANENCIA,
		CRTRA_PENDIENTE = IN_CRTRA_PENDIENTE,
		CRTRA_OBSERVACION_PENDIENTE = IN_CRTRA_OBSERVACION_PENDIENTE,
		CRTRA_ATENCION_CLIENTE = IN_CRTRA_ATENCION_CLIENTE,
		CRTRA_COMUNICADO_RADIAL = IN_CRTRA_COMUNICADO_RADIAL,
		CRTRA_MOTIVO = IN_CRTRA_MOTIVO,
		CRTRA_FOLIO = IN_CRTRA_FOLIO,
		CRTRA_GRUPO = IN_CRTRA_GRUPO,
		CRTRA_ORDEN = IN_CRTRA_ORDEN,
		CRTRA_FECHA_INGRESO = IN_CRTRA_FECHA_INGRESO,
		CRTRA_FECHA_SALIDA = IN_CRTRA_FECHA_SALIDA,
		CRTRA_ESTADO = IN_CRTRA_ESTADO,
		CRTRA_FECHA_UPDATE = CURRENT_TIMESTAMP,
		CRTRA_USUARIO_UPDATE = IN_CRTRA_USUARIO_UPDATE,
		REP_CRPER_CODIGO = IN_REP_CRPER_CODIGO,
		CHANGE_CRTST_CODIGO = INCHANGE_CRTST_CODIGO,
		CRTT_CODIGO = INCRTT_CODIGO
	WHERE
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;



CREATE OR REPLACE FUNCTION f_cgg_res_tramite_select(in_crtra_codigo character varying)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	SELECT
		CRTRA_CODIGO,
		CRPER_CODIGO,
		CRPJR_CODIGO,
		CGG_CRPER_CODIGO,
		CRPRO_CODIGO,
		CRTST_CODIGO,
		CVVEH_CODIGO,
		CRETT_CODIGO,
		CISLA_CODIGO,
		CVMTR_CODIGO,
		CGG_CVMTR_CODIGO,
		CGG_CVVEH_CODIGO,
		CRTRA_ANIO,
		CRTRA_NUMERO,
		CRTRA_FECHA_RECEPCION,
		CRTRA_ACTIVIDAD_RESIDENCIA,
		CRTRA_OBSERVACION,
		CRTRA_DIAS_PERMANENCIA,
		CRTRA_PENDIENTE,
		CRTRA_OBSERVACION_PENDIENTE,
		CRTRA_ATENCION_CLIENTE,
		CRTRA_COMUNICADO_RADIAL,
		CRTRA_MOTIVO,
		CRTRA_FOLIO,
		CRTRA_GRUPO,
		CRTRA_ORDEN,
		CRTRA_FECHA_INGRESO,
		CRTRA_FECHA_SALIDA,
		CRTRA_ESTADO,
		CRTRA_FECHA_INSERT,
		CRTRA_USUARIO_INSERT,
		CRTRA_USUARIO_INSERT,
		CRTRA_FECHA_UPDATE,
		CRTRA_USUARIO_UPDATE,
		REP_CRPER_CODIGO,
		CHANGE_CRTST_CODIGO,
		CRTT_CODIGO
	FROM SII.CGG_RES_TRAMITE
	WHERE CRTRA_ESTADO = TRUE AND
		CRTRA_CODIGO = IN_CRTRA_CODIGO;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;


CREATE OR REPLACE FUNCTION sii.f_cgg_res_tipo_solic_regla_s_cgg_res_tipo_solic_tramite1(in_crtst_codigo character varying)
  RETURNS SETOF refcursor AS
$BODY$
DECLARE
	TMP_REF REFCURSOR;
BEGIN
	OPEN TMP_REF FOR
	select
		CRTSE_CODIGO,
		CRTST_CODIGO,
		CRVAL_CODIGO,
		CRVAL_NOMBRE,
		trim(substring(CRTSE_CAMPO_EVALUACION from '^(.*:)'),'":"') CRTSE_VALOR_1,
		trim(SUBSTRING(CRTSE_CAMPO_EVALUACION,position(':' in CRTSE_CAMPO_EVALUACION)+1,length(CRTSE_CAMPO_EVALUACION)),'"') CRTSE_CAMPO_EVALUACION,
		CRTSE_ESTADO,
		CRTSE_FECHA_INSERT,
		CRTSE_USUARIO_INSERT,
		CRTSE_FECHA_UPDATE,
		CRTSE_USUARIO_UPDATE,
		CRTT_CODIGO
	from
	(SELECT
			CRTSE_CODIGO,
			CRTST_CODIGO,
			CRTSE.CRVAL_CODIGO,
			CRVAL.CRVAL_NOMBRE,
			regexp_split_to_table(trim(CRTSE_CAMPO_EVALUACION::text, '[{}]'), E',') CRTSE_CAMPO_EVALUACION,
			CRTSE_VALOR_1,
			CRTSE_ESTADO,
			CRTSE_FECHA_INSERT,
			CRTSE_USUARIO_INSERT,
			CRTSE_FECHA_UPDATE,
			CRTSE_USUARIO_UPDATE,
			CRTT_CODIGO
		FROM SII.CGG_RES_TIPO_SOLICITUD_REGLA CRTSE
		INNER JOIN SII.CGG_REGLA_VALIDACION CRVAL
		ON(CRTSE.CRVAL_CODIGO = CRVAL.CRVAL_CODIGO)
		WHERE CRTSE_ESTADO = TRUE AND
		CRTST_CODIGO = IN_CRTST_CODIGO) CGG_RES_TIPO_SOLICITUD_REGLA ;
	RETURN NEXT TMP_REF;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100
  ROWS 1000;


DROP FUNCTION sii.f_cgg_res_tipo_solicitud_regla_insert(character varying, character varying, character varying, character varying, character, boolean, character varying, character varying);

CREATE OR REPLACE FUNCTION sii.f_cgg_res_tipo_solicitud_regla_insert(in_crtse_codigo character varying, in_crtst_codigo character varying, in_crval_codigo character varying,
  in_crtse_campo_evaluacion character varying, in_crtse_valor_1 character, in_crtse_estado boolean, in_crtse_usuario_insert character varying,
  in_crtse_usuario_update character varying, in_crtt_codigo character varying)
  RETURNS character varying AS
$BODY$
DECLARE
OUT_KEY VARCHAR;
BEGIN
	IF (UPPER(IN_CRTSE_CODIGO) = 'KEYGEN') THEN
		SELECT SII.F_KEYGEN('CGG_RES_TIPO_SOLICITUD_REGLA','CRTSE_CODIGO','CRTSE') INTO OUT_KEY;
	ELSE
		OUT_KEY := IN_CRTSE_CODIGO;
	END IF;
	INSERT INTO SII.CGG_RES_TIPO_SOLICITUD_REGLA(
		CRTSE_CODIGO,
		CRTST_CODIGO,
		CRVAL_CODIGO,
		CRTSE_CAMPO_EVALUACION,
		CRTSE_VALOR_1,
		CRTSE_ESTADO,
		CRTSE_FECHA_INSERT,
		CRTSE_USUARIO_INSERT,
		CRTSE_FECHA_UPDATE,
		CRTSE_USUARIO_UPDATE,
		CRTT_CODIGO
	) VALUES (
		OUT_KEY,
		IN_CRTST_CODIGO,
		IN_CRVAL_CODIGO,
		IN_CRTSE_CAMPO_EVALUACION,
		IN_CRTSE_VALOR_1,
		IN_CRTSE_ESTADO,
		CURRENT_TIMESTAMP,
		IN_CRTSE_USUARIO_INSERT,
		CURRENT_TIMESTAMP,
		IN_CRTSE_USUARIO_UPDATE,
		in_crtt_codigo
	);
	RETURN OUT_KEY;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;

DROP FUNCTION sii.f_cgg_res_tipo_solicitud_regla_update(character varying, character varying, character varying, character varying, character, boolean, character varying);

CREATE OR REPLACE FUNCTION sii.f_cgg_res_tipo_solicitud_regla_update(in_crtse_codigo character varying, in_crtst_codigo character varying, in_crval_codigo character varying,
  in_crtse_campo_evaluacion character varying, in_crtse_valor_1 character, in_crtse_estado boolean, in_crtse_usuario_update character varying, in_crtt_codigo character varying)
  RETURNS void AS
$BODY$
BEGIN
	UPDATE SII.CGG_RES_TIPO_SOLICITUD_REGLA SET
		CRTST_CODIGO = IN_CRTST_CODIGO,
		CRVAL_CODIGO = IN_CRVAL_CODIGO,
		CRTSE_CAMPO_EVALUACION = IN_CRTSE_CAMPO_EVALUACION,
		CRTSE_VALOR_1 = IN_CRTSE_VALOR_1,
		CRTSE_ESTADO = IN_CRTSE_ESTADO,
		CRTSE_FECHA_UPDATE = CURRENT_TIMESTAMP,
		CRTSE_USUARIO_UPDATE = IN_CRTSE_USUARIO_UPDATE,
		CRTT_CODIGO = in_crtt_codigo
	WHERE
		CRTSE_CODIGO = IN_CRTSE_CODIGO;
END
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;

--> MIGRATION SCRIPT CONTROLLER <--
INSERT INTO sii.cgg_migrationscript (mrgsp_codigo,mrgsp_fecha,mrgsp_usuario_insert,mrgsp_fecha_insert,mrgsp_usuario_update,mrgsp_fecha_update,
	mrgsp_estado,mrgsp_developer,mrgsp_name,mrgsp_description,
	mrgsp_releaseno,mrgsp_filename,mrgsp_isapply)
VALUES(SII.F_KEYGEN('CGG_MIGRATIONSCRIPT','MRGSP_CODIGO','MRGSP'), current_timestamp,'ADMIN', current_timestamp,'ADMIN', current_timestamp,
	true,'acanaveral','TIPO TRAMITE REGLAS','Agrega la funcionalidad de filtrar las reglas por tipo de tramite',
	'2.0','2016_08_01_ReglaPorTipoTramite.sql',true);